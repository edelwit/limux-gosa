<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN"
    "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">

<html xmlns="http://www.w3.org/1999/xhtml">
<head>
  <meta name="generator" content=
  "HTML Tidy for Linux (vers 25 March 2009), see www.w3.org" />
  <meta content="text/html; charset=us-ascii" http-equiv=
  "content-type" />
  <style type="text/css">
/*<![CDATA[*/
  .lst-kix_ufzf1orjb24z-4>li:before{content:"\0025cb  "}.lst-kix_herycab31j2a-0>li:before{content:"\0025cf  "}.lst-kix_ufzf1orjb24z-3>li:before{content:"\0025cf  "}.lst-kix_ufzf1orjb24z-7>li:before{content:"\0025cb  "}.lst-kix_ufzf1orjb24z-0>li:before{content:"\0025cf  "}.lst-kix_ufzf1orjb24z-8>li:before{content:"\0025a0  "}.lst-kix_herycab31j2a-5>li:before{content:"\0025a0  "}.lst-kix_ufzf1orjb24z-2>li:before{content:"\0025a0  "}.lst-kix_herycab31j2a-6>li:before{content:"\0025cf  "}.lst-kix_ufzf1orjb24z-1>li:before{content:"\0025cb  "}.lst-kix_herycab31j2a-4>li:before{content:"\0025cb  "}.lst-kix_herycab31j2a-3>li:before{content:"\0025cf  "}.lst-kix_herycab31j2a-1>li:before{content:"\0025cb  "}.lst-kix_herycab31j2a-2>li:before{content:"\0025a0  "}.lst-kix_16eukovhtu33-4>li:before{content:"\0025cb  "}.lst-kix_16eukovhtu33-5>li:before{content:"\0025a0  "}.lst-kix_16eukovhtu33-6>li:before{content:"\0025cf  "}.lst-kix_td5fvkhbf6hv-1>li:before{content:"\0025cb  "}.lst-kix_16eukovhtu33-7>li:before{content:"\0025cb  "}.lst-kix_td5fvkhbf6hv-0>li:before{content:"\0025cf  "}.lst-kix_5ix422mr1rnq-0>li:before{content:"\0025cf  "}.lst-kix_5ix422mr1rnq-1>li:before{content:"\0025cb  "}.lst-kix_16eukovhtu33-8>li:before{content:"\0025a0  "}.lst-kix_5ix422mr1rnq-2>li:before{content:"\0025a0  "}.lst-kix_ufzf1orjb24z-6>li:before{content:"\0025cf  "}.lst-kix_ufzf1orjb24z-5>li:before{content:"\0025a0  "}.lst-kix_5ix422mr1rnq-8>li:before{content:"\0025a0  "}ul.lst-kix_jvri6di0i9ru-1{list-style-type:none}ul.lst-kix_jvri6di0i9ru-0{list-style-type:none}ul.lst-kix_jvri6di0i9ru-3{list-style-type:none}.lst-kix_5ix422mr1rnq-6>li:before{content:"\0025cf  "}ul.lst-kix_jvri6di0i9ru-2{list-style-type:none}ul.lst-kix_jvri6di0i9ru-5{list-style-type:none}ul.lst-kix_jvri6di0i9ru-4{list-style-type:none}ul.lst-kix_ufzf1orjb24z-4{list-style-type:none}.lst-kix_5ix422mr1rnq-4>li:before{content:"\0025cb  "}.lst-kix_5ix422mr1rnq-5>li:before{content:"\0025a0  "}ul.lst-kix_ufzf1orjb24z-5{list-style-type:none}ul.lst-kix_ufzf1orjb24z-6{list-style-type:none}ul.lst-kix_ufzf1orjb24z-7{list-style-type:none}ul.lst-kix_ufzf1orjb24z-0{list-style-type:none}.lst-kix_5ix422mr1rnq-3>li:before{content:"\0025cf  "}ul.lst-kix_ufzf1orjb24z-1{list-style-type:none}ul.lst-kix_ufzf1orjb24z-2{list-style-type:none}ul.lst-kix_ufzf1orjb24z-3{list-style-type:none}ul.lst-kix_ufzf1orjb24z-8{list-style-type:none}.lst-kix_td5fvkhbf6hv-2>li:before{content:"\0025a0  "}.lst-kix_td5fvkhbf6hv-3>li:before{content:"\0025cf  "}ul.lst-kix_jvri6di0i9ru-7{list-style-type:none}ul.lst-kix_jvri6di0i9ru-6{list-style-type:none}ul.lst-kix_jvri6di0i9ru-8{list-style-type:none}.lst-kix_td5fvkhbf6hv-5>li:before{content:"\0025a0  "}.lst-kix_16eukovhtu33-3>li:before{content:"\0025cf  "}.lst-kix_5ix422mr1rnq-7>li:before{content:"\0025cb  "}.lst-kix_td5fvkhbf6hv-4>li:before{content:"\0025cb  "}.lst-kix_td5fvkhbf6hv-7>li:before{content:"\0025cb  "}.lst-kix_16eukovhtu33-1>li:before{content:"\0025cb  "}.lst-kix_16eukovhtu33-2>li:before{content:"\0025a0  "}.lst-kix_16eukovhtu33-0>li:before{content:"\0025cf  "}.lst-kix_td5fvkhbf6hv-6>li:before{content:"\0025cf  "}ul.lst-kix_5ix422mr1rnq-6{list-style-type:none}ul.lst-kix_5ix422mr1rnq-7{list-style-type:none}ul.lst-kix_5ix422mr1rnq-4{list-style-type:none}ul.lst-kix_td5fvkhbf6hv-7{list-style-type:none}ul.lst-kix_5ix422mr1rnq-5{list-style-type:none}ul.lst-kix_td5fvkhbf6hv-8{list-style-type:none}ul.lst-kix_16eukovhtu33-8{list-style-type:none}ul.lst-kix_5ix422mr1rnq-2{list-style-type:none}ul.lst-kix_td5fvkhbf6hv-5{list-style-type:none}ul.lst-kix_16eukovhtu33-7{list-style-type:none}ul.lst-kix_5ix422mr1rnq-3{list-style-type:none}ul.lst-kix_td5fvkhbf6hv-6{list-style-type:none}ul.lst-kix_16eukovhtu33-6{list-style-type:none}ul.lst-kix_5ix422mr1rnq-0{list-style-type:none}ul.lst-kix_td5fvkhbf6hv-3{list-style-type:none}.lst-kix_td5fvkhbf6hv-8>li:before{content:"\0025a0  "}ul.lst-kix_16eukovhtu33-5{list-style-type:none}ul.lst-kix_5ix422mr1rnq-1{list-style-type:none}ul.lst-kix_td5fvkhbf6hv-4{list-style-type:none}.lst-kix_herycab31j2a-7>li:before{content:"\0025cb  "}ul.lst-kix_16eukovhtu33-4{list-style-type:none}ul.lst-kix_td5fvkhbf6hv-1{list-style-type:none}ul.lst-kix_16eukovhtu33-3{list-style-type:none}ul.lst-kix_td5fvkhbf6hv-2{list-style-type:none}ul.lst-kix_16eukovhtu33-2{list-style-type:none}ul.lst-kix_16eukovhtu33-1{list-style-type:none}ul.lst-kix_td5fvkhbf6hv-0{list-style-type:none}ul.lst-kix_16eukovhtu33-0{list-style-type:none}.lst-kix_herycab31j2a-8>li:before{content:"\0025a0  "}.lst-kix_nxjzkw9ekwnk-6>li:before{content:"\0025cf  "}.lst-kix_nxjzkw9ekwnk-4>li:before{content:"\0025cb  "}.lst-kix_nxjzkw9ekwnk-8>li:before{content:"\0025a0  "}.lst-kix_nxjzkw9ekwnk-2>li:before{content:"\0025a0  "}.lst-kix_k3rdkuom7ijv-5>li:before{content:"\0025a0  "}ul.lst-kix_5ix422mr1rnq-8{list-style-type:none}.lst-kix_k3rdkuom7ijv-7>li:before{content:"\0025cb  "}ul.lst-kix_qcfysk3gr1ej-2{list-style-type:none}ul.lst-kix_qcfysk3gr1ej-3{list-style-type:none}ul.lst-kix_qcfysk3gr1ej-0{list-style-type:none}ul.lst-kix_qcfysk3gr1ej-1{list-style-type:none}ul.lst-kix_qcfysk3gr1ej-6{list-style-type:none}.lst-kix_k3rdkuom7ijv-1>li:before{content:"\0025cb  "}ul.lst-kix_qcfysk3gr1ej-7{list-style-type:none}.lst-kix_6cm39fkb7m42-3>li:before{content:"\0025cf  "}ul.lst-kix_qcfysk3gr1ej-4{list-style-type:none}ul.lst-kix_qcfysk3gr1ej-5{list-style-type:none}.lst-kix_k3rdkuom7ijv-3>li:before{content:"\0025cf  "}ul.lst-kix_qcfysk3gr1ej-8{list-style-type:none}.lst-kix_6cm39fkb7m42-1>li:before{content:"\0025cb  "}.lst-kix_nxjzkw9ekwnk-0>li:before{content:"\0025cf  "}.lst-kix_7o9ou2w0r811-7>li:before{content:"\0025cb  "}.lst-kix_6cm39fkb7m42-5>li:before{content:"\0025a0  "}.lst-kix_6cm39fkb7m42-7>li:before{content:"\0025cb  "}.lst-kix_jvri6di0i9ru-3>li:before{content:"\0025cf  "}.lst-kix_jvri6di0i9ru-5>li:before{content:"\0025a0  "}ul.lst-kix_utsbfkm2i00z-8{list-style-type:none}.lst-kix_jvri6di0i9ru-2>li:before{content:"\0025a0  "}.lst-kix_jvri6di0i9ru-6>li:before{content:"\0025cf  "}ul.lst-kix_7o9ou2w0r811-6{list-style-type:none}ul.lst-kix_nxjzkw9ekwnk-2{list-style-type:none}ul.lst-kix_7o9ou2w0r811-5{list-style-type:none}ul.lst-kix_nxjzkw9ekwnk-3{list-style-type:none}.lst-kix_utsbfkm2i00z-6>li:before{content:"\0025cf  "}ul.lst-kix_7o9ou2w0r811-4{list-style-type:none}ul.lst-kix_nxjzkw9ekwnk-4{list-style-type:none}ul.lst-kix_7o9ou2w0r811-3{list-style-type:none}ul.lst-kix_nxjzkw9ekwnk-5{list-style-type:none}.lst-kix_jvri6di0i9ru-1>li:before{content:"\0025cb  "}.lst-kix_jvri6di0i9ru-7>li:before{content:"\0025cb  "}.lst-kix_utsbfkm2i00z-5>li:before{content:"\0025a0  "}ul.lst-kix_7o9ou2w0r811-2{list-style-type:none}ul.lst-kix_7o9ou2w0r811-1{list-style-type:none}ul.lst-kix_7o9ou2w0r811-0{list-style-type:none}ul.lst-kix_nxjzkw9ekwnk-0{list-style-type:none}ul.lst-kix_nxjzkw9ekwnk-1{list-style-type:none}.lst-kix_jvri6di0i9ru-0>li:before{content:"\0025cf  "}.lst-kix_jvri6di0i9ru-8>li:before{content:"\0025a0  "}.lst-kix_utsbfkm2i00z-3>li:before{content:"\0025cf  "}.lst-kix_utsbfkm2i00z-2>li:before{content:"\0025a0  "}.lst-kix_utsbfkm2i00z-4>li:before{content:"\0025cb  "}ul.lst-kix_7o9ou2w0r811-8{list-style-type:none}ul.lst-kix_7o9ou2w0r811-7{list-style-type:none}ul.lst-kix_utsbfkm2i00z-4{list-style-type:none}ul.lst-kix_utsbfkm2i00z-5{list-style-type:none}.lst-kix_utsbfkm2i00z-0>li:before{content:"\0025cf  "}ul.lst-kix_utsbfkm2i00z-6{list-style-type:none}ul.lst-kix_utsbfkm2i00z-7{list-style-type:none}ul.lst-kix_utsbfkm2i00z-0{list-style-type:none}.lst-kix_utsbfkm2i00z-1>li:before{content:"\0025cf  "}ul.lst-kix_utsbfkm2i00z-1{list-style-type:none}ul.lst-kix_utsbfkm2i00z-2{list-style-type:none}ul.lst-kix_utsbfkm2i00z-3{list-style-type:none}ul.lst-kix_nxjzkw9ekwnk-6{list-style-type:none}ul.lst-kix_nxjzkw9ekwnk-7{list-style-type:none}ul.lst-kix_nxjzkw9ekwnk-8{list-style-type:none}.lst-kix_7o9ou2w0r811-5>li:before{content:"\0025a0  "}.lst-kix_qcfysk3gr1ej-6>li:before{content:"\0025cf  "}.lst-kix_qcfysk3gr1ej-8>li:before{content:"\0025a0  "}.lst-kix_7o9ou2w0r811-3>li:before{content:"\0025cf  "}.lst-kix_7o9ou2w0r811-4>li:before{content:"\0025cb  "}.lst-kix_qcfysk3gr1ej-7>li:before{content:"\0025cb  "}ul.lst-kix_6cm39fkb7m42-7{list-style-type:none}.lst-kix_7o9ou2w0r811-1>li:before{content:"\0025cb  "}.lst-kix_7o9ou2w0r811-2>li:before{content:"\0025a0  "}ul.lst-kix_6cm39fkb7m42-6{list-style-type:none}ul.lst-kix_6cm39fkb7m42-8{list-style-type:none}.lst-kix_qcfysk3gr1ej-4>li:before{content:"\0025cb  "}.lst-kix_qcfysk3gr1ej-5>li:before{content:"\0025a0  "}ul.lst-kix_herycab31j2a-7{list-style-type:none}ul.lst-kix_herycab31j2a-6{list-style-type:none}ul.lst-kix_6cm39fkb7m42-1{list-style-type:none}ul.lst-kix_herycab31j2a-8{list-style-type:none}ul.lst-kix_6cm39fkb7m42-0{list-style-type:none}ul.lst-kix_6cm39fkb7m42-3{list-style-type:none}.lst-kix_7o9ou2w0r811-0>li:before{content:"\0025cf  "}ul.lst-kix_6cm39fkb7m42-2{list-style-type:none}ul.lst-kix_6cm39fkb7m42-5{list-style-type:none}ul.lst-kix_6cm39fkb7m42-4{list-style-type:none}ul.lst-kix_herycab31j2a-1{list-style-type:none}ul.lst-kix_herycab31j2a-0{list-style-type:none}ul.lst-kix_herycab31j2a-3{list-style-type:none}ul.lst-kix_herycab31j2a-2{list-style-type:none}ul.lst-kix_herycab31j2a-5{list-style-type:none}ul.lst-kix_herycab31j2a-4{list-style-type:none}.lst-kix_qcfysk3gr1ej-0>li:before{content:"\0025cf  "}.lst-kix_qcfysk3gr1ej-3>li:before{content:"\0025cf  "}.lst-kix_utsbfkm2i00z-7>li:before{content:"\0025cb  "}.lst-kix_utsbfkm2i00z-8>li:before{content:"\0025a0  "}.lst-kix_qcfysk3gr1ej-2>li:before{content:"\0025a0  "}.lst-kix_jvri6di0i9ru-4>li:before{content:"\0025cb  "}.lst-kix_qcfysk3gr1ej-1>li:before{content:"\0025cb  "}.lst-kix_nxjzkw9ekwnk-7>li:before{content:"\0025cb  "}.lst-kix_nxjzkw9ekwnk-3>li:before{content:"\0025cf  "}.lst-kix_nxjzkw9ekwnk-1>li:before{content:"\0025cb  "}.lst-kix_k3rdkuom7ijv-6>li:before{content:"\0025cf  "}.lst-kix_k3rdkuom7ijv-4>li:before{content:"\0025cb  "}.lst-kix_k3rdkuom7ijv-8>li:before{content:"\0025a0  "}.lst-kix_nxjzkw9ekwnk-5>li:before{content:"\0025a0  "}.lst-kix_k3rdkuom7ijv-0>li:before{content:"\0025cf  "}.lst-kix_6cm39fkb7m42-4>li:before{content:"\0025cb  "}.lst-kix_k3rdkuom7ijv-2>li:before{content:"\0025a0  "}.lst-kix_6cm39fkb7m42-2>li:before{content:"\0025a0  "}.lst-kix_6cm39fkb7m42-0>li:before{content:"\0025cf  "}.lst-kix_7o9ou2w0r811-6>li:before{content:"\0025cf  "}.lst-kix_7o9ou2w0r811-8>li:before{content:"\0025a0  "}ul.lst-kix_k3rdkuom7ijv-7{list-style-type:none}ul.lst-kix_k3rdkuom7ijv-8{list-style-type:none}ul.lst-kix_k3rdkuom7ijv-5{list-style-type:none}ul.lst-kix_k3rdkuom7ijv-6{list-style-type:none}ul.lst-kix_k3rdkuom7ijv-3{list-style-type:none}ul.lst-kix_k3rdkuom7ijv-4{list-style-type:none}ul.lst-kix_k3rdkuom7ijv-1{list-style-type:none}ul.lst-kix_k3rdkuom7ijv-2{list-style-type:none}.lst-kix_6cm39fkb7m42-6>li:before{content:"\0025cf  "}.lst-kix_6cm39fkb7m42-8>li:before{content:"\0025a0  "}ul.lst-kix_k3rdkuom7ijv-0{list-style-type:none}ol{margin:0;padding:0}table td,table th{padding:0}.c31{background-color:#ffffff;max-width:523.3pt;padding:36pt 36pt 36pt 36pt}.c3{margin-left:72pt;padding-top:0pt;padding-bottom:0pt}.c25{font-size:12pt;color:#666666}.c30{font-size:11pt;font-weight:normal}.c16{padding-top:14pt;padding-bottom:4pt}.c4{padding-top:0pt;padding-bottom:0pt}.c6{color:#1155cc;text-decoration:underline}.c10{padding-top:18pt;padding-bottom:4pt}.c20{padding:0;margin:0}.c8{color:inherit;text-decoration:inherit}.c28{padding-top:24pt;padding-bottom:6pt}.c29{font-size:14pt}.c15{line-height:1.15}.c26{padding-top:18pt}.c5{margin-left:72pt}.c0{font-weight:bold}.c32{text-align:center}.c12{height:11pt}.c23{height:12pt}.c21{height:14pt}.c13{margin-left:180pt}.c11{font-style:italic}.c9{margin-left:108pt}.c19{color:#000000}.c2{margin-left:36pt}.c18{margin-left:144pt}.c24{padding-top:14pt}.c7{margin-left:54pt}.c22{vertical-align:sub}.c17{margin-left:18pt}.c14{padding-left:0pt}.c1{font-family:"Courier New"}.c27{line-height:1.0}.title{padding-top:24pt;color:#000000;font-weight:bold;font-size:30pt;padding-bottom:6pt;font-family:"Arial";line-height:1.15;text-align:left}.subtitle{padding-top:18pt;color:#666666;font-size:24pt;padding-bottom:4pt;font-family:"Georgia";line-height:1.15;font-style:italic;text-align:left}li{color:#000000;font-size:11pt;font-family:"Arial"}p{margin:0;color:#000000;font-size:11pt;font-family:"Arial"}h1{padding-top:24pt;color:#000000;font-weight:bold;font-size:18pt;padding-bottom:6pt;font-family:"Arial";line-height:1.15;text-align:left}h2{padding-top:18pt;color:#000000;font-weight:bold;font-size:14pt;padding-bottom:4pt;font-family:"Arial";line-height:1.15;text-align:left}h3{padding-top:14pt;color:#666666;font-weight:bold;font-size:12pt;padding-bottom:4pt;font-family:"Arial";line-height:1.15;text-align:left}h4{padding-top:12pt;color:#666666;font-size:11pt;padding-bottom:2pt;font-family:"Arial";line-height:1.15;font-style:italic;text-align:left}h5{padding-top:11pt;color:#666666;font-weight:bold;font-size:10pt;padding-bottom:2pt;font-family:"Arial";line-height:1.15;text-align:left}h6{padding-top:10pt;color:#666666;font-size:10pt;padding-bottom:2pt;font-family:"Arial";line-height:1.15;font-style:italic;text-align:left}
  /*]]>*/
  </style>

  <title></title>
</head>

<body class="c31">
  <p class="title"><a id="h.vqantooav6cy" name=
  "h.vqantooav6cy"></a><span>GO-SUSI Operator&#8217;s
  Manual</span></p>

  <p class="c17"><span class="c6"><a class="c8" href=
  "#h.qpuowmrty7yb">Overview</a></span></p>

  <p class="c17"><span class="c6"><a class="c8" href=
  "#h.u0s09hxn0kr0">Invocation</a></span></p>

  <p class="c2"><span class="c6"><a class="c8" href=
  "#h.noyiy3hxsuzj">Background operation</a></span></p>

  <p class="c17"><span class="c6"><a class="c8" href=
  "#h.kargb81n8lw4">Configuration</a></span></p>

  <p class="c2"><span class="c6"><a class="c8" href=
  "#h.vv09slb55j">DNS configuration</a></span></p>

  <p class="c2"><span class="c6"><a class="c8" href=
  "#h.bqrhjen52ghs">TCP Keep-Alive</a></span></p>

  <p class="c2"><span class="c6"><a class="c8" href=
  "#h.rhxe5y7vanz9">Configuration file
  /etc/gosa-si/server.conf</a></span></p>

  <p class="c2"><span class="c6"><a class="c8" href=
  "#h.7fa10jpoaora">Configuration file
  /etc/gosa-si/client.conf</a></span></p>

  <p class="c2"><span class="c6"><a class="c8" href=
  "#h.bf0dgl3dgls6">Configuration file
  /etc/gosa/ou=servers.conf</a></span></p>

  <p class="c17"><span class="c6"><a class="c8" href=
  "#h.v12xmehtov9u">Hooks</a></span></p>

  <p class="c2"><span class="c6"><a class="c8" href=
  "#h.emgj929gpns8">Hook environment</a></span></p>

  <p class="c2"><span class="c6"><a class="c8" href=
  "#h.uflhopltjofk">kernel-list-hook</a></span></p>

  <p class="c2"><span class="c6"><a class="c8" href=
  "#h.lcg0co1fq2xh">package-list-hook</a></span></p>

  <p class="c2"><span class="c6"><a class="c8" href=
  "#h.jl9h7nlx12bl">user-msg-hook</a></span></p>

  <p class="c2"><span class="c6"><a class="c8" href=
  "#h.3eksnwm3fz5s">pxelinux-cfg-hook</a></span></p>

  <p class="c2"><span class="c6"><a class="c8" href=
  "#h.4xal5cuhnf5d">TFTP hooks</a></span></p>

  <p class="c2"><span class="c6"><a class="c8" href=
  "#h.tmddyclmp68v">new-config-hook</a></span></p>

  <p class="c2"><span class="c6"><a class="c8" href=
  "#h.ajcepjvthivg">trigger-action-hook</a></span></p>

  <p class="c2"><span class="c6"><a class="c8" href=
  "#h.kha1w05s1k8z">registered-hook</a></span></p>

  <p class="c2"><span class="c6"><a class="c8" href=
  "#h.aksqy9t8gyyf">activated-hook</a></span></p>

  <p class="c2"><span class="c6"><a class="c8" href=
  "#h.ujvi2n3gkv1g">detect-hardware-hook</a></span></p>

  <p class="c2"><span class="c6"><a class="c8" href=
  "#h.i2wshb9a7t92">fai-progress-hook</a></span></p>

  <p class="c2"><span class="c6"><a class="c8" href=
  "#h.md5sni9nns2l">fai-savelog-hook</a></span></p>

  <p class="c17"><span class="c6"><a class="c8" href=
  "#h.hzdxkgexaqdo">Interfacing with go-susi</a></span></p>

  <p class="c2"><span class="c6"><a class="c8" href=
  "#h.36xshbk95lq">TCP connection to [server]/port</a></span></p>

  <p class="c2"><span class="c6"><a class="c8" href=
  "#h.99ysh1gd1xn3">TCP connection to [faimon]/port</a></span></p>

  <p class="c2"><span class="c6"><a class="c8" href=
  "#h.ue6pv2ufxyrz">TFTP server on [tftp]/port (UDP)</a></span></p>

  <p class="c2"><span class="c6"><a class="c8" href=
  "#h.l0vggs5nqxsf">Signals</a></span></p>

  <p class="c17"><span class="c6"><a class="c8" href=
  "#h.3dolgdo847j1">/var/lib/go-susi database</a></span></p>

  <p class="c2"><span class="c6"><a class="c8" href=
  "#h.4alj9q9r8lq3">jobdb.xml</a></span></p>

  <p class="c2"><span class="c6"><a class="c8" href=
  "#h.50wdi3uufl9n">serverdb.xml</a></span></p>

  <p class="c2"><span class="c6"><a class="c8" href=
  "#h.q5bbvyapnxmg">clientdb.xml</a></span></p>

  <p class="c17"><span class="c6"><a class="c8" href=
  "#h.ed4sng37wuoy">Messages</a></span></p>

  <p class="c2"><span class="c6"><a class="c8" href=
  "#h.yo95uphqjhiy">Modern communication protocol (go-susi
  only)</a></span></p>

  <p class="c2"><span class="c6"><a class="c8" href=
  "#h.cd7ky6j7y55t">Legacy communication protocol (compatible with
  gosa-si)</a></span></p>

  <p class="c2"><span class="c6"><a class="c8" href=
  "#h.q0xsu7rifamf">Message structure and common
  elements</a></span></p>

  <p class="c2"><span class="c6"><a class="c8" href=
  "#h.v3ibvnwfeq4q">Reply structure</a></span></p>

  <p class="c2"><span class="c6"><a class="c8" href=
  "#h.sh9p65qhzwco">Error replies</a></span></p>

  <p class="c2"><span class="c6"><a class="c8" href=
  "#h.1tre848fj84d">Encryption keys</a></span></p>

  <p class="c2"><span class="c6"><a class="c8" href=
  "#h.o2gkp1mdgfab">Jobs</a></span></p>

  <p class="c7"><span class="c6"><a class="c8" href=
  "#h.lytqmekfw49">job_trigger_action_*</a></span></p>

  <p class="c7"><span class="c6"><a class="c8" href=
  "#h.18ajv1iep81s">gosa_trigger_action_*</a></span></p>

  <p class="c7"><span class="c6"><a class="c8" href=
  "#h.rfc7061kx2wn">job_trigger_activate_new</a></span></p>

  <p class="c7"><span class="c6"><a class="c8" href=
  "#h.b1cynga2n4f7">gosa_set_activated_for_installation</a></span></p>

  <p class="c7"><span class="c6"><a class="c8" href=
  "#h.vc4zvgp0v9ry">job_set_activated_for_installation</a></span></p>

  <p class="c7"><span class="c6"><a class="c8" href=
  "#h.y5al68gnxmpw">job_send_user_msg</a></span></p>

  <p class="c7"><span class="c6"><a class="c8" href=
  "#h.wj0yc4cuajj2">gosa_query_jobdb</a></span></p>

  <p class="c7"><span class="c6"><a class="c8" href=
  "#h.am3mtnji9zso">gosa_delete_jobdb_entry</a></span></p>

  <p class="c7"><span class="c6"><a class="c8" href=
  "#h.aa2wm0ojc2ux">gosa_update_status_jobdb_entry</a></span></p>

  <p class="c2"><span class="c6"><a class="c8" href=
  "#h.n1abt4rakrkh">Server - Server</a></span></p>

  <p class="c7"><span class="c6"><a class="c8" href=
  "#h.ggvkhagjviu">new_server</a></span></p>

  <p class="c7"><span class="c6"><a class="c8" href=
  "#h.t6s5fv3aa5zt">confirm_new_server</a></span></p>

  <p class="c7"><span class="c6"><a class="c8" href=
  "#h.d21gga45wxtz">foreign_job_updates</a></span></p>

  <p class="c7"><span class="c6"><a class="c8" href=
  "#h.4o43ycaft42x">new_foreign_client</a></span></p>

  <p class="c7"><span class="c6"><a class="c8" href=
  "#h.z3ec199pha6w">trigger_wake</a></span></p>

  <p class="c2"><span class="c6"><a class="c8" href=
  "#h.w73b9qoqu5cg">Client - Server</a></span></p>

  <p class="c7"><span class="c6"><a class="c8" href=
  "#h.w909y3vom7bh">here_i_am</a></span></p>

  <p class="c7"><span class="c6"><a class="c8" href=
  "#h.uw29iuabpm6q">new_key</a></span></p>

  <p class="c7"><span class="c6"><a class="c8" href=
  "#h.w5skplmpyja8">registered</a></span></p>

  <p class="c7"><span class="c6"><a class="c8" href=
  "#h.adu9m7a7h8yw">deregistered</a></span></p>

  <p class="c7"><span class="c6"><a class="c8" href=
  "#h.l3p6rg78vgh1">new_ldap_config</a></span></p>

  <p class="c7"><span class="c6"><a class="c8" href=
  "#h.gprzmis7xdu9">new_ntp_config</a></span></p>

  <p class="c7"><span class="c6"><a class="c8" href=
  "#h.hoqs75a5zaxq">detect_hardware</a></span></p>

  <p class="c7"><span class="c6"><a class="c8" href=
  "#h.ylkn6o4e9qjp">detected_hardware</a></span></p>

  <p class="c7"><span class="c6"><a class="c8" href=
  "#h.ylgwskj1nfmx">trigger_action_*</a></span></p>

  <p class="c2"><span class="c6"><a class="c8" href=
  "#h.g0n6u5xsrhzi">Installation and Softupdate</a></span></p>

  <p class="c7"><span class="c6"><a class="c8" href=
  "#h.finq4l4vjm98">set_activated_for_installation</a></span></p>

  <p class="c7"><span class="c6"><a class="c8" href=
  "#h.ntyp12z772rh">CLMSG_PROGRESS</a></span></p>

  <p class="c7"><span class="c6"><a class="c8" href=
  "#h.n5rmujuoqo6x">CLMSG_GOTOACTIVATION</a></span></p>

  <p class="c7"><span class="c6"><a class="c8" href=
  "#h.95smg2f0t4s6">CLMSG_save_fai_log</a></span></p>

  <p class="c7"><span class="c6"><a class="c8" href=
  "#h.g7r8biivaqpb">CLMSG_&lt;FAI MONITOR EVENT&gt;</a></span></p>

  <p class="c7"><span class="c6"><a class="c8" href=
  "#h.69oiwe17guu6">CLMSG_TASKBEGIN / CLMSG_TASKERROR /
  CLMSG_TASKEND</a></span></p>

  <p class="c7"><span class="c6"><a class="c8" href=
  "#h.2sm8tu2tcdzu">CLMSG_TASKDIE</a></span></p>

  <p class="c7"><span class="c6"><a class="c8" href=
  "#h.z4re866t15e6">CLMSG_check</a></span></p>

  <p class="c2"><span class="c6"><a class="c8" href=
  "#h.p40mxwr1vmxg">Query various information</a></span></p>

  <p class="c7"><span class="c6"><a class="c8" href=
  "#h.vnc6qrea3m0g">gosa_query_fai_server</a></span></p>

  <p class="c7"><span class="c6"><a class="c8" href=
  "#h.1c4dc8mqlioo">gosa_query_fai_release</a></span></p>

  <p class="c7"><span class="c6"><a class="c8" href=
  "#h.k0ukjz6z8za5">gosa_query_packages_list</a></span></p>

  <p class="c7"><span class="c6"><a class="c8" href=
  "#h.3ws61p27du89">gosa_get_available_kernel</a></span></p>

  <p class="c7"><span class="c6"><a class="c8" href=
  "#h.n4mrnc8f9h1c">gosa_show_log_by_mac</a></span></p>

  <p class="c7"><span class="c6"><a class="c8" href=
  "#h.mgjs4al2n8iv">gosa_show_log_files_by_date_and_mac</a></span></p>

  <p class="c7"><span class="c6"><a class="c8" href=
  "#h.87z05qg5bmin">gosa_get_log_file_by_date_and_mac</a></span></p>

  <p class="c2"><span class="c6"><a class="c8" href=
  "#h.mehsqejmttjq">Miscellaneous</a></span></p>

  <p class="c7"><span class="c6"><a class="c8" href=
  "#h.lysjsrs0l1xj">gosa_ping</a></span></p>

  <p class="c7"><span class="c6"><a class="c8" href=
  "#h.sp869tnshz6d">panic</a></span></p>

  <p class="c7"><span class="c6"><a class="c8" href=
  "#h.1f6kgewdm74c">sistats</a></span></p>

  <p class="c7"><span class="c6"><a class="c8" href=
  "#h.4syp8tvmprfx">gosa_trigger_reload_ldap_config</a></span></p>

  <p class="c7"><span class="c6"><a class="c8" href=
  "#h.9n1vwe81fzyi">gosa_recreate_fai_release_db</a></span></p>

  <p class="c2"><span class="c6"><a class="c8" href=
  "#h.fn2pc4k1bcbp">Deprecated</a></span></p>

  <p class="c7"><span class="c6"><a class="c8" href=
  "#h.itw5nv66zjdc">CLMSG_CURRENTLY_LOGGED_IN</a></span></p>

  <p class="c7"><span class="c6"><a class="c8" href=
  "#h.p7etfjet6df2">CLMSG_LOGIN</a></span></p>

  <p class="c7"><span class="c6"><a class="c8" href=
  "#h.o8zsmxn55w4">CLMSG_LOGOUT</a></span></p>

  <p class="c7"><span class="c6"><a class="c8" href=
  "#h.1nxkurs4dznc">information_sharing</a></span></p>

  <p class="c7"><span class="c6"><a class="c8" href=
  "#h.le5ca3ebk6m4">usr_msg</a></span></p>

  <p class="c7"><span class="c6"><a class="c8" href=
  "#h.tjnsr0p4y1zm">confirm_usr_msg</a></span></p>

  <p class="c17"><span class="c6"><a class="c8" href=
  "#h.7g7l42ni6zqg">Appendix</a></span></p>

  <p class="c2"><span class="c6"><a class="c8" href=
  "#h.bumhouula4zt">sibridge</a></span></p>

  <p class="c7"><span class="c6"><a class="c8" href=
  "#h.gieyvwnkib9d">SYNOPSIS</a></span></p>

  <p class="c7"><span class="c6"><a class="c8" href=
  "#h.uveotml3h6xt">DESCRIPTION</a></span></p>

  <p class="c7"><span class="c6"><a class="c8" href=
  "#h.n3hj3y4xe5mb">OPTIONS</a></span></p>

  <p class="c7"><span class="c6"><a class="c8" href=
  "#h.6rx898z6itc8">TLS CERTIFICATES</a></span></p>

  <p class="c2"><span class="c6"><a class="c8" href=
  "#h.p43j0wkucxlz">generate_package_list</a></span></p>

  <p class="c7"><span class="c6"><a class="c8" href=
  "#h.7kplqidsegca">SYNOPSIS</a></span></p>

  <p class="c7"><span class="c6"><a class="c8" href=
  "#h.4p55nppm0mq2">DESCRIPTION</a></span></p>

  <p class="c7"><span class="c6"><a class="c8" href=
  "#h.80bfn3ok2vz7">WARNING</a></span></p>

  <p class="c7"><span class="c6"><a class="c8" href=
  "#h.pw7zmxe7trmy">ENVIRONMENT</a></span></p>

  <p class="c2"><span class="c6"><a class="c8" href=
  "#h.3chfrh90z9ft">initrd_autopack</a></span></p>

  <p class="c7"><span class="c6"><a class="c8" href=
  "#h.b4p9n1w3grfh">SYNOPSIS</a></span></p>

  <p class="c7"><span class="c6"><a class="c8" href=
  "#h.9u6o9qfwa26i">DESCRIPTION</a></span></p>

  <p class="c7"><span class="c6"><a class="c8" href=
  "#h.dqyfzc39cpkr">OPTIONS</a></span></p>

  <p class="c2"><span class="c6"><a class="c8" href=
  "#h.fiklmh4wvmzp">TLS Certificates</a></span></p>

  <p class="c7"><span class="c6"><a class="c8" href=
  "#h.o7klfc2r3utv">DESCRIPTION</a></span></p>

  <p class="c7"><span class="c6"><a class="c8" href=
  "#h.7y1jg8wwidfm">subjectAltName</a></span></p>

  <p class="c7"><span class="c6"><a class="c8" href=
  "#h.8cv517swdkbd">Connection and data transfer
  limits</a></span></p>

  <p class="c7"><span class="c6"><a class="c8" href=
  "#h.exo83ys82p8g">Access control by feature</a></span></p>

  <p class="c17"><span class="c6"><a class="c8" href=
  "#h.jjoyi1fwsh2p">License</a></span></p>
  <hr style="page-break-before:always;display:none;" />

  <h1><a id="h.nl56x0kbrp6g" name=
  "h.nl56x0kbrp6g"></a></h1><a href="#" id="id.jes9sqqlstzn" name=
  "id.jes9sqqlstzn"></a>

  <h1><a id="h.qpuowmrty7yb" name=
  "h.qpuowmrty7yb"></a><span>Overview</span></h1><a href="#" id=
  "id.hjmnt8awkh8s" name="id.hjmnt8awkh8s"></a>

  <p><span>go-susi is a daemon that performs the following
  functions:</span></p>

  <ul class="c20 lst-kix_ufzf1orjb24z-0 start">
    <li class="c2 c14"><span>Maintain various databases for GOsa.
    For instance go-susi manages a database of Debian packages that
    GOsa presents to the user for creating package
    lists.</span></li>

    <li class="c2 c14"><span>Send messages to clients on behalf of
    GOsa to trigger some action such as wake-on-lan.</span></li>

    <li class="c2 c14"><span>Maintain a schedule of jobs and
    trigger their execution at the appropriate time.</span></li>

    <li class="c2 c14"><span>Monitor the progress of long-running
    jobs such as installations.</span></li>

    <li class="c2 c14"><span>Communicate the job schedule and
    progress to other servers so that each instance of GOsa can
    query up-to-date data from its respective go-susi
    instance.</span></li>

    <li class="c2 c14"><span>Collect data from clients and make it
    available to GOsa (e.g. installation logs).</span></li>

    <li class="c2 c14"><span>Query an LDAP directory on behalf of
    GOsa.</span></li>

    <li class="c2 c14"><span>Make changes to LDAP data on behalf of
    GOsa or in reaction to other events (such as job
    completion).</span></li>
  </ul>

  <h1><a id="h.u0s09hxn0kr0" name=
  "h.u0s09hxn0kr0"></a><span>Invocation</span></h1>

  <p><span>Most of the time you would not invoke go-susi directly.
  The preferred way to invoke go-susi is to use appropriate
  Upstart/SystemD jobs</span><span>.</span></p>

  <p><span>When invoked directly,</span> <span>go-susi understands
  the following command line arguments:</span></p><a href="#" id=
  "id.7rmu3qjxnnyy" name="id.7rmu3qjxnnyy"></a>

  <p><span class="c0 c1">--help</span></p><a href="#" id=
  "id.f852w3yjg198" name="id.f852w3yjg198"></a>

  <p class="c2"><span>print usage and exit.</span></p>

  <p><span class="c0 c1">--version</span></p>

  <p class="c2"><span>print version and exit.</span></p>

  <p><span class="c0 c1">--stats</span></p>

  <p class="c2"><span>send a running go-susi process an</span>
  <span class="c1">sistats</span><span>&#160;message, print out the
  returned data and exit.</span></p>

  <p><span class="c0 c1">-c &lt;file&gt;</span></p>

  <p class="c2"><span>go-susi will read its configuration from
  &lt;file&gt; instead of the default location. If both --test and
  -c are specified, the last switch on the command line will
  determine the config file location.</span></p>

  <p><span class="c0 c1">-f</span></p>

  <p class="c2"><span>start with a fresh database. go-susi will not
  load data from</span> <span class=
  "c1">/var/lib/go-susi.</span></p>

  <p><span class="c0 c1">-v</span></p>

  <p class="c2"><span>go-susi will log INFO level log messages (by
  default only ERRORs are logged). INFO level messages may aid the
  administrator in debugging problems.</span></p>

  <p><span class="c0 c1">-vv</span></p>

  <p class="c2"><span>go-susi will log INFO and DEBUG level log
  messages. DEBUG level messages are useful only for developers and
  may produce so much data that it affects performance. They also
  contain cleartext passwords.</span></p>

  <p><span class="c0 c1">--test=&lt;dir&gt;</span></p>

  <ul class="c20 lst-kix_utsbfkm2i00z-1 start">
    <li class="c5 c14"><span>go-susi will read configuration files
    from &lt;dir&gt; instead of</span> <span class=
    "c1">/etc/gosa-si.</span></li>

    <li class="c5 c14"><span>the default log file will be</span>
    <span class="c1">&lt;dir&gt;/go-susi.log.</span></li>

    <li class="c5 c14"><span>the database files will be stored
    in</span> <span class=
    "c1">&lt;dir&gt;</span><span>&#160;instead of</span>
    <span class="c1">/var/lib/go-susi.</span></li>

    <li class="c5 c14"><span>installation/softupdate logs will be
    stored in</span> <span class=
    "c1">&lt;dir&gt;</span><span>&#160;instead of</span>
    <span class="c1">/var/log/fai.</span></li>
  </ul>

  <h2><a id="h.noyiy3hxsuzj" name=
  "h.noyiy3hxsuzj"></a><span>Background operation</span></h2>

  <p><span>go-susi does not put itself into the background, does
  not create a new session and does not ignore SIGHUP. Nor does
  go-susi create a PID file. If you want to do any of these things
  from a shell script (e.g. a classic init script), use utilities
  such as setsid(1), nohup(1) and start-stop-daemon(8) in
  combination with the shell's &amp; operator, subshells, exec and
  variables like $BASHPID (which gives the PID of the subshell
  unlike $$). Note that none of these things is necessary when
  go-susi is invoked by Upstart/SystemD.</span></p>
  <hr style="page-break-before:always;display:none;" />

  <h1><a id="h.kargb81n8lw4" name=
  "h.kargb81n8lw4"></a><span>Configuration</span></h1>

  <h2><a id="h.vv09slb55j" name="h.vv09slb55j"></a><span>DNS
  configuration</span></h2>

  <p><span>go-susi will use DNS to locate other go-susi and gosa-si
  instances. When go-susi starts it will contact other servers
  listed in DNS to update its job schedule and announce its
  presence so that the other servers will pass on future
  information to the new go-susi instance. This can be disabled
  via</span> <span class=
  "c1">[ServerPackages]/dns-lookup.</span></p>

  <p><span>To list a server in DNS, create an SRV record for the
  service "gosa-si" and protocol "tcp" within the same subdomain of
  the go-susi that should pick it up.</span></p>

  <h2><a id="h.bqrhjen52ghs" name="h.bqrhjen52ghs"></a><span>TCP
  Keep-Alive</span></h2>

  <p><span>In order to keep its job database consistent with its
  peers, go-susi needs to detect when a peer is unreachable. Error
  conditions that close the TCP connection to the peer, such as
  when the peer process crashes or is shut down, are always
  detected reliably. However error conditions at the network level,
  such as a broken network cable, can only be detected if TCP
  keep-alive is properly configured.</span></p>

  <p><span>By default the Linux kernel will not send the first
  keep-alive packet until hours after the last data transmission.
  This is too long if you want go-susi to have an accurate
  up-to-date view of peer jobs. The following commands configure
  the kernel to start keep-alive when no data has been transmitted
  for 30s, to wait 10s between keep-alive packets and to mark the
  connection as broken if 5 keep-alive packets remain unanswered.
  This causes broken connections to be detected after about 1
  &#189; minutes.</span></p>

  <p class="c2"><span class="c1">echo 30
  &gt;/proc/sys/net/ipv4/tcp_keepalive_time</span></p>

  <p class="c2"><span class="c1">echo 10
  &gt;/proc/sys/net/ipv4/tcp_keepalive_intvl</span></p>

  <p class="c2"><span class="c1">echo &#160;5
  &gt;/proc/sys/net/ipv4/tcp_keepalive_probes</span></p><a href="#"
  id="id.ghm1et7cq23q" name="id.ghm1et7cq23q"></a>

  <h2><a id="h.rhxe5y7vanz9" name=
  "h.rhxe5y7vanz9"></a><span>Configuration file
  /etc/gosa-si/server.conf</span></h2>

  <p><span>/etc/gosa-si/server.conf configures various aspects of
  go-susi's behaviour. It has the following general
  structure:</span></p><a href="#" id="id.w63fd9fui69z" name=
  "id.w63fd9fui69z"></a>

  <p class="c2"><span class="c1">[section1]</span></p>

  <p class="c2"><span class="c1">param1 = value1</span></p>

  <p class="c2"><span class="c1">param2 = value2</span></p>

  <p class="c2"><span class="c1">...</span></p>

  <p class="c12 c2"></p>

  <p class="c2"><span class="c1">[section2]</span></p>

  <p class="c2"><span class="c1">...</span></p>

  <p><span>go-susi evaluates the following sections/parameters from
  this file. All other sections/parameters are ignored.</span></p>

  <p><span class="c0 c1">[any section]</span></p>

  <p class="c2"><span class="c0 c1">key</span></p>

  <p class="c5"><span>go-susi collects all keys from all sections
  and will use them to decrypt messages.</span></p>

  <p><span class="c0 c1">[general]</span></p>

  <p class="c2"><span class="c0 c1">log-file</span></p>

  <p class="c5"><span>The path of go-susi&#8217;s log file. Default
  is</span> <span class="c1">/var/log/go-susi.log.</span></p>

  <p class="c2"><span class="c0 c1">fai-log-dir</span></p>

  <p class="c5"><span>The directory where the subdirectories for
  client log files received via</span> <span class=
  "c1">CLMSG_save_fai_log</span><span>&#160;will be created.
  Default is</span> <span class="c1">/var/log/fai.</span></p>

  <p class="c2"><span class=
  "c0 c1">kernel-list-hook</span></p><a href="#" id=
  "id.3uhjxiaklp5d" name="id.3uhjxiaklp5d"></a>

  <p class="c5"><span>The path of a program that generates a list
  of kernels supported for each release. See the section</span>
  <span class="c0 c1">kernel-list-hook</span><span>&#160;further
  below. Default is</span> <span class=
  "c1">/usr/lib/go-susi/generate_kernel_list.</span></p>

  <p class="c2"><span class="c0 c1">package-list-hook</span></p>

  <p class="c5"><span>The path of a program that generates a list
  of packages included in each release. See the section</span>
  <span class="c0 c1">package-list-hook</span><span>&#160;further
  below. Default is</span> <span class=
  "c1">/usr/lib/go-susi/generate_package_list.</span></p>

  <p class="c2"><span class="c0 c1">user-msg-hook</span></p>

  <p class="c5"><span>The path of a program to handle</span>
  <span class="c1">job_send_user_msg</span><span>&#160;messages.
  See the section</span> <span class=
  "c0 c1">user-msg-hook</span><span>&#160;further below. Default
  is</span> <span class=
  "c1">/usr/lib/go-susi/send_user_msg.</span></p>

  <p class="c2"><span class="c0 c1">pxelinux-cfg-hook</span></p>

  <p class="c5"><span class="c11">(deprecated, see [tftp]//path for
  the replacement feature)</span><span>&#160;The path of a program
  that will be called when go-susi's TFTP server is asked for a
  file that matches "</span><span class=
  "c1">pxelinux.cfg/01-&lt;MAC&gt;</span><span>". See the
  section</span> <span class=
  "c0 c1">pxelinux-cfg-hook</span><span>&#160;further below.
  Default is</span> <span class=
  "c1">/usr/lib/go-susi/generate_pxelinux_cfg.</span></p>

  <p class="c2"><span class="c0 c1">new-config-hook</span></p>

  <p class="c5"><span>The path of a program that will be called
  when go-susi receives a message of type</span> <span class=
  "c1">new_foo_config</span><span>&#160;(for all kinds of "foo").
  See the section</span> <span class=
  "c0 c1">new-config-hook</span><span>&#160;further below. Default
  is</span> <span class=
  "c1">/usr/lib/go-susi/update_config_files.</span></p>

  <p class="c2"><span class="c0 c1">trigger-action-hook</span></p>

  <p class="c5"><span>The path of a program that will be called
  when go-susi receives a message of type</span> <span class=
  "c1">trigger_action_foo</span><span>&#160;(for all kinds of
  "foo"). See the section</span> <span class=
  "c0 c1">trigger-action-hook</span><span>&#160;further below.
  Default is</span> <span class=
  "c1">/usr/lib/go-susi/trigger_action.</span></p>

  <p class="c2"><span class="c0 c1">registered-hook</span></p>

  <p class="c5"><span>The path of a program that will be called
  when go-susi has completed a successful registration at an
  si-server. See the section</span> <span class=
  "c0 c1">registered-hook</span><span>&#160;further below. Default
  is</span> <span class=
  "c1">/usr/lib/go-susi/registered.</span></p>

  <p class="c2"><span class="c0 c1">activated-hook</span></p>

  <p class="c5"><span>The path of a program that will be called
  when go-susi receives a</span> <span class=
  "c1">set_activated_for_installation</span><span>&#160;message.
  See the section</span> <span class=
  "c0 c1">activated-hook</span><span>&#160;further below. Default
  is</span> <span class="c1">/usr/lib/go-susi/activated.</span></p>

  <p class="c2"><span class="c0 c1">detect-hardware-hook</span></p>

  <p class="c5"><span>The path of a program that will be called
  when go-susi receives a</span> <span class=
  "c1">detect_hardware</span><span>&#160;message. See the
  section</span> <span class=
  "c0 c1">detect-hardware-hook</span><span>&#160;further below.
  Default is</span> <span class=
  "c1">/usr/lib/go-susi/detect_hardware.</span></p>

  <p class="c2"><span class="c0 c1">fai-progress-hook</span></p>

  <p class="c5"><span>The path of a program that go-susi will
  launch and whose output it will read continually to provide FAI
  progress events that go-susi will convert into</span>
  <span class="c1">CLMSG_*</span><span>&#160;messages. See the
  section</span> <span class=
  "c0 c1">fai-progress-hook</span><span>&#160;further below.
  Default is</span> <span class=
  "c1">/usr/lib/go-susi/fai_progress.</span></p>

  <p class="c2"><span class="c0 c1">fai-savelog-hook</span></p>

  <p class="c5"><span>The path of a program go-susi calls when it
  sees</span> <span class="c1">"TASKEND
  savelog"</span><span>&#160;in the output from fai-progress-hook.
  The output from this program is sent as</span> <span class=
  "c1">CLMSG_save_fai_log</span><span>&#160;to the registration
  server. See the section</span> <span class=
  "c0 c1">fai-savelog-hook</span><span>&#160;further below. Default
  is</span> <span class=
  "c1">/usr/lib/go-susi/fai_savelog.</span></p>

  <p><span class="c0 c1">[server]</span></p>

  <p class="c2"><span class="c0 c1">port</span></p>

  <p class="c5"><span>The port the server should listen at for XML
  messages. Default is 20081.</span></p>

  <p class="c2"><span class="c0 c1">ldap-uri</span></p>

  <p class="c5"><span>URI for connecting with the LDAP server.
  Default is</span> <span class=
  "c1">ldap://localhost:389.</span></p>

  <p class="c2"><span class="c0 c1">ldap-base</span></p>

  <p class="c5"><span>A DN. LDAP lookups will be restricted to the
  subtree rooted here. Default is</span> <span class=
  "c1">c=de.</span></p>

  <p class="c2"><span class="c0 c1">new-systems-base</span></p>

  <p class="c5"><span>Full DN or partial DN ending in ",". In the
  latter case</span> <span class=
  "c0 c1">ldap-base</span><span>&#160;will be appended. LDAP
  objects for new systems will be created under this base. Default
  is "</span><span class="c1">ou=incoming,".</span></p>

  <p class="c2"><span class="c0 c1">ldap-admin-dn</span></p>

  <p class="c5"><span>DN of the account to use for write access to
  LDAP. There is no default value. If this option is not set,
  go-susi will function in client-only mode, i.e. basically behave
  like a gosa-si-client, whereas otherwise it would behave like a
  combination of gosa-si-server and gosa-si-client.</span></p>

  <p class="c2"><span class="c0 c1">ldap-admin-password</span></p>

  <p class="c5"><span>Password of the account to use for LDAP write
  access. Default is</span> <span class="c1">"password".</span></p>

  <p class="c2"><span class="c0 c1">ldap-user-dn</span></p>

  <p class="c5"><span>DN of the account to use for read access to
  LDAP. Default is empty which means anonymous access.</span></p>

  <p class="c2"><span class="c0 c1">ldap-user-password</span></p>

  <p class="c5"><span>Password of the account to use for LDAP read
  access. Default is empty.</span></p>

  <p class="c2"><span class="c0 c1">ip</span></p>

  <p class="c5"><span>Name or IP address with or without port of
  the preferred server to register at when operating in client-only
  mode. If go-susi operates as a full server, it ignores this
  setting and only registers at itself. If no port is
  specified,</span> <span class=
  "c1">[server]/port</span><span>&#160;is used.</span></p>

  <p class="c5"><span>If registration at this server fails
  and</span> <span class=
  "c1">[ServerPackages]/address</span><span>&#160;lists servers,
  these will be tried and if</span> <span class=
  "c1">[ServerPackages]/dns-lookup</span><span>&#160;is true,
  servers listed in DNS will be tried, too.</span></p>

  <p class="c2"><span class="c0 c1">dns-lookup</span></p>

  <p class="c5"><span>See</span> <span class=
  "c1">[ServerPackages]/dns-lookup.</span><span>&#160;The option
  may be specified in either section, but</span> <span class=
  "c1">[ServerPackages]</span><span>&#160;takes
  precedence.</span></p>

  <p><span class="c0 c1">[client]</span></p>

  <p class="c2"><span class="c0 c1">port</span></p>

  <p class="c5"><span>A list of port numbers separated by commas
  and/or whitespace. The server expects standard clients to listen
  on one of these ports. Clients listening on other ports will be
  considered test clients and some functionality will be disabled
  for them. The</span> <span class=
  "c1">[server]/port</span><span>&#160;is automatically appended to
  this list. Default is 20083,</span> <span class=
  "c1">[server]/port.</span></p>

  <p><span class="c0 c1">[faimon]</span></p>

  <p class="c2"><span class="c0 c1">port</span></p>

  <p class="c5"><span>The TCP port go-susi will listen on for FAI
  status messages. Default is &#8220;disabled&#8221;.</span></p>

  <p><span class="c0 c1">[tls]</span></p>

  <p class="c2"><span class="c0 c1">ca-certificate</span></p>

  <p class="c5"><span>The path of the certificate in PEM format
  used to authenticate certificates presented by parties connecting
  to go-susi via TLS. Default is</span> <span class=
  "c1">/etc/gosa-si/ca.cert.</span></p>

  <p class="c2"><span class="c0 c1">certificate</span></p>

  <p class="c5"><span>The path to the certificate in PEM format
  go-susi will present to the other party when connecting to them
  via TLS. Default is</span> <span class=
  "c1">/etc/gosa-si/si.cert.</span></p>

  <p class="c2"><span class="c0 c1">keyfile</span></p>

  <p class="c5"><span>The path to the PKCS#8 private key in PEM
  format that corresponds to</span> <span class=
  "c1">certificate</span><span>. Default is</span> <span class=
  "c1">/etc/gosa-si/si.key.</span></p>

  <p><span class="c0 c1">[tftp]</span></p>

  <p class="c2"><span class="c0 c1">port</span></p>

  <p class="c5"><span>The UDP port for go-susi's built-in TFTP
  server. Default is 69. Use &#8220;disable&#8221;,
  &#8220;none&#8221; or anything else that is not a valid port to
  disable the functionality.</span></p>

  <p class="c2"><span class="c0 c1">/path</span></p>

  <p class="c5"><span>Every parameter in the</span> <span class=
  "c1">[tftp]</span><span>&#160;section that starts with a slash
  "/" specifies a mapping from a virtual path that may be requested
  from the TFTP server (without the leading slash) to the data the
  TFTP server should send in response.</span></p>

  <p class="c5"><span>If there is nothing on the right side of the
  "=" for the parameter, the TFTP server will respond with a "File
  not found" error, however this will be logged as an INFO! rather
  than an ERROR!.</span></p>

  <p class="c5"><span>If the value on the right side of the "="
  does</span> <span class="c11">not</span><span>&#160;start with
  "|", it is the actual filesystem path of the file whose contents
  should be returned.</span></p>

  <p class="c5"><span>If the value on the right side of the
  "="</span> <span class="c11">does</span><span>&#160;start with
  "|", it is the path of a hook to execute.</span></p>

  <p class="c5"><span>See the section</span> <span class="c11">TFTP
  hooks</span><span>&#160;for details.</span></p>

  <p class="c2"><span class="c0 c1">/^path_regex</span></p>

  <p class="c5"><span>Like</span> <span class=
  "c1">/path</span><span>&#160;(see above) but</span> <span class=
  "c1">^path_regex</span><span>&#160;is treated as a regular
  expression (including the "^" which means that the regex has to
  match at the start of the TFTP request).</span></p>

  <p class="c5"><span>If the value on the right side of the
  "="</span> <span class="c11">does</span><span>&#160;start with
  "|", it is the path of a hook to execute, optionally followed by
  arguments to pass. The stdout of that hook will be sent as
  response to the TFTP request.</span></p>

  <p class="c5"><span>The value to the left of the "=" may contain
  references to capturing groups in the regex.</span> <span class=
  "c1">${1}, ${2}, ${3},...</span><span>&#160;refer to the 1st,
  2nd, 3rd,... capturing group.</span> <span class=
  "c1">${name}</span><span>&#160;refers to a named capturing group.
  A literal</span> <span class="c1">$</span><span>&#160;has to be
  written as</span> <span class="c1">$$.</span><span>&#160;The
  curly braces may be omitted, but be aware that e.g.</span>
  <span class="c1">"$1x"</span> <span>is interpreted as</span>
  <span class="c1">"${1x}"</span><span>&#160;which is probably not
  what you want.</span></p>

  <p class="c5"><span>If multiple</span> <span class=
  "c1">/path</span><span>&#160;and/or</span> <span class=
  "c1">/^path_regex</span><span>&#160;lines in the</span>
  <span class="c1">[tftp]</span><span>&#160;section match an
  incoming TFTP request, the</span> <span class=
  "c11">last</span><span>&#160;one wins.</span></p>

  <p><span class="c0 c1">[ServerPackages]</span></p>

  <p class="c2"><span class="c0 c1">address</span></p>

  <p class="c5"><span>A list of peer servers (format</span>
  <span class="c11">host:port</span><span>) separated by commas
  and/or whitespace to communicate with in addition to those listed
  in DNS.</span></p>

  <p class="c2"><span class="c0 c1">dns-lookup</span></p>

  <p class="c5"><span>If</span> <span class=
  "c1">false</span><span>, then SRV records from DNS for
  tcp/gosa-si servers will be ignored. Note, however, that if
  another server contacts go-susi of its own accord, go-susi will
  start talking to this peer regardless of</span> <span class=
  "c1">dns-lookup.</span></p>

  <p class="c2"><span class="c0 c1">domains</span></p>

  <p class="c5"><span>When looking up machine names (e.g. for
  wake-on-lan) that are not fully qualified, if DNS can not resolve
  the name, re-attempt with each of the domains from this list
  appended. The list&#8217;s entries may be separated by commas or
  spaces and each entry may or may not start with a dot.</span></p>

  <h2><a id="h.7fa10jpoaora" name=
  "h.7fa10jpoaora"></a><span>Configuration file
  /etc/gosa-si/client.conf</span></h2>

  <p><span>For backwards compatibility with gosa-si-client, go-susi
  reads the configuration file</span> <span class=
  "c1">/etc/gosa-si/client.conf</span><span>&#160;in addition
  to</span> <span class="c1">server.conf.</span><span>&#160;Both
  files are interpreted exactly the same. If both are present,
  settings from server.conf override conflicting settings
  from</span> <span class="c1">client.conf.</span></p>

  <h2 class="c10"><a id="h.bf0dgl3dgls6" name=
  "h.bf0dgl3dgls6"></a><span>Configuration file
  /etc/gosa/ou=servers.conf</span></h2>

  <p><span>If this file exists, each line is interpreted as a DN.
  Whenever go-susi looks for repository servers, it will in
  addition to searching the complete tree under</span> <span class=
  "c1">[server]/ldap-base</span><span>&#160;also search under each
  of the DNs listed in this file with one-level scope. The same
  configuration file is used by</span> <span class=
  "c1">ldap2fai.php</span><span>&#160;from the</span> <span class=
  "c1">gosa-fai-helpers</span><span>&#160;package. Use this file if
  you have repository server objects located in a part of the LDAP
  tree that is not under</span> <span class=
  "c1">[server]/ldap-base.</span><span>&#160;</span></p>
  <hr style="page-break-before:always;display:none;" />
  <a href="#" id="id.3yfqzfegrde0" name="id.3yfqzfegrde0"></a>

  <h1><a id="h.v12xmehtov9u" name=
  "h.v12xmehtov9u"></a><span>Hooks</span></h1>

  <p><span>go-susi outsources several functions that are directly
  integrated into gosa-si-server to external programs. These hook
  programs are configured in</span> <span class=
  "c1">server.conf</span><span>. To disable a hook completely, set
  it to</span> <span class="c1">"/bin/true".</span> <span>Do</span>
  <span class="c11">not</span><span>&#160;use</span> <span class=
  "c1">"/dev/null"</span><span>! That will cause unnecessary ERROR
  messages. Only use</span> <span class=
  "c1">"/dev/null"</span><span>&#160;in places where a</span>
  <span class="c11">non</span><span>-executable file is to be
  suppressed</span><span>.</span></p>

  <h2><a id="h.emgj929gpns8" name="h.emgj929gpns8"></a><span>Hook
  environment</span></h2>

  <p><span>All hooks get a standard set of environment
  variables:</span></p>

  <p><span class="c1">MAC, IPADDRESS, SERVERPORT, HOSTNAME</span>
  <span>and</span><span class=
  "c1">&#160;FQDN.</span><span>&#160;All of these refer to the
  machine running the hook.</span></p>

  <h2><a id="h.uflhopltjofk" name=
  "h.uflhopltjofk"></a><span>kernel-list-hook</span></h2>

  <p><span>go-susi relies on an external program to provide the
  list of kernels supported for each release (see message</span>
  <span class="c1">gosa_get_available_kernel</span><span>). go-susi
  calls this program after calling</span> <span class=
  "c1">package-list-hook</span><span>&#160;and passes it the
  same</span> <span class=
  "c0">PackageListCacheDir</span><span>&#160;environment variable,
  so the</span> <span class=
  "c1">kernel-list-hook</span><span>&#160;may use the cache created
  by</span> <span class="c1">package-list-hook.</span></p>

  <p><span>The hook is</span> <span>expected to print to standard
  output a list in LDIF format that lists all supported releases
  with all supported kernels. Each supported release should have at
  least one entry called</span> <span class=
  "c1">"default"</span><span>. The following example demonstrates
  the syntax:</span></p>

  <p class="c12 c2"></p>

  <p class="c2"><span class="c1">dn:
  cn=vmlinuz-3.0.0-16-generic,ou=kernels,ou=4.1.0,ou=plophos,ou=fai</span></p>

  <p class="c2"><span class="c1">cn:
  vmlinuz-3.0.0-16-generic</span></p>

  <p class="c2"><span class="c1">release: plophos/4.1.0</span></p>

  <p class="c12 c2"></p>

  <p class="c2"><span class="c1">dn:
  cn=default,ou=kernels,ou=4.1.0,ou=plophos,ou=fai</span></p>

  <p class="c2"><span class="c1">cn: default</span></p>

  <p class="c2"><span class="c1">release: plophos/4.1.0</span></p>

  <p class="c12 c2"></p>

  <p class="c2"><span class="c1">dn:
  cn=default,ou=kernels,ou=plophos,ou=fai</span></p>

  <p class="c2"><span class="c1">cn: default</span></p>

  <p class="c2"><span class="c1">release: plophos</span></p>

  <p class="c12 c2"></p>

  <p><span>The above example lists two releases. Release</span>
  <span class="c1">plophos/4.1.0</span><span>&#160;has two
  available kernel options. Release</span> <span class=
  "c1">plophos</span><span>&#160;on the other hand has only
  the</span> <span class=
  "c1">default</span><span>&#160;option.</span></p>

  <p><span>The DNs are arbitrary and not evaluated by go-susi. They
  can even be left out completely.</span></p>

  <p><span>The attribute names are not case-sensitive.</span></p>

  <p><span>You can use base64-encoding with LDIF&#8217;s
  double-colon syntax.</span></p>
  <hr style="page-break-before:always;display:none;" />

  <h2><a id="h.lcg0co1fq2xh" name=
  "h.lcg0co1fq2xh"></a><span>package-list-hook</span></h2>

  <p><span>go-susi relies on an external program to provide the
  list of packages included in each release and which debconf
  parameters they support (see message</span> <span class=
  "c1">gosa_query_packages_list</span><span>). go-susi calls this
  hook on startup and when it receives the</span> <span class=
  "c0 c1">SIGUSR2</span><span>&#160;signal. The hook is expected to
  print to standard output a list in LDIF format that contains the
  complete package database. The hook will receive the following
  environment variables:</span></p>

  <p class="c2"><span class="c0">PackageListCacheDir:</span></p>

  <p class="c5"><span>If the hook maintains a package cache, it
  should store it in this directory. Note that this directory
  contains other go-susi files that the hook must not
  touch.</span></p>

  <p class="c2"><span class="c0">PackageListDebconf:</span></p>

  <p class="c5"><span>When go-susi calls the hook for the first
  time on startup it passes the value</span> <span class=
  "c1">"cache"</span><span>&#160;in this variable. This tells the
  hook that it should not perform time-consuming scans of packages
  to extract debconf templates. It should only report templates if
  it can do so from cached data. The purpose is to get the list of
  packages as quickly as possible.</span></p>

  <p class="c5"><span>When the hook has finished executing
  the</span> <span class="c1">"cache"</span><span>&#160;run,
  go-susi will immediately call the hook again, this time with the
  value</span> <span class="c1">"depends"</span><span>&#160;in this
  variable. This tells the hook that it may perform package scans
  to extract debconf templates, but should restrict itself to
  scanning packages whose entry in the Packages file includes the
  sub-string</span> <span class="c1">"debconf"</span><span>&#160;on
  the</span> <span class="c1">Depends</span><span>&#160;or</span>
  <span class="c1">Pre-Depends</span><span>&#160;line. The purpose
  of this hook call is to get a mostly complete list of debconf
  templates as quickly as possible.</span></p>

  <p class="c5"><span>When go-susi calls the hook in reaction to
  a</span> <span class="c0 c1">SIGUSR2</span><span>&#160;signal, it
  passes the value</span> <span class=
  "c1">"all"</span><span>&#160;in this variable. At this point the
  hook may want to scan all packages for debconf templates to be
  able to report a complete list. However the hook should still
  return in a reasonable time. It is recommended that after a
  maximum of 1h running time the hook should present the results it
  has and make a note of any packages that are still unscanned so
  that it can continue the scan the next time the</span>
  <span class="c0 c1">SIGUSR2</span><span>&#160;signal is sent
  (which typically happens each night via a cron job).</span></p>

  <p class="c2"><span class=
  "c0">PackageListFAIrepository:</span></p>

  <p class="c5"><span>This variable contains a space separated list
  of all FAIrepository attributes from LDAP (e.g.</span>
  <span class=
  "c1">"http://ftp.debian.org/debian|none|jessie|main,contrib")</span><span>&#160;and
  tells the hook which repositories it should scan for
  packages.</span></p>
  <hr style="page-break-before:always;display:none;" />

  <p><span class="c0">Example ouput from hook:</span></p>

  <p class="c2"><span class="c1">Package: console-setup</span></p>

  <p class="c2"><span class="c1">Release: plophos</span></p>

  <p class="c2"><span class="c1">Version: 1.34ubuntu15</span></p>

  <p class="c2"><span class="c1">Version: 1.35</span></p>

  <p class="c2"><span class="c1">Section: utils</span></p>

  <p class="c2"><span class="c1">Release: plophos/4.1.0</span></p>

  <p class="c2"><span class="c1">Version: 1.36</span></p>

  <p class="c2"><span class="c1">Section: main</span></p>

  <p class="c2"><span class="c1">Description: console font and
  keymap setup program</span></p>

  <p class="c2"><span class="c1">Templates::
  ClRlbXBsYXRlOi...wgdXNlCgo=</span></p>

  <p class="c12 c2"></p>

  <p class="c2"><span class="c1">Release: plophos</span></p>

  <p class="c2"><span class="c1">Repository:
  plophos-backports</span></p>

  <p class="c2"><span class="c1">Repository:
  plophos-updates</span></p>

  <p class="c2"><span class="c1">Repository:
  plophos-security</span></p>

  <p class="c12 c2"></p>

  <p class="c2"><span class="c1">Package: sed</span></p>

  <p class="c2"><span class="c1">Release: plophos</span></p>

  <p class="c2"><span class="c1">Repository:
  plophos-security</span></p>

  <p class="c2"><span class="c1">Section: lhm/utils</span></p>

  <p class="c2"><span class="c1">Version: 4.2.1-6lhm2</span></p>

  <p class="c2"><span class="c1">Description: The GNU sed stream
  editor</span></p>

  <p class="c12 c2"></p>

  <p><span>The attributes</span> <span class=
  "c1">Package</span><span>,</span> <span class=
  "c1">Section</span><span>,</span> <span class=
  "c1">Version</span><span>&#160;and</span> <span class=
  "c1">Description</span><span>&#160;correspond directly to their
  counterparts from the Debian</span> <span class=
  "c1">control</span><span>&#160;file. The</span> <span class=
  "c1">Release</span><span>&#160;attribute specifies the release
  (aka "distribution") to which the entry belongs. Multiple</span>
  <span class="c1">Version</span><span>&#160;attributes may be
  present if multiple versions are available for the same
  release.</span></p>

  <p><span>The</span> <span class=
  "c1">Templates</span><span>&#160;attribute (</span><span class=
  "c1">"Template"</span><span>&#160;without</span> <span class=
  "c1">"s"</span><span>&#160;is accepted as an alias) is the
  complete contents of the</span> <span class=
  "c1">templates</span><span>&#160;file describing the debconf
  parameters of the package (if it has any).</span></p>

  <p><span>The</span> <span class=
  "c1">Repository</span><span>&#160;attribute, if present, informs
  go-susi that the entry refers to a (version of a) package that is
  not found in the main repository for the respective release.
  All</span> <span class="c1">Repository</span><span>&#160;values
  are collected and added (with a "+" prefix) to the list of
  available FAI classes for the corresponding release. The FAI
  backend recognizes these pseudo-FAI classes and creates
  appropriate</span> <span class=
  "c1">/etc/apt/sources.list.d/</span><span>&#160;files for
  them.</span></p>

  <p><span>The hook may include</span> <span class=
  "c1">Release/Repository</span><span>&#160;groups in its output
  without any package information to inform go-susi about existing
  repository paths even if they do not (yet) contain
  packages.</span></p>

  <p><span>To reduce go-susi's memory usage and improve its
  performance, it is possible to combine the information for
  multiple releases for the same package into a single entry. Such
  an entry must start with the</span> <span class=
  "c1">Package</span><span>&#160;attribute and must be followed by
  at least one</span> <span class=
  "c1">Release</span><span>&#160;attribute. In order to determine
  the attribute values for attribute</span> <span class=
  "c1">A</span><span>&#160;for release</span> <span class=
  "c1">R</span><span>, the lines following</span> <span class=
  "c1">Package</span><span>&#160;will be scanned for the
  first</span> <span class="c1">Release: R</span><span>&#160;line
  and then for the first</span> <span class=
  "c1">A</span><span>&#160;attribute line after that. This and all
  following</span> <span class="c1">A</span><span>&#160;attribute
  lines up to the next</span> <span class=
  "c1">Release</span><span>&#160;line are</span> <span class=
  "c1">A</span><span>&#160;attribute values for</span> <span class=
  "c1">R</span><span>.</span></p>
  <hr style="page-break-before:always;display:none;" />

  <h2 class="c10"><a id="h.jl9h7nlx12bl" name=
  "h.jl9h7nlx12bl"></a><span>user-msg-hook</span></h2>

  <p><span>go-susi relies on an external program to process user
  notifications from</span> <span class=
  "c1">job_send_user_msg</span> <span>and</span> <span class=
  "c1">usr_msg</span><span>. When a</span> <span class=
  "c1">job_send_user_msg</span><span>&#160;is up for execution or
  when a</span> <span class="c1">usr_msg</span><span>&#160;message
  is received, go-susi calls the program configured in</span>
  <span class="c1">[general]/user-msg-hook</span><span>. The hook
  will receive the following environment variables:</span></p>

  <p class="c2"><span class="c0">job:</span></p>

  <p class="c5"><span>The XML of the job entry as returned
  by</span> <span class=
  "c1">gosa_query_jobdb</span><span>&#160;message (with
  either</span> <span class=
  "c1">&lt;job&gt;</span><span>&#160;or</span> <span class=
  "c1">&lt;xml&gt;</span><span>&#160;as the outermost
  tag).</span></p>

  <p class="c2"><span class="c0">foo:</span></p>

  <p class="c5"><span>For each child element</span> <span class=
  "c1">&lt;foo&gt;</span><span>&#160;of</span> <span class=
  "c1">&lt;xml&gt;</span><span>&#160;there will be a corresponding
  environment variable with the element's text content
  (</span><span class="c11">not</span><span>&#160;using XML
  escaping like</span> <span class="c1">&amp;lt;</span><span>). If
  there are multiple child elements with the same name, their text
  values will be concatenated separated by newlines.</span></p>

  <p class="c5 c12"></p>

  <p><span class="c0">Example:</span></p>

  <p class="c2"><span>The following hook script transmits messages
  to users via email.</span></p>

  <p class="c2"><span class="c1"># The environment variables $user,
  $subject, $group and $message</span></p>

  <p class="c2"><span class="c1"># come from the elements of the
  job_send_user_msg &lt;xml&gt; message.</span></p>

  <p class="c12 c2"></p>

  <p class="c2"><span class="c1">users="$user"</span></p>

  <p class="c12 c2"></p>

  <p class="c2"><span class="c1">for g in $group ; do</span></p>

  <p class="c2"><span class="c1">&#160;
  filter="(&amp;(cn=$g)(objectClass=posixGroup))"</span></p>

  <p class="c2"><span class="c1">&#160; members="$(ldapsearch -x
  -LLL "$filter" memberUid)"</span></p>

  <p class="c2"><span class="c1">&#160; users="$users $(echo
  "$members" | sed -n 's/memberUid: //p')"</span></p>

  <p class="c2"><span class="c1">done</span></p>

  <p class="c12 c2"></p>

  <p class="c2"><span class="c1">for user in $users; do</span></p>

  <p class="c2"><span class="c1">&#160; address=$(ldapsearch -x
  -LLL cn=$user mail | sed -n 's/mail: //p')</span></p>

  <p class="c2"><span class="c1">&#160; echo "$message" | mail -s
  "$subject" "$address"</span></p>

  <p class="c2"><span class="c1">done</span></p>
  <hr style="page-break-before:always;display:none;" />

  <h2 class="c10 c21"><a id="h.rz53ht8cs0me" name=
  "h.rz53ht8cs0me"></a></h2>

  <h2 class="c10"><a id="h.3eksnwm3fz5s" name=
  "h.3eksnwm3fz5s"></a><span>pxelinux-cfg-hook</span></h2>

  <p class="c4"><span>This configuration option is deprecated. It
  is converted to the following settings:</span></p>

  <p class="c4 c12"></p>

  <p class="c4"><span class="c1">[tftp]</span></p>

  <p class="c4"><span class=
  "c1">/^pxelinux.cfg/[0-9a-f]{8}(-[0-9a-f]{4}){3}-[0-9a-f]{12}$ =
  # suppress ERROR!</span></p>

  <p class="c4"><span class=
  "c1">/^pxelinux.cfg/01-(?P&lt;macaddress&gt;[0-9a-f]{2}(-[0-9a-f]{2}){5})$
  = |&lt;hookpath&gt;</span></p>

  <p class="c4 c12"></p>

  <p class="c4"><span>These settings are assumed to be at the very
  top of the configuration file so that they will only be used for
  requests that have no matching pattern in the</span> <span class=
  "c1">[tftp]</span><span>&#160;section. See the section</span>
  <span class="c11">TFTP hooks</span><span>&#160;for more
  information.</span></p>

  <p class="c4"><span>If you need to disable this
  backwards-compatibility behaviour completely, use</span></p>

  <p><span class="c1">[general]</span></p>

  <p><span class="c1">pxelinux-cfg-hook = # disable
  backwards-compatibility rules</span></p>

  <p class="c4 c12"></p>
  <hr style="page-break-before:always;display:none;" />

  <p class="c3 c12"></p>

  <h2 class="c10"><a id="h.4xal5cuhnf5d" name=
  "h.4xal5cuhnf5d"></a><span>TFTP hooks</span></h2>

  <p><span>When go-susi's built-in TFTP server is asked for a file
  that matches</span> <span class=
  "c1">/path</span><span>&#160;or</span> <span class=
  "c1">/^path_regex</span><span>&#160;in the</span> <span class=
  "c1">[tftp]</span><span>&#160;section and the mapping on the
  right side of the "=" starts with "|", the remainder is used as
  the path of a hook to execute. If the program exits with 0 status
  its standard output is sent as response to the TFTP
  request.</span></p>

  <p><span>The hook will receive the following environment
  variables:</span></p>

  <p class="c2"><span class="c0">tftp_request:</span>
  <span>(</span><span class="c11">always
  present</span><span>)</span></p>

  <p class="c5"><span>The path requested in the TFTP request. Note
  that this path does not usually start with "/".</span></p>

  <p class="c2"><span class="c0">groupname:</span></p>

  <p class="c5"><span>If the hook was called because the request
  was matched by a</span> <span class=
  "c1">/^path_regex</span><span>&#160;and</span> <span class=
  "c1">path_regex</span><span>&#160;contains named capturing
  groups, the captured subexpressions will be passed in environment
  variables whose names correspond to the group names.</span></p>

  <p class="c2"><span class="c0">macaddress:</span></p>

  <p class="c5"><span>A named capturing group (see previous
  paragraph) whose name is "macaddress" gets special treatment. All
  characters that are not hex digits will be removed from the
  captured subexpression, it will be converted &#160;to lower case
  and 0-padded or truncated to 12 characters. Colons will be
  inserted to form a MAC address in canonical syntax.</span></p>

  <p class="c2"><span class="c0">dn, faistate,...:</span></p>

  <p class="c5"><span>If a capturing group with name "macaddress"
  was matched (see previous paragraph) and an LDAP object exists
  for that MAC address, its attributes will be passed in
  environment variables named after the attributes (in all lower
  case). The</span> <span class="c1">dn</span><span>&#160;is always
  present in that case. The set of other attributes may
  vary.</span></p>
  <hr style="page-break-before:always;display:none;" />

  <p class="c3 c12"></p>

  <h2 class="c10"><a id="h.tmddyclmp68v" name=
  "h.tmddyclmp68v"></a><span>new-config-hook</span></h2>

  <p><span>When go-susi receives a</span> <span class=
  "c1">new_foo_config</span><span>&#160;message (e.g.</span>
  <span class="c1">new_ldap_config</span><span>) it calls this hook
  to update system configuration files.</span></p>

  <p><span>Depending on the received message the hook will receive
  some of the following environment variables:</span></p>

  <p class="c2"><span class="c0">new_ldap_config:</span></p>

  <p class="c5"><span>When this variable is non-empty, it means
  that LDAP configuration should be updated. The following
  environment variables may be present in that case, depending on
  whether the corresponding elements were part of the</span>
  <span class="c1">new_ldap_config</span><span>&#160;message that
  triggered the hook:</span></p>

  <p class="c5"><span class="c0">admin_base, department, ldap_base,
  ldap_uri, release, unit_tag:</span></p>

  <p class="c9"><span>See the description of</span> <span class=
  "c1">new_ldap_config</span><span>&#160;for details.</span></p>

  <p class="c5"><span class="c0">Note:</span></p>

  <p class="c9"><span>Multiple</span> <span class=
  "c0">ldap_uri</span><span>&#160;values may be present. If so they
  will be separated by newlines in the</span> <span class=
  "c0">ldap_uri</span><span>&#160;environment variable.</span></p>

  <p class="c2"><span class="c0">new_ntp_config:</span></p>

  <p class="c5"><span>When this variable is non-empty, it means
  that NTP configuration should be updated. The following
  environment variable will usually be present (but may not be in
  case the</span> <span class=
  "c1">new_ntp_config</span><span>&#160;did not contain any
  servers):</span></p>

  <p class="c5"><span class="c0">server:</span></p>

  <p class="c9"><span>If present and non-empty this is a
  newline-separated list of NTP servers.</span></p>
  <hr style="page-break-before:always;display:none;" />

  <h2 class="c10"><a id="h.ajcepjvthivg" name=
  "h.ajcepjvthivg"></a><span>trigger-action-hook</span></h2>

  <p class="c4"><span>Client messages of the type</span>
  <span class="c1">trigger_action_*</span><span>&#160;are usually
  intended to trigger a popup message to inform the user about an
  imminent action. go-susi calls the program configured as</span>
  <span class=
  "c1">[general]/trigger-action-hook</span><span>&#160;to perform
  these actions. The hook will receive the following environment
  variables in addition to the standard variables:</span></p>

  <p class="c4 c12"></p>

  <p class="c4 c2"><span class="c0">xml:</span></p>

  <p class="c3"><span>The XML of the</span> <span class=
  "c1">trigger_action_*</span><span>&#160;message.</span></p>

  <p class="c4 c2"><span class="c0">foo:</span></p>

  <p class="c3"><span>For each child element</span> <span class=
  "c1">&lt;foo&gt;</span><span>&#160;of</span> <span class=
  "c1">&lt;xml&gt;</span><span>&#160;there will be a corresponding
  environment variable with the element's text content
  (</span><span class="c11">not</span><span>&#160;using XML
  escaping like</span> <span class="c1">&amp;lt;</span><span>). If
  there are multiple child elements with the same name, their text
  values will be concatenated separated by newlines.</span></p>

  <h2 class="c10"><a id="h.kha1w05s1k8z" name=
  "h.kha1w05s1k8z"></a><span>registered-hook</span></h2>

  <p class="c4"><span>Whenever go-susi has successfully registered
  at a server (via</span> <span class=
  "c1">here_i_am/registered</span><span>), it calls the hook
  configured as</span> <span class=
  "c1">[general]/registered-hook.</span><span>&#160;The hook will
  not be called for erroneous</span> <span class=
  "c1">registered</span><span>&#160;messages. Note that this does
  not mean that the registration server has changed. The hook will
  receive the following environment variables in addition to the
  standard variables:</span></p>

  <p class="c4 c12"></p>

  <p class="c4 c2"><span class="c0">xml:</span></p>

  <p class="c3"><span>The XML of the</span> <span class=
  "c1">registered</span><span>&#160;message from the successful
  registration.</span></p>

  <p class="c4 c2"><span class="c0">foo:</span></p>

  <p class="c3"><span>For each child element</span> <span class=
  "c1">&lt;foo&gt;</span><span>&#160;of</span> <span class=
  "c1">&lt;xml&gt;</span><span>&#160;there will be a corresponding
  environment variable with the element's text content
  (</span><span class="c11">not</span><span>&#160;using XML
  escaping like</span> <span class="c1">&amp;lt;</span><span>). If
  there are multiple child elements with the same name, their text
  values will be concatenated separated by newlines.</span></p>

  <h2 class="c10 c21"><a id="h.s846ecbynk1m" name=
  "h.s846ecbynk1m"></a></h2>

  <h2 class="c10"><a id="h.aksqy9t8gyyf" name=
  "h.aksqy9t8gyyf"></a><span>activated-hook</span></h2>

  <p><span>When go-susi receives a</span> <span class=
  "c1">set_activated_for_installation</span><span>&#160;message, it
  calls the hook configured as</span> <span class=
  "c1">[general]/activated-hook.</span><span>&#160;The hook will
  receive the following environment variables in addition to the
  standard variables:</span></p>

  <p class="c2"><span class="c0">xml:</span></p>

  <p class="c5"><span>The XML of the</span> <span class=
  "c1">set_activated_for_installation</span><span>&#160;message.</span></p>

  <p class="c2"><span class="c0">faistate:</span></p>

  <p class="c5"><span>This reflects the</span> <span class=
  "c1">&lt;faistate&gt;</span><span>&#160;element of the message.
  The sending server sets this to the value of the</span>
  <span class="c1">FAIstate</span><span>&#160;attribute of the
  target machine's LDAP object.</span></p>
  <hr style="page-break-before:always;display:none;" />

  <h2 class="c10"><a id="h.ujvi2n3gkv1g" name=
  "h.ujvi2n3gkv1g"></a><span>detect-hardware-hook</span></h2>

  <p class="c4"><span>When go-susi receives a</span> <span class=
  "c1">detect_hardware</span><span>&#160;message, it calls the hook
  configured as</span> <span class=
  "c1">[general]/detect-hardware-hook.</span><span>&#160;The hook
  only receives standard environment variables. The hook is
  expected to print on its standard output the system's hardware
  configuration in LDIF format. The DN is ignored and may be
  omitted. The output from the hook will be sent back to the
  si-server in a</span> <span class=
  "c1">detected_hardware</span><span>&#160;message.</span></p>

  <p class="c4"><span>Be careful when including attributes
  like</span> <span class="c1">"cn"</span><span>&#160;or</span>
  <span class="c1">"ipHostNumber".</span><span>&#160;go-susi
  permits changing these via</span> <span class=
  "c1">detected_harware</span><span>&#160;messages.</span></p>

  <p class="c4 c12"></p>

  <p class="c4"><span class="c0">Attention:</span></p>

  <p class="c4 c2"><span>The hook is expected to complete quickly.
  If it takes too long, go-susi will time out, ignore the hook's
  output and send an empty</span> <span class=
  "c1">detected_hardware</span><span>&#160;message to the server,
  so that a pending installation does not stall.</span></p>

  <p class="c4 c12"></p>

  <p class="c4"><span class="c0">Example hook output:</span></p>

  <p class="c2"><span class="c1">dn:
  cn=foomachine,ou=somewhere,c=de</span></p>

  <p class="c2"><span class="c1">ghCpuType::
  WjgwLCA0TUh6Cg==</span></p>

  <p class="c2"><span class="c1">gotoModules: ppdev</span></p>

  <p class="c2"><span class="c1">gotoModules: gameport</span></p>

  <p class="c2"><span class="c1">...</span></p>

  <h2 class="c10 c21"><a id="h.me83wdi39akx" name=
  "h.me83wdi39akx"></a></h2>
  <hr style="page-break-before:always;display:none;" />

  <h2 class="c10 c21"><a id="h.85n1xfgyaz2l" name=
  "h.85n1xfgyaz2l"></a></h2>

  <h2 class="c10"><a id="h.i2wshb9a7t92" name=
  "h.i2wshb9a7t92"></a><span>fai-progress-hook</span></h2>

  <p><span>When</span> <span>go-susi starts up, it will launch the
  program configured as</span> <span class=
  "c1">[general]/fai-progress-hook</span><span>&#160;and will
  continually read its standard output line by line and will
  translate each line to a corresponding</span> <span class=
  "c1">CLMSG_*</span> <span>message that it will send to the
  si-server where it is currently registered.</span></p>

  <p><span class="c0">Example:</span></p>

  <p class="c2"><span class="c1">TASKBEGIN extrbase</span></p>

  <p class="c12 c2"></p>

  <p><span>is converted into</span></p>

  <p class="c2"><span class="c0 c1">&lt;xml&gt;</span></p>

  <p class="c5"><span class=
  "c0 c1">&lt;header&gt;</span><span class=
  "c1">CLMSG_TASKBEGIN</span><span class=
  "c0 c1">&lt;/header&gt;</span></p>

  <p class="c5"><span class=
  "c0 c1">&lt;source&gt;</span><span class=
  "c1">172.16.2.146:20083</span><span class=
  "c0 c1">&lt;/source&gt;</span></p>

  <p class="c5"><span class=
  "c0 c1">&lt;target&gt;</span><span class=
  "c1">172.16.2.85:20081</span><span class=
  "c0 c1">&lt;/target&gt;</span></p>

  <p class="c5"><span class=
  "c0 c1">&lt;CLMSG_TASKBEGIN&gt;</span><span class=
  "c1">extrbase</span><span class=
  "c0 c1">&lt;/CLMSG_TASKBEGIN&gt;</span></p>

  <p class="c5"><span class=
  "c0 c1">&lt;macaddress&gt;</span><span class=
  "c1">00:0c:29:50:a3:52</span><span class=
  "c0 c1">&lt;/macaddress&gt;</span></p>

  <p class="c5"><span class=
  "c0 c1">&lt;timestamp&gt;</span><span class=
  "c1">20130305113331</span><span class=
  "c0 c1">&lt;/timestamp&gt;</span></p>

  <p class="c2"><span class="c0 c1">&lt;/xml&gt;</span></p>

  <p><span class="c0">Example:</span></p>

  <p class="c2"><span class="c1">TASKERROR instsoft 421
  warn:install_packages: packages missing</span></p>

  <p><span>is converted into</span></p>

  <p class="c12 c2"></p>

  <p class="c2"><span class="c0 c1">&lt;xml&gt;</span></p>

  <p class="c5"><span class=
  "c0 c1">&lt;header&gt;</span><span class=
  "c1">CLMSG_TASKERROR</span><span class=
  "c0 c1">&lt;/header&gt;</span></p>

  <p class="c5"><span class=
  "c0 c1">&lt;source&gt;</span><span class=
  "c1">172.16.2.146:20083</span><span class=
  "c0 c1">&lt;/source&gt;</span></p>

  <p class="c5"><span class=
  "c0 c1">&lt;target&gt;</span><span class=
  "c1">172.16.2.85:20081</span><span class=
  "c0 c1">&lt;/target&gt;</span></p>

  <p class="c5"><span class=
  "c0 c1">&lt;CLMSG_TASKERROR&gt;</span></p>

  <p class="c5"><span class="c1">&#160; instsoft 421
  warn:install_packages: packages missing</span></p>

  <p class="c5"><span class=
  "c0 c1">&lt;/CLMSG_TASKERROR&gt;</span></p>

  <p class="c5"><span class=
  "c0 c1">&lt;macaddress&gt;</span><span class=
  "c1">00:0c:29:50:a3:52</span><span class=
  "c0 c1">&lt;/macaddress&gt;</span></p>

  <p class="c5"><span class=
  "c0 c1">&lt;timestamp&gt;</span><span class=
  "c1">20130305113331</span><span class=
  "c0 c1">&lt;/timestamp&gt;</span></p>

  <p class="c2"><span class="c0 c1">&lt;/xml</span></p>

  <h2 class="c10 c21"><a id="h.24ioy4w0e22" name=
  "h.24ioy4w0e22"></a></h2>
  <hr style="page-break-before:always;display:none;" />

  <h2 class="c10 c21"><a id="h.tjar8ca0ne17" name=
  "h.tjar8ca0ne17"></a></h2>

  <h2 class="c10"><a id="h.md5sni9nns2l" name=
  "h.md5sni9nns2l"></a><span>fai-savelog-hook</span></h2>

  <p><span>go-susi launches the program configured as</span>
  <span class=
  "c1">[general]/fai-savelog-hook</span><span>&#160;when it
  sees</span> <span class="c1">"TASKEND
  savelog"</span><span>&#160;in the output from</span> <span class=
  "c1">[general]/fai-progress-hook.</span><span>&#160;If the hook
  writes to its standard output data in the format described below,
  it will be passed on to the registration server in a</span>
  <span class="c1">CLMSG_save_fai_log</span><span>&#160;message.
  When the logs have been transferred to the server, the hook will
  receive a newline on its standard input.</span></p>

  <p><span class="c0">Hook output example:</span></p>

  <p class="c2"><span class=
  "c1">log_file:fstab:IyAvZXRjL2...c2RhNQo=<br />
  log_file:format.log:U3Rhc...M2I5ODEK<br />
  &#8230;</span></p>

  <p class="c2"><span class="c1">install</span></p>

  <p><span class="c0">Format Explanation:</span></p>

  <p class="c2"><span>Each line in the output begins with the
  string</span> <span class=
  "c1">"log_file:"</span><span>&#160;followed by the name of a log
  file, followed by</span> <span class=
  "c1">":"</span><span>&#160;followed by the base64 encoded
  contents of the log file. Newline signals the end of the base64
  block, so make sure that the base64 encoder used does not wrap
  the data. The final line of the output has to be either</span>
  <span class="c1">"install"</span><span>&#160;or</span>
  <span class="c1">"softupdate"</span><span>&#160;and specifies the
  type of job the logs are for. The final line has to be terminated
  by a newline. Any further output past that will be
  ignored.</span></p>
  <hr style="page-break-before:always;display:none;" />
  <a href="#" id="id.bajdikkyilhk" name="id.bajdikkyilhk"></a>

  <h1><a id="h.hzdxkgexaqdo" name=
  "h.hzdxkgexaqdo"></a><span>Interfacing with go-susi</span></h1>

  <h2 class="c10"><a id="h.36xshbk95lq" name=
  "h.36xshbk95lq"></a><span>TCP connection to</span> <span class=
  "c1">[server]/port</span></h2>

  <p class="c4"><span>The main way of accessing go-susi's
  functionality is by connecting to it via TCP on the port
  configured in</span> <span class=
  "c1">[server]/port</span><span>&#160;and sending XML-formatted
  requests. Depending on the kind of request go-susi may return an
  XML-formatted answer. Separate go-susi instances will communicate
  via TCP connections. GOsa also uses TCP to interface with
  go-susi.</span></p>

  <h2><a id="h.99ysh1gd1xn3" name="h.99ysh1gd1xn3"></a><span>TCP
  connection to</span> <span class="c1">[faimon]/port</span></h2>

  <p class="c4"><span>go-susi listens on the TCP port configured
  as</span> <span class="c1">[faimon]/port</span><span>&#160;and
  logs messages received there if the loglevel is set to DEBUG.
  Nothing else is done with these messages.</span></p>

  <h2><a id="h.ue6pv2ufxyrz" name="h.ue6pv2ufxyrz"></a><span>TFTP
  server on</span> <span class=
  "c1">[tftp]/port</span><span>&#160;(UDP)</span></h2>

  <p class="c4"><span>go-susi runs a read-only TFTP service. This
  service supports the</span> <span class=
  "c1">tsize</span><span>&#160;and</span> <span class=
  "c1">blksize</span><span>&#160;options. It serves 2 kinds of
  files. The first are those pre-configured in the</span>
  <span class="c1">[tftp]</span><span>&#160;section of the
  configuration. In addition to these, go-susi will call the</span>
  <span class=
  "c1">[general]/pxelinux-cfg-hook</span><span>&#160;program to
  generate</span> <span class=
  "c1">pxelinux</span><span>&#160;configuration files on the fly.
  See the section</span> <span class=
  "c0">pxelinux-cfg-hook</span><span>&#160;for more
  details.</span></p>

  <h2 class="c10"><a id="h.l0vggs5nqxsf" name=
  "h.l0vggs5nqxsf"></a><span>Signals</span></h2>

  <p class="c4"><span class="c0 c1">SIGUSR2</span><span>&#160;-
  this signal causes go-susi to call the</span> <span class=
  "c0">kernel-list-hook</span><span>&#160;and</span> <span class=
  "c0">package-list-hook</span><span>&#160;programs to rebuild the
  kernel and packages databases. While the databases are being
  rebuilt, the old data continues to be available. This is
  different from gosa-si-server.</span></p>

  <p class="c4"><span class="c0 c1">SIGUSR1</span><span>&#160;-
  ignored</span></p>

  <p class="c4"><span class="c0 c1">SIGHUP, SIGINT, SIGQUIT,
  SIGTERM</span><span>&#160;- these signals cause a clean shutdown
  of go-susi after all persistent databases have been
  saved.</span><span class="c1">&#160;</span></p>

  <p class="c4"><span class="c0 c1">SIGABRT</span><span>&#160;-
  causes an immediate unclean exit with backtraces of all
  goroutines. Useful for debugging.</span></p>
  <hr style="page-break-before:always;display:none;" />

  <h1 class="c28"><a id="h.3dolgdo847j1" name=
  "h.3dolgdo847j1"></a><span class=
  "c1">/var/lib/go-susi</span><span>&#160;database</span></h1>

  <p><span>go-susi maintains its database in memory but copies
  changes to XML files stored in the directory</span> <span class=
  "c1">/var/lib/go-susi</span><span>. When go-susi starts up, it
  will populate its internal database with the data from these
  files. This allows data to be persistent across restarts of the
  go-susi daemon.</span></p>

  <p><span class="c0">Tip:</span></p>

  <p class="c2"><span>Use the command line tool</span> <span class=
  "c1">tidy</span><span>&#160;to view database files.
  E.g.:</span></p>

  <p class="c2"><span class="c1">tidy -xml -indent
  /var/lib/go-susi/clientdb.xml</span></p>

  <h2 class="c10"><a id="h.4alj9q9r8lq3" name=
  "h.4alj9q9r8lq3"></a><span>jobdb.xml</span></h2>

  <p><span>This file stores jobs scheduled to be executed at a
  later time as well as progress information for long-running jobs
  such as installations.</span></p>

  <p><span>Each entry in</span> <span class=
  "c1">jobdb.xml</span><span>&#160;has the same structure as
  an</span> <span class=
  "c1">&lt;answerX&gt;</span><span>&#160;element from a reply to
  the</span> <span class=
  "c1">gosa_query_jobdb</span><span>&#160;message. See that
  message's description for details.</span></p>

  <h2 class="c10"><a id="h.50wdi3uufl9n" name=
  "h.50wdi3uufl9n"></a><span>serverdb.xml</span></h2>

  <p><span>This file stores the other servers known to go-susi as
  well as the current encryption keys used for communicating with
  them.</span></p>

  <p><span>Each entry in</span> <span class=
  "c1">serverdb.xml</span><span>&#160;has the same structure as
  a</span> <span class="c1">new_server</span><span>&#160;message.
  See that message's description for details. Note, however, that
  only</span> <span class=
  "c1">&lt;source&gt;</span><span>&#160;and</span> <span class=
  "c1">&lt;key&gt;</span><span>&#160;are required elements in
  a</span> <span class="c1">serverdb.xml</span><span>&#160;entry.
  The other elements described at</span> <span class=
  "c1">new_server</span><span>&#160;may or may not be
  present.</span></p>

  <h2 class="c10"><a id="h.q5bbvyapnxmg" name=
  "h.q5bbvyapnxmg"></a><span>clientdb.xml</span></h2>

  <p><span>This file stores both the clients registered at this
  server as well as clients registered at peers.</span></p>

  <p><span>Each entry in</span> <span class=
  "c1">clientdb.xml</span><span>&#160;has the same structure as
  a</span> <span class=
  "c1">new_foreign_client</span><span>&#160;message. See that
  message's description for details.</span></p>
  <hr style="page-break-before:always;display:none;" />

  <h1><a id="h.ed4sng37wuoy" name=
  "h.ed4sng37wuoy"></a><span>Messages</span></h1>

  <p><span>This chapter lists the XML messages exchanged between
  the various parties communicating with go-susi. The messages are
  grouped into topics with their own sub-sections.</span></p>

  <h2><a id="h.yo95uphqjhiy" name="h.yo95uphqjhiy"></a><span>Modern
  communication protocol (go-susi only)</span></h2>

  <p><span>This communication protocol is not compatible with
  gosa-si. It offers better security and should be used whenever
  compatibility with legacy clients is not required. In order to
  use the modern protocol you need to create and configure TLS
  certificates.</span></p>

  <p><span>Communication begins with one party connecting to
  go-susi's TCP port. The party that initiates the connection sends
  the string</span> <span class=
  "c1">"STARTTLS"</span><span>&#160;followed by</span> <span class=
  "c1">LF</span> <span>(</span><span class="c1">"\n"</span><span>)
  or</span> <span class=
  "c1">CRLF</span><span>&#160;(</span><span class=
  "c1">"\r\n"</span><span>). Then both parties perform the TLS
  handshake. The party that initiated the connection acts as the
  client and the other party as the server. These designations are
  purely for purposes of the TLS handshake. The party initiating
  the connection will often be a server instance of go-susi but
  will act as the TLS client during the TLS handshake.</span></p>

  <p><span>TLS client authentication is required in all cases. This
  means that both the party initiating the connection and the other
  party need to present a certificate to the other party.
  Certificate verification is symmetrical as far as go-susi is
  confirmed. Both parties perform the exact same checks on each
  other's certificate.</span></p>

  <p><span>Once TLS handshake has succeeded, the party that
  initiated the connection may send messages and potentially
  received replies. Each message and reply is an XML fragment sent
  as plain text in UTF-8 encoding. Each message or reply is
  terminated by</span> <span class="c1">LF</span>
  <span>(</span><span class="c1">"\n"</span><span>) or</span>
  <span class="c1">CRLF</span><span>&#160;(</span><span class=
  "c1">"\r\n"</span><span>). The message itself must not contain
  any "\n" characters, but other whitespace characters are
  permitted.</span></p>

  <p><span>Multiple messages may be sent over the same TCP
  connection. It is the responsibility of the process initiating
  the connection (i.e. the sender of the 1st message) to close it
  when it has finished sending all of its messages and reading all
  replies. However, if any party detects an error, it should drop
  the connection as soon as possible (after possibly returning an
  error reply) to avoid lockups.</span></p>

  <p><span class="c0">Security notes:</span><span>&#160;The
  protocol intentionally does not provide for a downgrading
  mechanism if TLS negotiation fails or the receiving party does
  not understand "STARTTLS". Such downgrading would be a security
  risk. If a modern go-susi is configured without certificates (and
  hence cannot do TLS) and receives a "STARTTLS" it will treat it
  as a garbage message and will drop the connection. If a modern
  go-susi initiates a TLS connection and it fails, it will not try
  again without TLS even if</span> <span class=
  "c1">key=...</span><span>&#160;lines are present in the
  configuration. However, if a modern go-susi receives a connection
  without "STARTTLS" it will remember that the connecting party
  does not understand TLS and will use the legacy protocol when
  contacting that party, provided that the configuration file
  provides keys for the legacy protocol.</span></p>

  <p><span>sibridge has a more lenient approach when contacting the
  target server. If both certificates and legacy keys are
  configured, sibridge will attempt a TLS connection first and if
  that fails will try to contact the target server with the legacy
  protocol.</span></p>

  <h2><a id="h.cd7ky6j7y55t" name="h.cd7ky6j7y55t"></a><span>Legacy
  communication protocol (compatible with gosa-si)</span></h2>

  <p><span>This communication protocol is still supported by
  go-susi if the configuration file contains at least one</span>
  <span class="c1">key=...</span><span>&#160;line. Because this
  weakens security, it is recommended to disable the legacy
  protocol by removing all</span> <span class=
  "c1">key=...</span><span>&#160;lines from the configuration,
  unless you have actual legacy clients on your network.</span></p>

  <p><span>Every message and reply is the base64-encoding of an
  encrypted XML fragment. The encryption key used depends on the
  kind of message. See the code in</span> <span class=
  "c1">message/process_msg.go</span><span>&#160;in the
  functions</span> <span class=
  "c1">GosaEncrypt()</span><span>&#160;and</span> <span class=
  "c1">GosaDecrypt()</span><span>&#160;for details on the
  encryption scheme.</span></p>

  <p><span>Each message or reply is terminated by</span>
  <span class="c1">LF</span> <span>(</span><span class=
  "c1">"\n"</span><span>)</span><span>&#160;or</span> <span class=
  "c1">CRLF</span><span>&#160;(</span><span class=
  "c1">"\r\n"</span><span>) following the base64-text (which must
  not be broken by whitespace). It is permissible to send multiple
  messages over the same TCP connection. It is the responsibility
  of the process initiating the connection (i.e. the sender of the
  1st message) to close it when it has finished sending all of its
  messages and reading all replies. However, if any party detects
  an error, it should drop the connection as soon as possible
  (after possibly returning an error reply) to avoid
  lockups.</span></p>

  <h2><a id="h.q0xsu7rifamf" name=
  "h.q0xsu7rifamf"></a><span>Message structure and common
  elements</span></h2>

  <p><span>Note that for readability all XML in this manual will be
  formatted with line breaks. However embedded line breaks are not
  permitted in messages when transmitted with the modern
  protocol.</span></p>

  <p><span>Most messages follow a common structure and share common
  elements.</span></p>

  <p class="c2"><span class="c0 c1">&lt;xml&gt;</span></p>

  <p class="c5"><span class=
  "c0 c1">&lt;header&gt;</span><span class=
  "c1">prefix</span><span class="c1">_foo_bar</span><span class=
  "c0 c1">&lt;/header&gt;</span></p>

  <p class="c5"><span class=
  "c0 c1">&lt;source&gt;</span><span class=
  "c1">GOSA</span><span class="c0 c1">&lt;/source&gt;</span></p>

  <p class="c5"><span class=
  "c0 c1">&lt;target&gt;</span><span class=
  "c1">123.123.123.123:20081</span><span class=
  "c0 c1">&lt;/target&gt;</span></p>

  <p class="c2"><span class="c0 c1">&lt;/xml&gt;</span></p>

  <p class="c12 c2"></p>

  <p><span>The message elements have the following
  meaning:</span></p>

  <p><span class="c0">&lt;header&gt;</span></p>

  <p class="c2"><span>This identifies the type of message. Most
  headers have a</span> <span class=
  "c1">"prefix_"</span><span>&#160;component that a group of
  related messages share. A frequent prefix is</span> <span class=
  "c1">"gosa_"</span><span>&#160;which is used by messages sent by
  GOsa.</span></p>

  <p><span class="c0">&lt;source&gt;</span></p>

  <p class="c2"><span>The sender of the message. Most of the time
  this is an</span> <span class=
  "c1">IP:PORT</span><span>&#160;address of an si-server or client.
  However if the message is sent by GOsa, the</span> <span class=
  "c0">&lt;source&gt;</span><span>&#160;is</span> <span class=
  "c1">"GOSA".</span></p>

  <p class="c2"><span>Developers wishing to interface with go-susi
  should always fill in an</span> <span class=
  "c1">IP:PORT</span><span>&#160;address with the proper IP of the
  sending computer. Because the</span> <span class=
  "c0">&lt;source&gt;</span><span>&#160;is used as a key in some
  places the same sender should always use the exact same</span>
  <span class="c0">&lt;source&gt;</span><span>.</span></p>

  <p><span class="c0">&lt;target&gt;</span></p>

  <p class="c2"><span>The counterpart of</span> <span class=
  "c0">&lt;source&gt;</span><span>. Most of the time this is simply
  the</span> <span class="c1">IP:PORT</span><span>&#160;of the
  recipient, but some message types have the MAC address of an
  affected system in the</span> <span class=
  "c0">&lt;target&gt;</span><span>&#160;element and GOsa, for
  whatever reasons, usually sets</span> <span class=
  "c0">&lt;target&gt;</span><span>&#160;to</span> <span class=
  "c1">"GOSA"</span><span>, even though this makes no
  sense.</span></p>

  <p class="c2"><span>Because</span> <span class=
  "c0">&lt;target&gt;</span><span>&#160;is</span> <span class=
  "c11">not</span><span>&#160;used for message forwarding, it is
  basically useless.</span></p>

  <p class="c2"><span>Developers wishing to interface with go-susi
  should always fill in the</span> <span class=
  "c1">IP:PORT</span><span>&#160;address of the go-susi process
  they target.</span></p>
  <hr style="page-break-before:always;display:none;" />

  <h2><a id="h.v3ibvnwfeq4q" name="h.v3ibvnwfeq4q"></a><span>Reply
  structure</span></h2>

  <p><span>The term reply as used in this manual refers only to
  something that is sent back over the same TCP connection as the
  message the reply refers to. Most messages do not have replies
  and the sender typically closes the connection after sending the
  message. Some messages trigger return messages sent over a new
  connection initiated by the recipient of the first message. These
  return messages are not referred to as replies in this
  manual.</span></p>

  <p><span>Like messages in general, most replies follow a common
  structure.</span></p>

  <p class="c12 c2"></p>

  <p class="c2"><span class="c0 c1">&lt;xml&gt;</span></p>

  <p class="c5"><span class=
  "c0 c1">&lt;header&gt;</span><span class=
  "c1">foo_bar</span><span class="c0 c1">&lt;/header&gt;</span></p>

  <p class="c5"><span class=
  "c0 c1">&lt;source&gt;</span><span class=
  "c1">0.0.0.0:20081</span><span class=
  "c0 c1">&lt;/source&gt;</span></p>

  <p class="c5"><span class=
  "c0 c1">&lt;target&gt;</span><span class=
  "c1">GOSA</span><span class="c0 c1">&lt;/target&gt;</span></p>

  <p class="c5"><span class=
  "c0 c1">&lt;answer1&gt;</span><span class=
  "c1">...</span><span class="c0 c1">&lt;/answer1&gt;</span></p>

  <p class="c5"><span class=
  "c0 c1">&lt;foo_bar&gt;&lt;/foo_bar&gt;</span></p>

  <p class="c5"><span class=
  "c0 c1">&lt;session_id&gt;</span><span class=
  "c1">5352</span><span class=
  "c0 c1">&lt;/session_id&gt;</span></p>

  <p class="c2"><span class="c0 c1">&lt;/xml&gt;</span></p>

  <p><span>The message elements have the following
  meaning:</span></p>

  <p><span class="c0">&lt;header&gt;</span></p>

  <p class="c2"><span>The header is often derived from the message
  the reply is answering by dropping the</span> <span class=
  "c1">"prefix_".</span></p>

  <p><span class="c0">&lt;source&gt;, &lt;target&gt;</span></p>

  <p class="c2"><span>While these are often simply the swapped
  values of the corresponding elements from the initial message, as
  the example shows they can be even more meaningless.</span></p>

  <p><span class="c0">&lt;foo_bar&gt;</span></p>

  <p class="c2"><span>Many replies feature empty elements named
  like the header.</span></p>

  <p><span class="c0">&lt;session_id&gt;</span></p>

  <p class="c2"><span>An implementation detail from gosa-si-server
  that may be useful in log entries. For compatibility reasons
  go-susi adds this element to replies but the contained value is
  arbitrary.</span></p>

  <p><span class="c0">&lt;answer1&gt;</span></p>

  <p class="c2"><span>When a reply may contain multiple datasets
  with the same structure, they are usually wrapped in</span>
  <span class="c0">&lt;answerX&gt;</span><span>&#160;elements
  where</span> <span class="c0">X</span><span>&#160;is the index of
  the answer.</span></p>
  <hr style="page-break-before:always;display:none;" />

  <h2><a id="h.sh9p65qhzwco" name="h.sh9p65qhzwco"></a><span>Error
  replies</span></h2>

  <p><span>If an error occurs while processing a request, the
  si-server may send an error reply. Usually this is only done for
  messages that have regular replies, in particular for messages
  sent by GOsa. GOsa understands error replies with the following
  structure and may present the contained error message as a popup
  to the user.</span></p>

  <p class="c2"><span class="c0 c1">&lt;xml&gt;</span></p>

  <p class="c5"><span class=
  "c0 c1">&lt;header&gt;</span><span class=
  "c1">answer</span><span class="c0 c1">&lt;/header&gt;</span></p>

  <p class="c5"><span class=
  "c0 c1">&lt;source&gt;</span><span class=
  "c1">123.123.123.123:20081</span><span class=
  "c0 c1">&lt;/source&gt;</span></p>

  <p class="c5"><span class=
  "c0 c1">&lt;target&gt;</span><span class=
  "c1">GOSA</span><span class="c0 c1">&lt;/target&gt;</span></p>

  <p class="c5"><span class=
  "c0 c1">&lt;error_string&gt;</span><span class="c1">Number out of
  range</span><span class="c0 c1">&lt;/error_string&gt;</span></p>

  <p class="c5"><span class=
  "c0 c1">&lt;answer1&gt;</span><span class=
  "c1">1</span><span class="c0 c1">&lt;/answer1&gt;</span></p>

  <p class="c2"><span class="c0 c1">&lt;/xml&gt;</span></p>

  <p class="c12 c2"></p>

  <p><span>The message elements have the following
  meaning:</span></p>

  <p><span class=
  "c0">&lt;header&gt;</span><span>&#160;always</span> <span class=
  "c1">"answer".</span></p>

  <p><span class="c0">&lt;source&gt;</span><span>&#160;the sending
  server</span></p>

  <p><span class=
  "c0">&lt;target&gt;</span><span>&#160;always</span> <span class=
  "c1">"GOSA".</span></p>

  <p><span class="c0">&lt;answer1&gt;</span><span>&#160;always
  "1".</span></p>

  <p><span class="c0">&lt;error_string&gt;</span></p>

  <p class="c2"><span>A human-readable description of the error.
  The presence of this element, and not
  &lt;answer1&gt;1&lt;/answer1&gt;, is the best indicator of an
  error.</span></p>

  <h2><a id="h.1tre848fj84d" name=
  "h.1tre848fj84d"></a><span>Encryption keys</span></h2>

  <p><span>Messages are encrypted with different keys depending on
  sender and recipient. Unlike gosa-si-server go-susi accepts all
  messages encrypted with all keys. When sending, go-susi will
  follow the gosa-si-server rules on choosing the key to encrypt
  the message.</span></p>

  <p><span class="c0">GOsa &#11020; Server:</span></p>

  <p class="c2"><span>Messages by GOsa to the si-server and the
  server's replies are encrypted with the</span> <span class=
  "c0">[GOsaPackages]</span><span>&#160;key.</span></p>

  <p><span class="c0">Server &#10132; Client:</span></p>

  <p class="c2"><span>Messages sent by the si-server to si-clients
  registered at that server are always encrypted with the key from
  the most recent</span> <span class=
  "c1">here_i_am</span><span>&#160;or</span> <span class=
  "c1">new_key</span><span>&#160;message sent by the
  client.</span></p>

  <p><span class="c0">Server &#10132; Server:</span></p>

  <p class="c2"><span>Messages sent from one server to another are
  encrypted with the most recent key exchanged between sender and
  receiver via</span> <span class=
  "c1">new_server/confirm_new_server</span><span>&#160;messages.</span></p>

  <p class="c2"><span>The only exception to this rule is the</span>
  <span class="c1">new_server</span><span>&#160;message which is
  encrypted with the</span> <span class=
  "c0">[ServerPackages]</span><span>&#160;key, because when it is
  sent there is not yet an agreed key.</span></p>

  <p><span class="c0">Client &#10132; Server:</span></p>

  <p class="c2"><span>Messages sent by an si-client to the
  si-server where it is registered are encrypted with the key from
  the most recent</span> <span class=
  "c1">here_i_am</span><span>&#160;or</span> <span class=
  "c1">new_key</span><span>&#160;message sent by the client. The
  only exception to this rule is the</span> <span class=
  "c1">here_i_am</span><span>&#160;message itself which is
  encrypted with the</span> <span class=
  "c0">[ClientPackages]</span><span>&#160;key.</span></p>
  <hr style="page-break-before:always;display:none;" />
  <a href="#" id="id.sj4np8e9wdb8" name="id.sj4np8e9wdb8"></a>

  <h2><a id="h.o2gkp1mdgfab" name=
  "h.o2gkp1mdgfab"></a><span>Jobs</span></h2>

  <p><span>One of the core features of the si-server is to keep a
  persistent database of jobs. Each job has a</span> <span class=
  "c1">&lt;timestamp&gt;</span><span>&#160;that determines when the
  job is to be executed and an</span> <span class=
  "c1">&lt;siserver&gt;</span><span>&#160;field that identifies the
  server responsible for launching that job when its time has
  come</span><span>. Depending on the job's type there may be other
  fields. Usually there is a</span> <span class=
  "c1">&lt;macaddress&gt;</span><span>&#160;that specifies the
  machine to be affected by the job.</span></p>

  <p><span>Jobs are created by GOsa in response to user actions.
  There is a distinction between jobs to be executed immediately
  and jobs to be launched at a future time. However, as far as the
  messages are concerned the differences are so minor that go-susi
  (but not gosa-si-server) treats the two forms as
  synonyms.</span></p>

  <p><span>Jobs are stored in the jobdb, which in go-susi is stored
  in a file</span> <span class=
  "c1">jobdb.xml</span><span>&#160;described further above. The
  message</span> <span class=
  "c1">gosa_query_jobdb</span><span>&#160;can be used to
  &#160;extract data from the jobdb. GOsa uses this message for its
  deployment status page.</span></p>

  <p><span>The message</span> <span class=
  "c1">gosa_update_status_jobdb_entry</span><span>&#160;can modify
  the fields of an existing job and the message</span> <span class=
  "c1">gosa_delete_jobdb_entry</span><span>&#160;can be used to
  remove jobs. Note that GOsa does not allow the removal of running
  install jobs. Instead GOsa offers to cancel them. It does this by
  sending a</span> <span class=
  "c1">gosa_trigger_action_faireboot</span><span>&#160;message.</span></p>

  <p><span>When it's time to execute a job, the si-server first
  notifies the target machine (if there is one and it's reachable)
  of the job by sending a</span> <span class=
  "c1">trigger_action_*</span><span>&#160;message. The target
  machine may react to this message by presenting a logged in user
  with a popup asking the user to log out.</span></p>

  <p><span>A job has a lifecycle that is reflected in its</span>
  <span class="c1">&lt;status&gt;</span><span>&#160;and</span>
  <span class="c1">&lt;progress&gt;</span><span>&#160;fields which
  are documented at the message</span> <span class=
  "c1">gosa_query_jobdb.</span><span>&#160;The job starts out
  as</span> <span class="c1">waiting</span><span>, progresses
  to</span> <span class="c1">processing</span><span>&#160;and is
  removed from the jobdb when its</span> <span class=
  "c1">&lt;status&gt;</span><span>&#160;becomes</span> <span class=
  "c1">done.</span><span>&#160;The</span> <span class=
  "c1">&lt;progress&gt;</span><span>&#160;field is only used for
  long-running jobs like installations.</span></p>

  <p><span>Jobs are an important part of server-to-server
  communication. The relevant message</span> <span class=
  "c1">foreign_job_updates</span><span>&#160;is described not in
  the present section but the one on server-to-server
  communication.</span></p>

  <p><span>A special role is played by the message</span>
  <span class="c1">job_trigger_activate_new</span><span>&#160;which
  is used by GOsa for its CSV-import feature. go-susi reacts to
  this message by creating an LDAP object for the target system if
  there isn't one, as well as creating an installation job and
  activating the system. With go-susi</span> <span class=
  "c1">job_trigger_activate_new</span><span>&#160;effectively acts
  as a combination of</span> <span class="c1">detected_hardware,
  job_trigger_action_reinstall</span><span>&#160;and</span>
  <span class=
  "c1">gosa_set_activated_for_installation.</span><span>&#160;gosa-si-server
  handles things differently.</span></p>

  <p><span>GOsa's feature for sending messages to users and/or
  groups results in</span> <span class=
  "c1">job_send_user_msg</span><span>&#160;messages which differ
  from ordinary job messages in that they do not target a machine.
  Other than that they are treated like other jobs, are stored in
  the jobdb and can be read with</span> <span class=
  "c1">gosa_query_jobdb,</span><span>&#160;modified with</span>
  <span class=
  "c1">gosa_update_status_jobdb_entry</span><span>&#160;and removed
  with</span> <span class="c1">gosa_delete_jobdb_entry.</span></p>
  <hr style="page-break-before:always;display:none;" />

  <h3><a id="h.lytqmekfw49" name=
  "h.lytqmekfw49"></a><span>job_trigger_action_*</span></h3>

  <h3><a id="h.18ajv1iep81s" name=
  "h.18ajv1iep81s"></a><span>gosa_trigger_action_*</span></h3>

  <p class="c4"><span class="c0">Purpose:</span></p>

  <p class="c4 c2"><span>GOsa&#11020;Server.</span> <span>Schedule
  a job for execution at a later time (</span><span class=
  "c1">job_*</span><span>) or execute it at once</span><span class=
  "c1">&#160;(gosa_*).</span><span>&#160;The server that gets this
  message from GOsa will tell peer servers about the new job
  via</span> <span class=
  "c1">foreign_job_updates</span><span>.</span></p>

  <p class="c4 c2"><span>When the job's time has come, a
  matching</span> <span class=
  "c1">trigger_action_*</span><span>&#160;message will be sent to
  the affected client (if it is reachable).</span></p>

  <p class="c4 c12"></p>

  <p class="c4"><span class="c0">Example message:</span></p>

  <p class="c4 c2"><span class="c0 c1">&lt;xml&gt;</span></p>

  <p class="c3"><span class=
  "c0 c1">&lt;header&gt;</span><span class=
  "c1">job_trigger_action_lock</span><span class=
  "c0 c1">&lt;/header&gt;</span></p>

  <p class="c3"><span class=
  "c0 c1">&lt;source&gt;</span><span class=
  "c1">GOSA</span><span class="c0 c1">&lt;/source&gt;</span></p>

  <p class="c3"><span class=
  "c0 c1">&lt;target&gt;</span><span class=
  "c1">00:0c:29:50:a3:52</span><span class=
  "c0 c1">&lt;/target&gt;</span></p>

  <p class="c3"><span class=
  "c0 c1">&lt;timestamp&gt;</span><span class=
  "c1">20120914131742</span><span class=
  "c0 c1">&lt;/timestamp&gt;</span></p>

  <p class="c3"><span class=
  "c0 c1">&lt;macaddress&gt;</span><span class=
  "c1">00:0c:29:50:a3:52</span><span class=
  "c0 c1">&lt;/macaddress&gt;</span></p>

  <p class="c3"><span class=
  "c0 c1">&lt;periodic&gt;</span><span class=
  "c1">7_days</span><span class=
  "c0 c1">&lt;/periodic&gt;</span></p>

  <p class="c4 c2"><span class="c0 c1">&lt;/xml&gt;</span></p>

  <p class="c4 c12"></p>

  <p class="c4"><span class="c0">The message elements have the
  following meaning:</span></p>

  <p class="c4"><span class=
  "c0">&lt;header&gt;</span><span>&#160;identifies the kind of job.
  The following jobs are supported:</span></p>

  <p class="c4 c2"><span class=
  "c0">*_trigger_action_halt</span></p>

  <p class="c3"><span>tell client to shut down (allowing logged in
  users to log out first)</span></p>

  <p class="c4 c2"><span class=
  "c0">*_trigger_action_reboot</span></p>

  <p class="c3"><span>tell client to reboot (allowing logged in
  users to log out first)</span></p>

  <p class="c4 c2"><span class=
  "c0">*_trigger_action_faireboot</span></p>

  <p class="c3"><span>abort FAI operation (e.g. installation) in
  progress</span></p>

  <p class="c4 c2"><span class=
  "c0">*_trigger_action_reinstall</span></p>

  <p class="c3"><span>set faiState to &#8220;install&#8221;; tell
  users to log out; wake client if necessary</span></p>

  <p class="c4 c2"><span class=
  "c0">*_trigger_action_update</span></p>

  <p class="c3"><span>set faiState to &#8220;softupdate&#8221;;
  tell users to log out; wake client if necs.</span></p>

  <p class="c4 c2"><span class=
  "c0">*_trigger_action_localboot</span></p>

  <p class="c3"><span>set faiState to &#8220;localboot&#8221; and
  remove pending install/softupdate jobs</span></p>

  <p class="c4 c2"><span class=
  "c0">*_trigger_action_wake</span></p>

  <p class="c3"><span>send wake-on-lan (WOL) to target</span></p>

  <p class="c4 c2"><span class=
  "c0">*_trigger_action_lock</span></p>

  <p class="c3"><span>set gotoMode to locked</span></p>

  <p class="c4 c2"><span class=
  "c0">*_trigger_action_activate</span></p>

  <p class="c3"><span>set gotoMode &#8220;active&#8221;;
  send</span> <span class=
  "c1">set_activated_for_installation</span></p>

  <p class="c3 c12"></p>

  <p class="c4 c2"><span class=
  "c0">&lt;header&gt;</span><span>&#160;will become</span>
  <span class="c0">&lt;headertag&gt;</span><span>&#160;in</span>
  <span class=
  "c1">foreign_job_updates</span><span>&#160;etc.</span></p>

  <p class="c4"><span class="c0">&lt;macaddress&gt;,
  &lt;target&gt;</span></p>

  <p class="c4 c2"><span>At least one of these elements must
  contain a valid MAC address that identifies the machine to be
  affected by the job. If</span> <span class=
  "c0">&lt;macaddress&gt;</span><span>&#160;is present, it will be
  preferred.</span></p>

  <p class="c4 c2"><span>The</span> <span class=
  "c0">&lt;target&gt;</span><span>&#160;value will become</span>
  <span class="c0">&lt;targettag&gt;</span><span>&#160;in</span>
  <span class=
  "c1">foreign_job_updates</span><span>&#160;etc.</span></p>

  <p class="c4"><span class=
  "c0">&lt;timestamp&gt;</span><span>&#160;</span><span class=
  "c11">(optional)</span></p>

  <p class="c4 c2"><span>When the job should be executed. The
  format is "YYYYMMDDHHMMSS". The time is local time of the server
  that receives the message and takes time zone (in particular
  daylight saving time) into account. IOW the job will be executed
  at the earliest time that the server's clock has a value greater
  than the job's timestamp.</span></p>

  <p class="c4 c2"><span>If</span> <span class=
  "c0">&lt;timestamp&gt;</span><span>&#160;is missing, the
  timestamp will be considered to be "now" (meaning the job will be
  executed as soon as possible). "</span><span class=
  "c1">gosa_trigger_*</span><span>" messages do not usually have a
  timestamp.</span></p>

  <p class="c4"><span class=
  "c0">&lt;periodic&gt;</span><span>&#160;</span><span class=
  "c11">(optional)</span></p>

  <p class="c4 c2"><span>The job will be repeated in regular
  intervals. The format is a</span> <span class=
  "c11">number</span><span>&#160;followed by</span> <span class=
  "c1">"_"</span><span>&#160;followed by either</span> <span class=
  "c1">"seconds", "minutes", "hours", "days", "weeks",
  "months"</span><span>&#160;or</span> <span class=
  "c1">"years".</span> <span>Also permitted is</span> <span class=
  "c0">&lt;periodic&gt;</span><span class=
  "c1">none</span><span class=
  "c0">&lt;/periodic&gt;</span><span>&#160;which is the same as not
  having</span> <span class=
  "c0">&lt;periodic&gt;</span><span>.</span></p>

  <p class="c4 c2"><span>If a job is scheduled with</span>
  <span class="c0">&lt;periodic&gt;</span><span>&#160;it will be
  scheduled to run for the first time at the time specified
  in</span> <span class="c0">&lt;timestamp&gt;</span><span>. It
  will run for the 2nd time at the time that results from adding
  the</span> <span class=
  "c0">&lt;periodic&gt;</span><span>&#160;duration to the
  timestamp, for the 3rd time at the time that results from adding
  the duration to the timestamp of the 2nd time, and so on. If, at
  the time the job finishes, one or more of the repeat times have
  already passed, they will be skipped. For example, if a job is
  scheduled every</span> <span class=
  "c1">"1_minutes"</span><span>&#160;and the 1st run takes 1 &#189;
  minutes, the 2nd run will be skipped and the next run will be the
  3rd which will start &#189; minute after the end of the 1st
  run.</span></p>

  <p class="c4 c2"><span>Note that using the unit</span>
  <span class="c1">"days"</span><span>&#160;is different from using
  multiples of 24</span> <span class=
  "c1">"hours"</span><span>&#160;because of daylight savings time
  which may cause days to be longer or shorter. A</span>
  <span class="c1">"week"</span> <span>is the same as 7</span>
  <span class="c1">"days".</span></p>

  <p class="c4 c2"><span>Note that using the
  unit</span><span class="c1">&#160;"months"</span><span>&#160;is
  not the same as any particular number of days because months vary
  in length. The same applies to</span> <span class=
  "c1">"years".</span><span>&#160;E.g. a job scheduled with</span>
  <span class="c0">&lt;timestamp&gt;</span><span class=
  "c1">20120101000000</span><span class=
  "c0">&lt;/timestamp&gt;</span><span>&#160;and</span> <span class=
  "c0">&lt;periodic&gt;</span><span class=
  "c1">1_months</span><span class=
  "c0">&lt;/periodic&gt;</span><span>&#160;will run on 2012-01-01,
  then 2012-02-01, then 2012-03-01,...</span></p>

  <p class="c4 c2"><span>29 February will wrap around to 1 March
  during a non-leap year and from that point on the timestamp will
  stay at the 1st of the month, even during future leap years. 31
  will wrap around to 1 during short months and will stay at
  1.</span></p>

  <p class="c4 c2"><span>IOW, never schedule jobs with a periodic
  unit of</span> <span class="c1">"months"</span><span>&#160;on
  days &gt;= 29.</span></p>

  <p class="c4 c12"></p>

  <p class="c4"><span class="c0">gosa-si-server notes:</span></p>

  <p class="c4 c2"><span>This message is handled in</span>
  <span class=
  "c1">modules/GosaPackages.pm:process_job_msg()</span><span>.</span></p>

  <p class="c4 c2"><span>gosa-si-server does not return a reply to
  the</span> <span class="c1">gosa_*</span><span>&#160;messages
  only to</span> <span class="c1">job_*.</span></p>

  <p class="c4"><span class="c0">go-susi notes:</span></p>

  <p class="c4 c2"><span class=
  "c0">&lt;periodic&gt;</span><span>&#160;units</span> <span class=
  "c1">"years"</span><span>&#160;and</span> <span class=
  "c1">"seconds"</span><span>&#160;are go-susi extensions not
  supported by gosa-si. The unit</span> <span class=
  "c1">"seconds"</span><span>&#160;is for testing only.</span></p>

  <p class="c4 c2"><span>go-susi treats</span> <span class=
  "c1">gosa_*</span><span>&#160;and</span> <span class=
  "c1">job_*</span><span>&#160;the same. In particular go-susi will
  send</span> <span class=
  "c1">foreign_job_updates</span><span>&#160;messages for both.
  gosa-si doesn't do this for</span> <span class=
  "c1">gosa_*</span><span>&#160;messages.</span></p>

  <p class="c4 c2"><span>gosa-si-server checks its foreign_clients
  database and if it finds that the affected client is registered
  at a peer server it will forward the job request to the peer with
  an added</span> <span class=
  "c1">&lt;forward_to_gosa&gt;</span><span>&#160;element. go-susi
  does not do this at the time it receives the message but waits
  until the time the job is up for execution and then forwards the
  job if necessary.</span></p>

  <p class="c4 c2"><span>go-susi treats</span> <span class=
  "c1">gosa_set_activated_for_installation</span><span>&#160;as a
  synonym for</span> <span class=
  "c1">gosa_trigger_action_activate</span><span>.</span></p>

  <p class="c4 c2"><span>go-susi
  treats</span><span>&#160;</span><span class=
  "c1">trigger_action_faireboot</span><span>&#160;</span><span>different
  from gosa-si-server. gosa-si-server locks the machine and reboots
  it, but keeps it in</span> <span class=
  "c1">faiState</span><span>&#160;</span><span class=
  "c1">install</span><span>&#160;(if it is installing). The job
  does not actually disappear. While this makes sense for the name
  of the job, it doesn't match how GOsa uses this job. GOsa
  sends</span> <span class=
  "c1">gosa_trigger_action_faireboot</span> <span>when "Abort" is
  selected in the jobs overview. To better match GOsa's use of this
  job, go-susi interprets "faireboot" as "abort job".</span></p>
  <hr style="page-break-before:always;display:none;" />

  <p class="c4 c12"></p>

  <p class="c4"><span class="c0">Example reply:</span></p>

  <p class="c4 c2"><span class="c0 c1">&lt;xml&gt;</span></p>

  <p class="c3"><span class=
  "c0 c1">&lt;header&gt;</span><span class=
  "c1">answer</span><span class="c0 c1">&lt;/header&gt;</span></p>

  <p class="c3"><span class=
  "c0 c1">&lt;source&gt;</span><span class=
  "c1">0.0.0.0:20081</span><span class=
  "c0 c1">&lt;/source&gt;</span></p>

  <p class="c3"><span class=
  "c0 c1">&lt;target&gt;</span><span class=
  "c1">GOSA</span><span class="c0 c1">&lt;/target&gt;</span></p>

  <p class="c3"><span class=
  "c0 c1">&lt;answer1&gt;</span><span class=
  "c1">0</span><span class="c0 c1">&lt;/answer1&gt;</span></p>

  <p class="c3"><span class=
  "c0 c1">&lt;session_id&gt;</span><span class=
  "c1">5352</span><span class=
  "c0 c1">&lt;/session_id&gt;</span></p>

  <p class="c4 c2"><span class="c0 c1">&lt;/xml&gt;</span></p>

  <p class="c4 c12"></p>

  <p class="c4"><span class="c0">The reply elements have the
  following meaning:</span></p>

  <p class="c4 c2"><span class=
  "c0">&lt;answer1&gt;</span><span>&#160;0 if the job was
  successfully added to the jobdb or a numeric error code if there
  was a problem. In the latter case there will be an</span>
  <span class="c0">&lt;error_string&gt;</span><span>&#160;element
  with a human language description of the error.</span></p>

  <p class="c4"><span class="c0">GOsa notes:</span></p>

  <p class="c4 c2"><span>GOsa sends this message in</span>
  <span class=
  "c1">class_gosaSupportDaemon.inc:append()</span><span>.
  The</span> <span class=
  "c1">"job_trigger_action_*"</span><span>&#160;string comes
  from</span> <span class="c1">get_schedule_action()</span>
  <span>or</span> <span class=
  "c1">get_trigger_action()</span><span>&#160;which are defined
  in</span> <span class=
  "c1">class_DaemonEvent.inc</span><span>&#160;and whose values are
  set in the respective subclass, e.g.</span> <span class=
  "c1">class_DaemonEvent_halt.inc.</span></p>

  <p class="c4 c2"><span>GOsa ignores the reply and in fact appears
  to close the connection after sending the message, so that the
  reply cannot even be delivered.</span></p>
  <hr style="page-break-before:always;display:none;" />

  <h3 class="c16"><a id="h.rfc7061kx2wn" name=
  "h.rfc7061kx2wn"></a><span>job_trigger_activate_new</span></h3>

  <p><span class="c0">Purpose:</span></p>

  <p class="c2"><span>GOsa&#10132;Server.</span> <span>Create a new
  system object and matching install job. This message is sent by
  GOsa for each entry when using the CSV import feature. It&#8217;s
  typically used to import a whole batch of new systems ready for
  installation, so that they only need to be plugged in and turned
  on.</span></p>

  <p class="c12 c2"></p>

  <p><span class="c0">Example message:</span></p>

  <p class="c2"><span class="c0 c1">&lt;xml&gt;</span></p>

  <p class="c5"><span class=
  "c0 c1">&lt;header&gt;</span><span class=
  "c1">job_trigger_activate_new</span><span class=
  "c0 c1">&lt;/header&gt;</span></p>

  <p class="c5"><span class=
  "c0 c1">&lt;source&gt;</span><span class=
  "c1">GOSA</span><span class="c0 c1">&lt;/source&gt;</span></p>

  <p class="c5"><span class=
  "c0 c1">&lt;target&gt;</span><span class=
  "c1">00:0c:29:50:a3:52</span><span class=
  "c0 c1">&lt;/target&gt;</span></p>

  <p class="c5"><span class=
  "c0 c1">&lt;timestamp&gt;</span><span class=
  "c1">20130417120000</span><span class=
  "c0 c1">&lt;/timestamp&gt;</span></p>

  <p class="c5"><span class="c0 c1">&lt;ip&gt;</span><span class=
  "c1">172.16.2.146</span><span class=
  "c0 c1">&lt;/ip&gt;</span></p>

  <p class="c5"><span class="c0 c1">&lt;fqdn&gt;</span><span class=
  "c1">grisham.tvc.example.com</span><span class=
  "c0 c1">&lt;/fqdn&gt;</span></p>

  <p class="c5"><span class=
  "c0 c1">&lt;ogroup&gt;</span><span class=
  "c1">Desktops</span><span class=
  "c0 c1">&lt;/ogroup&gt;</span></p>

  <p class="c5"><span class="c0 c1">&lt;base&gt;</span><span class=
  "c1">ou=Direktorium,o=go-susi,c=de</span><span class=
  "c0 c1">&lt;/base&gt;</span></p>

  <p class="c5"><span class="c0 c1">&lt;mac&gt;</span><span class=
  "c1">00:0c:29:50:a3:52</span><span class=
  "c0 c1">&lt;/mac&gt;</span></p>

  <p class="c5"><span class=
  "c0 c1">&lt;macaddress&gt;</span><span class=
  "c1">00:0c:29:50:a3:52</span><span class=
  "c0 c1">&lt;/macaddress&gt;</span></p>

  <p class="c5"><span class=
  "c0 c1">&lt;dhcp&gt;&lt;/dhcp&gt;</span></p>

  <p class="c2"><span class="c0 c1">&lt;/xml&gt;</span></p>

  <p><span class="c0">The message elements have the following
  meaning:</span></p>

  <p><span class=
  "c0">&lt;timestamp&gt;</span><span>&#160;</span><span class=
  "c11">(optional)</span></p>

  <p class="c2"><span>A</span> <span class=
  "c1">trigger_action_reinstall</span><span>&#160;job with
  this</span> <span class=
  "c0">&lt;timestamp&gt;</span><span>&#160;will be created.
  If</span> <span class="c0">&lt;timestamp&gt;</span><span>&#160;is
  missing, it defaults to now.</span></p>

  <p><span class=
  "c0">&lt;base&gt;</span><span>&#160;</span><span class=
  "c11">(optional)</span></p>

  <p class="c2"><span>The new system object will be put into</span>
  <span class=
  "c1">ou=workstations,ou=systems,&lt;base&gt;</span><span>&#160;or</span>
  <span class=
  "c1">ou=servers,ou=systems,&lt;base&gt;</span><span class=
  "c0 c1">&#160;</span><span>depending on whether it is</span>
  <span class="c1">gotoWorkstation</span><span>&#160;or</span>
  <span class="c1">goServer</span><span>&#160;(based on the</span>
  <span class="c0">&lt;ogroup&gt;</span><span>&#160;information or
  an existing object). If no information about the system's type is
  available, it will be put in</span> <span class=
  "c1">new-systems-base.</span></p>

  <p class="c2"><span>If an object with the given MAC address
  already exists elsewhere, it will be moved to the new
  location.</span></p>

  <p class="c2"><span>If</span> <span class=
  "c0">&lt;base&gt;</span><span>&#160;is missing and</span>
  <span class="c0">&lt;ogroup&gt;</span><span>&#160;is an object
  group,</span><span class="c0">&#160;</span><span>&#160;the system
  will be put into the same</span> <span class=
  "c1">ou</span><span>&#160;as the alphabetically first member
  system of the object group (even if that</span> <span class=
  "c1">ou</span><span>&#160;is not called</span> <span class=
  "c1">"workstations"</span><span>&#160;or</span> <span class=
  "c1">"servers"</span><span>).</span></p>

  <p class="c2"><span>If</span> <span class=
  "c0">&lt;base&gt;</span><span>&#160;is missing and</span>
  <span class="c0">&lt;ogroup&gt;</span><span>&#160;is also
  missing,</span> <span class=
  "c0">&lt;base&gt;</span><span>&#160;will default to</span>
  <span class="c1">[server]/ldap-base</span><span>&#160;for new
  entries and keep the old location if the system already
  exists.</span></p>

  <p class="c2"><span>If</span> <span class=
  "c0">&lt;base&gt;</span><span>&#160;is missing and</span>
  <span class="c0">&lt;ogroup&gt;</span><span>&#160;is a system,
  the new system object will be put into the same</span>
  <span class="c1">ou</span><span>&#160;as the template system
  (even if that</span> <span class="c1">ou</span><span>&#160;is not
  called</span> <span class=
  "c1">"workstations"</span><span>&#160;or</span> <span class=
  "c1">"servers"</span><span>).</span></p>

  <p><span class="c0">&lt;mac&gt;, &lt;macaddress&gt;,
  &lt;target&gt;</span></p>

  <p class="c2"><span>One of these elements must be present. If the
  message has both</span> <span class=
  "c0">&lt;mac&gt;</span><span>&#160;and</span> <span class=
  "c0">&lt;macaddress&gt;</span><span>,</span> <span class=
  "c0">&lt;mac&gt;</span><span>&#160;will take precedence
  over</span> <span class=
  "c0">&lt;macaddress&gt;</span><span>&#160;and an error will be
  logged if they differ.</span></p>

  <p class="c2"><span>If either</span> <span class=
  "c0">&lt;mac&gt;</span><span>&#160;or</span> <span class=
  "c0">&lt;macaddress&gt;</span><span>&#160;is present,</span>
  <span class="c0">&lt;target&gt;</span><span>&#160;is ignored.
  Otherwise it will be used as MAC and it is a fatal error if it is
  not a valid MAC.</span></p>

  <p><span class=
  "c0">&lt;ogroup&gt;</span><span>&#160;</span><span class=
  "c11">(optional)</span></p>

  <p class="c2"><span>Either the plain or full-qualified name of a
  system (i.e. LDAP object with</span> <span class=
  "c1">objectClass=GOHard</span><span>) to use as a template or the
  name of an object group (i.e. LDAP object with</span>
  <span class="c1">objectClass=gosaGroupOfNames</span><span>).</span></p>

  <p class="c2"><span>If</span> <span class=
  "c0">&lt;ogroup&gt;</span><span>&#160;is an object group, its
  member list will be sorted alphabetically and the first</span>
  <span class="c1">GOHard</span><span>&#160;member will be used as
  template system.</span></p>

  <p class="c2"><span>If no LDAP object exists for the given MAC
  address, an object will created with a generated name and the
  relevant attributes will be copied from the template
  system.</span></p>

  <p class="c2"><span>The</span> <span class=
  "c1">gotoMode</span><span>&#160;will always be set to</span>
  <span class="c1">active</span><span>, irrespective of the
  template object&#8217;s value.</span></p>

  <p class="c2"><span>If</span> <span class=
  "c0">&lt;ogroup&gt;</span><span>&#160;is missing and there is no
  existing LDAP object, an incomplete entry will be created
  in</span> <span class="c1">new-systems-base</span><span class=
  "c1">.</span></p>

  <p><span class=
  "c0">&lt;ip&gt;</span><span>&#160;</span><span class=
  "c11">(optional)</span></p>

  <p class="c2"><span>If a new system object is created, its</span>
  <span class="c1">ipHostNumber</span><span>&#160;will be set to
  this value. This is mainly useful to make WOL more reliable by
  telling the server about the subnet of the new system.</span></p>

  <p><span class="c0">&lt;fqdn&gt;</span> <span class=
  "c11">(optional)</span></p>

  <p class="c2"><span>If</span> <span class=
  "c0">&lt;ip&gt;</span><span>&#160;is missing but</span>
  <span class="c0">&lt;fqdn&gt;</span><span>&#160;is present,
  the</span> <span class="c0">&lt;fqdn&gt;</span><span>&#160;will
  be resolved to an IP via DNS. Note that the</span> <span class=
  "c0">&lt;fqdn&gt;</span><span>&#160;will</span> <span class=
  "c11">not</span><span>&#160;be used to name the generated LDAP
  entry. Like</span> <span class=
  "c0">&lt;ip&gt;</span><span>&#160;the purpose of</span>
  <span class="c0">&lt;fqdn&gt;</span><span>&#160;is to make WOL
  more reliable.</span></p>

  <p><span class=
  "c0">&lt;dhcp&gt;</span><span>&#160;ignored.</span></p>

  <p><span class="c0">gosa-si-server notes:</span></p>

  <p class="c2"><span>gosa-si-server ignores</span> <span class=
  "c0">&lt;dhcp&gt;</span><span>&#160;and</span> <span class=
  "c0">&lt;target&gt;</span><span>.</span></p>

  <p><span class="c0">go-susi notes:</span></p>

  <p class="c2"><span>go-susi&#8217;s handling of this message is
  different from gosa-si-server&#8217;s in the following
  respects:</span></p><a href="#" id="id.fhvqu6w21q56" name=
  "id.fhvqu6w21q56"></a>

  <ul class="c20 lst-kix_5ix422mr1rnq-1 start">
    <li class="c5 c14"><span>go-susi creates the system&#8217;s
    LDAP object immediately with a generated name, whereas
    gosa-si-server does not create a system object until the system
    contacts the server.</span></li>

    <li class="c5 c14"><span>go-susi sends a single WOL when the
    install job triggers at the given</span> <span class=
    "c0">&lt;timestamp&gt;</span><span>, whereas gosa-si-server
    keeps sending WOLs until the system contacts the
    server.</span></li>

    <li class="c5 c14"><span class=
    "c0">&lt;ogroup&gt;</span><span>&#160;can be the name of a
    system to use as template, whereas gosa-si-server requires it
    to be an object group.</span></li>

    <li class="c5 c14"><span>If</span> <span class=
    "c0">&lt;base&gt;</span><span>&#160;is missing and</span>
    <span class="c0">&lt;ogroup&gt;</span> <span>is an object
    group, gosa-si-server will derive</span> <span class=
    "c0">&lt;base&gt;</span><span>&#160;from</span> <span class=
    "c0">&lt;ogroup&gt;</span><span>&#8217;s DN whereas go-susi
    derives</span> <span class=
    "c0">&lt;base&gt;</span><span>&#160;from the group's first
    member.</span></li>

    <li class="c5 c14"><span>go-susi creates a normal</span>
    <span class="c1">trigger_action_reinstall</span><span>&#160;job
    when it receives this message.</span></li>
  </ul>

  <p><span class="c0">Example reply:</span></p>

  <p class="c2"><span>see</span> <span class=
  "c1">job_trigger_action_*</span></p>
  <hr style="page-break-before:always;display:none;" />

  <h3><a id="h.b1cynga2n4f7" name=
  "h.b1cynga2n4f7"></a><span>gosa_set_activated_for_installation</span></h3>

  <h3><a id="h.vc4zvgp0v9ry" name=
  "h.vc4zvgp0v9ry"></a><span>job_set_activated_for_installation</span></h3>

  <p class="c4"><span class="c0">Purpose:</span></p>

  <p class="c4 c2"><span>GOsa&#10132;Server.</span> <span>When
  go-susi executes this job, it treats this as a synonym for</span>
  <span class=
  "c1">gosa_trigger_action_activate</span><span>&#160;except that
  there's no reply. However, when go-susi forwards this job to
  another server, it is forwarded with its original header. Because
  gosa-si-server treats the 2 messages differently, it is important
  that the correct message is used if there are gosa-si-server
  peers.</span></p>

  <p class="c4"><span class="c0">go-susi note:</span></p>

  <p class="c4 c2"><span>go-susi accepts the alias</span>
  <span class=
  "c1">job_set_activated_for_installation</span><span>&#160;and
  supports all of the other elements possible for jobs such
  as</span> <span class="c0">&lt;periodic&gt;</span><span>.
  gosa-si-server supports only the</span> <span class=
  "c1">gosa_*</span><span>&#160;form with no job planning
  elements.</span></p>

  <p class="c4 c12"></p>

  <p class="c4"><span class="c0">Example message:</span></p>

  <p class="c4"><span class="c0 c1">&lt;xml&gt;</span></p>

  <p class="c4 c2"><span class=
  "c0 c1">&lt;header&gt;</span><span class=
  "c1">gosa_set_activated_for_installation</span><span class=
  "c0 c1">&lt;/header&gt;<br />
  &lt;source&gt;</span><span class="c1">GOSA</span><span class=
  "c0 c1">&lt;/source&gt;<br />
  &lt;target&gt;</span><span class=
  "c1">00:16:36:7c:db:3f</span><span class=
  "c0 c1">&lt;/target&gt;<br />
  &lt;macaddress&gt;</span><span class=
  "c1">00:16:36:7c:db:3f</span><span class=
  "c0 c1">&lt;/macaddress&gt;</span></p>

  <p class="c4"><span class="c0 c1">&lt;/xml&gt;</span></p>
  <hr style="page-break-before:always;display:none;" />

  <h3><a id="h.y5al68gnxmpw" name=
  "h.y5al68gnxmpw"></a><span>job_send_user_msg</span></h3>

  <p class="c4"><span class="c0">Purpose:</span></p>

  <p class="c4 c2"><span>GOsa&#11020;Server.</span> <span>Send a
  text message to one or more users and/or groups of
  users.</span></p>

  <p class="c4"><span class="c0">go-susi note:</span></p>

  <p class="c4 c2"><span>go-susi does not implement messaging
  services directly. When the job's execution time as determined
  by</span> <span class=
  "c0">&lt;timestamp&gt;</span><span>&#160;has come, the external
  program configured as</span> <span class=
  "c1">[general]/user-msg-hook</span><span>&#160;will be executed.
  See the manual section on that hook for details.</span></p>

  <p class="c4 c12"></p>

  <p class="c4"><span class="c0">Example message:</span></p>

  <p class="c4 c2"><span class="c0 c1">&lt;xml&gt;</span></p>

  <p class="c3"><span class=
  "c0 c1">&lt;header&gt;</span><span class=
  "c1">job_send_user_msg</span><span class=
  "c0 c1">&lt;/header&gt;</span></p>

  <p class="c3"><span class=
  "c0 c1">&lt;source&gt;</span><span class=
  "c1">GOSA</span><span class="c0 c1">&lt;/source&gt;</span></p>

  <p class="c3"><span class=
  "c0 c1">&lt;target&gt;</span><span class=
  "c1">GOSA</span><span class="c0 c1">&lt;/target&gt;</span></p>

  <p class="c3"><span class="c0 c1">&lt;from&gt;</span><span class=
  "c1">Sender Name</span><span class=
  "c0 c1">&lt;/from&gt;</span></p>

  <p class="c3"><span class="c0 c1">&lt;user&gt;</span><span class=
  "c1">user1</span><span class="c0 c1">&lt;/user&gt;</span></p>

  <p class="c3"><span class="c0 c1">&lt;user&gt;</span><span class=
  "c1">user2</span><span class="c0 c1">&lt;/user&gt;</span></p>

  <p class="c3"><span class="c0 c1">...</span></p>

  <p class="c3"><span class=
  "c0 c1">&lt;group&gt;</span><span class="c1">group1</span><span class="c0 c1">&lt;/group&gt;</span></p>

  <p class="c3"><span class=
  "c0 c1">&lt;group&gt;</span><span class="c1">group2</span><span class="c0 c1">&lt;/group&gt;</span></p>

  <p class="c3"><span class="c0 c1">...</span></p>

  <p class="c3"><span class=
  "c0 c1">&lt;subject&gt;</span><span class=
  "c1">QmV0cmVmZg==</span><span class="c0 c1">&lt;/subject&gt;
  &#160;</span></p>

  <p class="c3"><span class=
  "c0 c1">&lt;message&gt;</span><span class=
  "c1">TmFjaHJpY2h0Ck5hY2hyaWNodCBaZWlsZTI=</span><span class=
  "c0 c1">&lt;/message&gt;</span></p>

  <p class="c3"><span class=
  "c0 c1">&lt;timestamp&gt;</span><span class=
  "c1">20130409122130</span><span class=
  "c0 c1">&lt;/timestamp&gt;</span></p>

  <p class="c3"><span class=
  "c0 c1">&lt;delivery_time&gt;</span><span class=
  "c1">20130409122130</span><span class=
  "c0 c1">&lt;/delivery_time&gt;</span></p>

  <p class="c3"><span class=
  "c0 c1">&lt;periodic&gt;</span><span class=
  "c1">none</span><span class="c0 c1">&lt;/periodic&gt;</span></p>

  <p class="c3"><span class=
  "c0 c1">&lt;macaddress&gt;</span><span class=
  "c1">GOSA</span><span class=
  "c0 c1">&lt;/macaddress&gt;</span></p>

  <p class="c4 c2"><span class="c0 c1">&lt;/xml&gt;</span></p>

  <p class="c4"><span class="c0">The message elements have the
  following meaning:</span></p>

  <p class="c4 c2"><span class=
  "c0">&lt;header&gt;</span><span>,</span> <span class=
  "c0">&lt;periodic&gt;</span><span>&#160;and</span> <span class=
  "c0">&lt;timestamp&gt;</span><span>&#160;are the only elements
  used by go-susi and they have the same meaning as for</span>
  <span class="c1">job_trigger_action_*</span><span>.</span></p>

  <p class="c4 c2"><span class=
  "c0">&lt;macaddress&gt;</span><span>&#160;will be replaced with
  the go-susi server's MAC.</span></p>

  <p class="c4 c12"></p>

  <p class="c4"><span class="c0">Example reply:</span></p>

  <p class="c4 c2"><span class="c1">see
  job_trigger_action_*</span></p>
  <hr style="page-break-before:always;display:none;" />

  <h3><a id="h.wj0yc4cuajj2" name=
  "h.wj0yc4cuajj2"></a><span>gosa_query_jobdb</span></h3>

  <p><span class="c0">Purpose:</span></p>

  <p class="c2"><span>GOsa&#11020;Server.</span> <span>Returns all
  entries from the jobdb that match a given filter.</span></p>

  <p class="c15"><span class="c0">Example message:</span></p>

  <p class="c15 c2"><span class="c0 c1">&lt;xml&gt; &#160; &#160;
  &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160;
  &#160;</span></p>

  <p class="c15 c2"><span class="c0 c1">&#160; &#160;
  &lt;header&gt;</span><span class=
  "c1">gosa_query_jobdb</span><span class=
  "c0 c1">&lt;/header&gt;</span></p>

  <p class="c15 c2"><span class="c0 c1">&#160; &#160;
  &lt;target&gt;</span><span class="c1">GOSA</span><span class=
  "c0 c1">&lt;/target&gt;</span></p>

  <p class="c15 c2"><span class="c0 c1">&#160; &#160;
  &lt;source&gt;</span><span class="c1">GOSA</span><span class=
  "c0 c1">&lt;/source&gt;</span></p>

  <p class="c15 c2"><span class="c0 c1">&#160; &#160;
  &lt;where&gt;</span></p>

  <p class="c15 c2"><span class="c0 c1">&#160; &#160; &#160; &#160;
  &lt;clause&gt;</span></p>

  <p class="c15 c2"><span class="c0 c1">&#160; &#160; &#160; &#160;
  &#160; &#160; &lt;connector&gt;</span><span class=
  "c1">or</span><span class="c0 c1">&lt;/connector&gt;</span></p>

  <p class="c15 c2"><span class="c0 c1">&#160; &#160; &#160; &#160;
  &#160; &#160; &lt;phrase&gt;</span></p>

  <p class="c15 c2"><span class="c0 c1">&#160; &#160; &#160; &#160;
  &#160; &#160; &#160; &#160; &lt;operator&gt;</span><span class=
  "c1">eq</span><span class="c0 c1">&lt;/operator&gt;</span></p>

  <p class="c15 c2"><span class="c0 c1">&#160; &#160; &#160; &#160;
  &#160; &#160; &#160; &#160; &lt;macaddress&gt;</span><span class=
  "c1">00:1d:60:7e:9b:f6</span><span class=
  "c0 c1">&lt;/macaddress&gt;</span></p>

  <p class="c15 c2"><span class="c0 c1">&#160; &#160; &#160; &#160;
  &#160; &#160; &lt;/phrase&gt;</span></p>

  <p class="c15 c2"><span class="c0 c1">&#160; &#160; &#160; &#160;
  &lt;/clause&gt;</span></p>

  <p class="c15 c2"><span class="c0 c1">&#160; &#160;
  &lt;/where&gt;</span></p>

  <p class="c15 c2"><span class="c0 c1">&#160; &#160;
  &lt;orderby&gt;</span><span class="c1">id</span><span class=
  "c0 c1">&lt;/orderby&gt;</span></p>

  <p class="c15 c2"><span class="c0 c1">&#160; &#160;
  &lt;limit&gt;</span></p>

  <p class="c2 c15"><span class="c0 c1">&#160; &#160; &#160; &#160;
  &lt;from&gt;</span><span class="c1">0</span><span class=
  "c0 c1">&lt;/from&gt;</span></p>

  <p class="c15 c2"><span class="c0 c1">&#160; &#160; &#160; &#160;
  &lt;to&gt;</span><span class="c1">9999999</span><span class=
  "c0 c1">&lt;/to&gt;</span></p>

  <p class="c15 c2"><span class="c0 c1">&#160; &#160;
  &lt;/limit&gt;</span></p>

  <p class="c15 c2"><span class="c0 c1">&lt;/xml&gt;</span></p>

  <p class="c15 c12 c2"></p>

  <p class="c15"><span class="c0">The message elements have the
  following meaning:</span><span>&#160; &#160; &#160;</span></p>

  <p><span class=
  "c0">&lt;source&gt;,&lt;target&gt;</span><span>&#160;always
  "GOSA"</span></p>

  <p><span class="c0">&lt;where&gt;</span> <span class=
  "c11">(exactly 1)</span><span>&#160;The filter that selects the
  jobs to return.</span></p>

  <p><span class=
  "c0">&lt;clause&gt;</span><span>&#160;</span><span class="c11">(0
  or more)</span></p>

  <p class="c2"><span>A filter condition. All</span> <span class=
  "c0">&lt;clause&gt;</span><span>&#160;filter conditions
  within</span> <span class=
  "c0">&lt;where&gt;</span><span>&#160;are ANDed. If no</span>
  <span class="c0">&lt;clause&gt;</span><span>&#160;element is
  present, all datasets will be selected.</span></p>

  <p><span class=
  "c0">&lt;connector&gt;</span><span>&#160;</span><span class=
  "c11">(0 or 1)</span></p>

  <p class="c2"><span>If not provided, the default connector is
  "AND". All</span> <span class=
  "c0">&lt;phrase&gt;</span><span>&#160;filter conditions within
  a</span> <span class="c0">&lt;clause&gt;</span><span>&#160;are
  combined by this operator like this:</span></p>

  <p class="c32"><span>P</span><span class=
  "c22">1</span><span>&#160;</span><span class=
  "c11">c</span><span>&#160;P</span><span class=
  "c22">2</span><span>&#160;</span><span class=
  "c11">c</span><span>&#160;P</span><span class=
  "c22">3</span><span>&#160;</span><span class=
  "c11">c</span><span>&#160;... P</span><span class=
  "c22">n</span></p>

  <p class="c2"><span>where P</span><span class=
  "c22">i</span><span>&#160;are the phrase filters and</span>
  <span class="c11">c</span><span>&#160;is the connector. Possible
  values for</span> <span class=
  "c0">&lt;connector&gt;</span><span>&#160;are</span> <span class=
  "c1">"AND"</span> <span>and</span> <span class=
  "c1">"OR"</span><span>&#160;(The case of the word doesn&#8217;t
  matter).</span></p>

  <p><span class=
  "c0">&lt;phrase&gt;</span><span>&#160;</span><span class=
  "c11">(</span><span class="c11">0 or more)</span></p>

  <p class="c2"><span>A single primitive filter condition. In
  addition to one</span> <span class=
  "c0">&lt;operator&gt;</span><span>&#160;element (see below)
  a</span> <span class="c0">&lt;phrase&gt;</span><span>&#160;must
  contain exactly one other element. The element's name specifies
  the column name in the database and the element's text content
  the value to compare against. The comparison is performed
  according to</span> <span class=
  "c0">&lt;operator&gt;</span><span>.<br />
  In the case of the jobdb, the valid elements inside</span>
  <span class="c0">&lt;phrase&gt;</span><span>&#160;are</span>
  <span class="c0">&lt;id&gt;</span><span>,</span> <span class=
  "c0">&lt;timestamp&gt;</span><span>,</span> <span class=
  "c0">&lt;status&gt;</span><span>,</span> <span class=
  "c0">&lt;result&gt;</span><span>,</span> <span class=
  "c0">&lt;progress&gt;</span><span>,</span> <span class=
  "c0">&lt;headertag&gt;</span><span>,</span> <span class=
  "c0">&lt;targettag&gt;</span><span>,</span> <span class=
  "c0">&lt;xmlmessage&gt;</span><span>,</span> <span class=
  "c0">&lt;macaddress&gt;</span><span>,</span> <span class=
  "c0">&lt;plainname&gt;</span><span>,</span> <span class=
  "c0">&lt;siserver&gt;</span><span>&#160;and</span> <span class=
  "c0">&lt;modified&gt;</span><span>.</span></p>

  <p><span class=
  "c0">&lt;operator&gt;</span><span>&#160;</span><span class=
  "c11">(optional, assumed to be "eq" if missing)</span></p>

  <p class="c2"><span>The comparison operator for the</span>
  <span class="c0">&lt;phrase&gt;</span><span>. Permitted
  operators</span> <span>are</span> <span class="c1">"eq", "ne",
  "ge", "gt", "le", "lt"</span><span>&#160;wi</span><span>th their
  obvious meanings, as well as</span> <span class="c1">"like" and
  "unlike"</span><span>. The case of the operator name
  doesn&#8217;t matter.</span></p>

  <p class="c2"><span class="c1">"like"</span> <span>performs a
  case-insensitive match against a pattern that may include</span>
  <span>"%"</span><span>&#160;to match any sequence of 0 or more
  characters and "</span><span class="c11">_</span><span>" to match
  exactly one character. A literal</span><span>&#160;"%" or
  "_"</span> <span>cannot be embedded in such a
  pattern.</span><span>&#160;</span><span class=
  "c1">"unlike"</span><span>&#160;is the negation of</span>
  <span class="c1">"like"</span><span>.<br />
  The operators</span> <span class="c1">"ge", "gt", "le"</span>
  <span>and</span> <span class="c1">"lt"</span><span>&#160;will
  attempt to convert their arguments to numbers and do a numeric
  comparison. If that fails, a string comparison is performed. The
  other operators always perform string comparison. go-susi
  performs all string comparisons case-insensitive, but gosa-si is
  case-sensitive (which is a gotcha especially with respect to MAC
  addresses).<br />
  The comparison is performed with the database value as the first
  operand. I.e. the</span> <span class="c1">"gt"</span>
  <span>operator will return datasets whose value for the
  respective column is greater than the comparison value
  from</span> <span class=
  "c0">&lt;phrase&gt;</span><span>.</span></p>

  <p><span class=
  "c0">&lt;orderby&gt;</span><span>&#160;</span><span class=
  "c11">(optional)</span></p>

  <p class="c2"><span>The name of the column of the database to use
  for sorting the results, optionally followed by "ASC" or "DESC"
  for ascending or descending sort.</span></p>

  <p><span class=
  "c0">&lt;limit&gt;</span><span>&#160;</span><span class=
  "c11">(optional)</span><span>&#160;Requests that only parts of
  the result set are returned.</span></p>

  <p><span class="c0">&lt;from&gt;</span></p>

  <p class="c2"><span>After sorting query results by</span>
  <span class="c0">&lt;orderby&gt;</span><span>, skip the first N
  results (i.e. do not include them in the reply) where N is the
  integer inside</span> <span class="c0">&lt;from&gt;</span><span>.
  Note: The name</span> <span class=
  "c0">&lt;from&gt;</span><span>&#160;is misleading because it
  suggests that N is the value of the first item to be returned. A
  negative value is treated like 0.</span></p>

  <p><span class="c0">&lt;to&gt;</span></p>

  <p class="c2"><span>Return a maximum of N results where N is the
  integer inside</span> <span class="c0">&lt;to&gt;</span><span>. A
  negative value means no limit. Note: The name</span> <span class=
  "c0">&lt;to&gt;</span><span>&#160;is misleading since it suggests
  that N is the value of the last item to be returned.</span></p>

  <p><span class="c0">gosa-si-server notes:</span></p>

  <p class="c2"><span>gosa-si-server probably permits any</span>
  <span class="c0">&lt;connector&gt;</span><span>&#160;that results
  in a valid SQL statement, not just</span> <span class=
  "c1">"AND"</span><span>&#160;and</span> <span class=
  "c1">"OR"</span><span>. But I have not seen this used in the
  wild, so go-susi doesn't implement any other
  connectors.</span></p>

  <p class="c2"><span>The implementation of</span> <span class=
  "c1">query_jobdb</span><span>&#160;is found in the file</span>
  <span class="c1">databases.pm</span><span>. The parsing of the
  XML filter into an SQL statement is done in</span> <span class=
  "c1">/usr/share/perl5/GOSA/GosaSupportDaemon.pm:get_where/orderby/limit_statement().</span></p>

  <p class="c2"><span>The names</span> <span class=
  "c0">&lt;from&gt;</span><span>&#160;and</span> <span class=
  "c0">&lt;to&gt;</span><span>&#160;suggest that these tags are
  intended to specify a range of values to return but the actual
  implementation translates</span> <span class=
  "c0">&lt;from&gt;</span><span>&#160;to SQL&#8217;s OFFSET
  and</span> <span class="c0">&lt;to&gt;</span><span>&#160;to
  SQL&#8217;s LIMIT.</span></p>

  <p class="c2"><span>The</span> <span class=
  "c0">&lt;operator&gt;</span><span>&#160;is case-insensitive in
  go-susi (i.e. "eQ" means the same as "eq") but gosa-si-server
  requires operators to be lowercase.</span></p>

  <p class="c2"><span>gosa-si-server does not support the</span>
  <span class=
  "c0">&lt;operator&gt;</span><span>&#160;</span><span class=
  "c1">"unlike"</span></p>

  <p class="c2"><span>go-susi performs all string comparisons
  case-insensitive, but gosa-si is case-sensitive (which is a
  gotcha especially with respect to MAC addresses).</span></p>

  <p><span class="c0">GOsa notes:</span></p>

  <p class="c2"><span>GOsa sends these requests in</span>
  <span class=
  "c1">include/class_gosaSupportDaemon.inc:get_queued_entries()</span><span>&#160;which
  is called by</span> <span class=
  "c1">plugins/addons/goto/class_filterGotoEvents.inc:query().</span></p>
  <hr style="page-break-before:always;display:none;" />

  <p class="c12 c27"></p>

  <p class="c27"><span class="c0">Example reply (empty
  jobdb):</span></p>

  <p class="c2"><span class="c0 c1">&lt;xml&gt;</span></p>

  <p class="c2"><span class="c0 c1">&#160; &#160;
  &lt;header&gt;</span><span class=
  "c1">query_jobdb</span><span class=
  "c0 c1">&lt;/header&gt;</span></p>

  <p class="c2"><span class="c0 c1">&#160; &#160;
  &lt;source&gt;</span><span class=
  "c1">172.16.2.143:20081</span><span class=
  "c0 c1">&lt;/source&gt;</span></p>

  <p class="c2"><span class="c0 c1">&#160; &#160;
  &lt;target&gt;</span><span class="c1">GOSA</span><span class=
  "c0 c1">&lt;/target&gt;</span></p>

  <p class="c2"><span class="c0 c1">&#160; &#160;
  &lt;session_id&gt;</span><span class="c1">2427</span><span class=
  "c0 c1">&lt;/session_id&gt;</span></p>

  <p class="c2"><span class="c0 c1">&lt;/xml&gt;</span></p>

  <p><span class="c0">Example reply (2 jobs):</span></p>

  <p class="c2"><span class="c0 c1">&lt;xml&gt;</span></p>

  <p class="c2"><span class="c0 c1">&#160; &#160;
  &lt;header&gt;</span><span class=
  "c1">query_jobdb</span><span class=
  "c0 c1">&lt;/header&gt;</span></p>

  <p class="c2"><span class="c0 c1">&#160; &#160;
  &lt;source&gt;</span><span class=
  "c1">172.16.2.143:20081</span><span class=
  "c0 c1">&lt;/source&gt;</span></p>

  <p class="c2"><span class="c0 c1">&#160; &#160;
  &lt;target&gt;</span><span class="c1">GOSA</span><span class=
  "c0 c1">&lt;/target&gt;</span></p>

  <p class="c2"><span class="c0 c1">&#160; &#160;
  &lt;answer1&gt;</span></p>

  <p class="c2"><span class="c0 c1">&#160; &#160; &#160; &#160;
  &lt;plainname&gt;</span><span class=
  "c1">grisham</span><span class=
  "c0 c1">&lt;/plainname&gt;</span></p>

  <p class="c2"><span class="c0 c1">&#160; &#160; &#160; &#160;
  &lt;progress&gt;</span><span class="c1">none</span><span class=
  "c0 c1">&lt;/progress&gt;</span></p>

  <p class="c2"><span class="c0 c1">&#160; &#160; &#160; &#160;
  &lt;status&gt;</span><span class="c1">waiting</span><span class=
  "c0 c1">&lt;/status&gt;</span></p>

  <p class="c2"><span class="c0 c1">&#160; &#160; &#160; &#160;
  &lt;siserver&gt;</span><span class=
  "c1">localhost</span><span class=
  "c0 c1">&lt;/siserver&gt;</span></p>

  <p class="c2"><span class="c0 c1">&#160; &#160; &#160; &#160;
  &lt;modified&gt;</span><span class="c1">0</span><span class=
  "c0 c1">&lt;/modified&gt;</span></p>

  <p class="c2"><span class="c0 c1">&#160; &#160; &#160; &#160;
  &lt;targettag&gt;</span><span class=
  "c1">00:0c:29:50:a3:52</span><span class=
  "c0 c1">&lt;/targettag&gt;</span></p>

  <p class="c2"><span class="c0 c1">&#160; &#160; &#160; &#160;
  &lt;macaddress&gt;</span><span class=
  "c1">00:0c:29:50:a3:52</span><span class=
  "c0 c1">&lt;/macaddress&gt;</span></p>

  <p class="c2"><span class="c0 c1">&#160; &#160; &#160; &#160;
  &lt;timestamp&gt;</span><span class=
  "c1">20120824131849</span><span class=
  "c0 c1">&lt;/timestamp&gt;</span></p>

  <p class="c2"><span class="c0 c1">&#160; &#160; &#160; &#160;
  &lt;id&gt;</span><span class="c1">1</span><span class=
  "c0 c1">&lt;/id&gt;</span></p>

  <p class="c2"><span class="c0 c1">&#160; &#160; &#160; &#160;
  &lt;original_id&gt;</span><span class="c1">1</span><span class=
  "c0 c1">&lt;/original_id&gt;</span></p>

  <p class="c2"><span class="c0 c1">&#160; &#160; &#160; &#160;
  &lt;headertag&gt;</span><span class=
  "c1">trigger_action_reinstall</span><span class=
  "c0 c1">&lt;/headertag&gt;</span></p>

  <p class="c2"><span class="c0 c1">&#160; &#160; &#160; &#160;
  &lt;result&gt;</span><span class="c1">none</span><span class=
  "c0 c1">&lt;/result&gt;</span></p>

  <p class="c2"><span class="c0 c1">&#160; &#160; &#160; &#160;
  &lt;xmlmessage&gt;</span><span class=
  "c1">PHhtbD48aGVhZGVyPmpvYl90cmlnZ2VyX2Fjd</span></p>

  <p class="c2"><span class="c1">&#160; &#160; &#160; &#160;
  Glvbl9yZWluc3RhbGw8L2hlYWRlcPkdPU0E8L3NvdXJjZT48d</span></p>

  <p class="c2"><span class="c1">&#160; &#160; &#160; &#160;
  GFyZ2V0PjAwOjBjOjI5OjUwOmEzOjUyPC90YXJnZXQ+PHRpbW</span></p>

  <p class="c2"><span class="c1">&#160; &#160; &#160; &#160;
  VzdGFtcD4yMDEyMDgyNDEzMTg0OTwvdGltZXN0YW1wPjxtYWN</span></p>

  <p class="c2"><span class="c1">&#160; &#160; &#160; &#160;
  hZGRyZXNzPjAwOjBjOjI5OjUwOmEzOjUyPC9tYWNhZGRyZXNz</span></p>

  <p class="c2"><span class="c1">&#160; &#160; &#160; &#160;
  PjwveG1sPg==</span></p>

  <p class="c2"><span class="c0 c1">&#160; &#160; &#160; &#160;
  &lt;/xmlmessage&gt;</span></p>

  <p class="c2"><span class="c0 c1">&#160; &#160;
  &lt;/answer1&gt;</span></p>

  <p class="c2"><span class="c0 c1">&#160; &#160;
  &lt;answer2&gt;</span></p>

  <p class="c2"><span class="c0 c1">&#160; &#160; &#160; &#160;
  &lt;plainname&gt;</span><span class=
  "c1">grisham</span><span class=
  "c0 c1">&lt;/plainname&gt;</span></p>

  <p class="c2"><span class="c0 c1">&#160; &#160; &#160; &#160;
  &lt;progress&gt;</span><span class="c1">none</span><span class=
  "c0 c1">&lt;/progress&gt;</span></p>

  <p class="c2"><span class="c0 c1">&#160; &#160; &#160; &#160;
  &lt;status&gt;</span><span class="c1">waiting</span><span class=
  "c0 c1">&lt;/status&gt;</span></p>

  <p class="c2"><span class="c0 c1">&#160; &#160; &#160; &#160;
  &lt;siserver&gt;</span><span class=
  "c1">localhost</span><span class=
  "c0 c1">&lt;/siserver&gt;</span></p>

  <p class="c2"><span class="c0 c1">&#160; &#160; &#160; &#160;
  &lt;modified&gt;</span><span class="c1">0</span><span class=
  "c0 c1">&lt;/modified&gt;</span></p>

  <p class="c2"><span class="c0 c1">&#160; &#160; &#160; &#160;
  &lt;targettag&gt;</span><span class=
  "c1">00:0c:29:50:a3:52</span><span class=
  "c0 c1">&lt;/targettag&gt;</span></p>

  <p class="c2"><span class="c0 c1">&#160; &#160; &#160; &#160;
  &lt;macaddress&gt;</span><span class=
  "c1">00:0c:29:50:a3:52</span><span class=
  "c0 c1">&lt;/macaddress&gt;</span></p>

  <p class="c2"><span class="c0 c1">&#160; &#160; &#160; &#160;
  &lt;timestamp&gt;</span><span class=
  "c1">20120824143205</span><span class=
  "c0 c1">&lt;/timestamp&gt;</span></p>

  <p class="c2"><span class="c0 c1">&#160; &#160; &#160; &#160;
  &lt;periodic&gt;</span><span class="c1">7_days</span><span class=
  "c0 c1">&lt;/periodic&gt;</span></p>

  <p class="c2"><span class="c0 c1">&#160; &#160; &#160; &#160;
  &lt;id&gt;</span><span class="c1">2</span><span class=
  "c0 c1">&lt;/id&gt;</span></p>

  <p class="c2"><span class="c0 c1">&#160; &#160; &#160; &#160;
  &lt;headertag&gt;</span><span class=
  "c1">trigger_action_reboot</span><span class=
  "c0 c1">&lt;/headertag&gt;</span></p>

  <p class="c2"><span class="c0 c1">&#160; &#160; &#160; &#160;
  &lt;result&gt;</span><span class="c1">none</span><span class=
  "c0 c1">&lt;/result&gt;</span></p>

  <p class="c2"><span class="c0 c1">&#160; &#160; &#160; &#160;
  &lt;xmlmessage&gt;</span><span class=
  "c1">PHhtbD48aGVhZGVyPmpvYl90cmlnZ2VyX2Fjd</span></p>

  <p class="c2"><span class="c1">&#160; &#160; &#160; &#160;
  Glvbl9yZWJvb3Q8L2hlYWRlcj48cU0E8L3NvdXJjZT48dGFyZ</span></p>

  <p class="c2"><span class="c1">&#160; &#160; &#160; &#160;
  2V0PjAwOjBjOjI5OjUwOmEzOjUyPC90YXJnZXQ+PHRpbWVzdG</span></p>

  <p class="c2"><span class="c1">&#160; &#160; &#160; &#160;
  FtcD4yMDEyMDgyNDE0MzIwNTwvdGltZXN0YW1wPjxwZXJpb2R</span></p>

  <p class="c2"><span class="c1">&#160; &#160; &#160; &#160;
  pYz43X2RheXM8L3BlcmlvZGljPjxtYWNhZGRyZXNzPjAwOjBj</span></p>

  <p class="c2"><span class="c1">&#160; &#160; &#160; &#160;
  OjI5OjUwOmEzOjUyPC9tYWNhZGRyZXNzPjwveG1sPg==</span></p>

  <p class="c2"><span class="c0 c1">&#160; &#160; &#160; &#160;
  &lt;/xmlmessage&gt;</span></p>

  <p class="c2"><span class="c0 c1">&#160; &#160;
  &lt;/answer2&gt;</span></p>

  <p class="c2"><span class="c0 c1">&#160; &#160;
  &lt;session_id&gt;</span><span class="c1">5288</span><span class=
  "c0 c1">&lt;/session_id&gt;</span></p>

  <p class="c2"><span class="c0 c1">&lt;/xml&gt;</span></p>

  <p class="c12 c2"></p>

  <p><span class="c0">where the base64-encoded &lt;xmlmessage&gt;
  strings are</span></p>

  <p class="c12 c2"></p>

  <p class="c2"><span class="c0 c1">&lt;xml&gt;</span></p>

  <p class="c2"><span class="c0 c1">&#160; &#160;
  &lt;header&gt;</span><span class=
  "c1">job_trigger_action_reinstall</span><span class=
  "c0 c1">&lt;/header&gt;</span></p>

  <p class="c2"><span class="c0 c1">&#160; &#160;
  &lt;source&gt;</span><span class="c1">GOSA</span><span class=
  "c0 c1">&lt;/source&gt;</span></p>

  <p class="c2"><span class="c0 c1">&#160; &#160;
  &lt;target&gt;</span><span class=
  "c1">00:0c:29:50:a3:52</span><span class=
  "c0 c1">&lt;/target&gt;</span></p>

  <p class="c2"><span class="c0 c1">&#160; &#160;
  &lt;timestamp&gt;</span><span class=
  "c1">20120824131849</span><span class=
  "c0 c1">&lt;/timestamp&gt;</span></p>

  <p class="c2"><span class="c0 c1">&#160; &#160;
  &lt;macaddress&gt;</span><span class=
  "c1">00:0c:29:50:a3:52</span><span class=
  "c0 c1">&lt;/macaddress&gt;</span></p>

  <p class="c2"><span class="c0 c1">&lt;/xml&gt;</span></p>

  <p class="c12 c2"></p>

  <p><span class="c0">and</span></p>

  <p class="c2"><span class="c0 c1">&lt;xml&gt;</span></p>

  <p class="c2"><span class="c0 c1">&#160; &#160;
  &lt;header&gt;</span><span class=
  "c1">job_trigger_action_reboot</span><span class=
  "c0 c1">&lt;/header&gt;</span></p>

  <p class="c2"><span class="c0 c1">&#160; &#160;
  &lt;source&gt;</span><span class="c1">GOSA</span><span class=
  "c0 c1">&lt;/source&gt;</span></p>

  <p class="c2"><span class="c0 c1">&#160; &#160;
  &lt;target&gt;</span><span class=
  "c1">00:0c:29:50:a3:52</span><span class=
  "c0 c1">&lt;/target&gt;</span></p>

  <p class="c2"><span class="c0 c1">&#160; &#160;
  &lt;timestamp&gt;</span><span class=
  "c1">20120824143205</span><span class=
  "c0 c1">&lt;/timestamp&gt;</span></p>

  <p class="c2"><span class="c0 c1">&#160; &#160;
  &lt;periodic&gt;</span><span class="c1">7_days</span><span class=
  "c0 c1">&lt;/periodic&gt;</span></p>

  <p class="c2"><span class="c0 c1">&#160; &#160;
  &lt;macaddress&gt;</span><span class=
  "c1">00:0c:29:50:a3:52</span><span class=
  "c0 c1">&lt;/macaddress&gt;</span></p>

  <p class="c2"><span class="c0 c1">&lt;/xml&gt;</span></p>

  <p class="c12 c2"></p>

  <p class="c12 c2"></p>

  <p><span class="c0">The reply elements have the following
  meaning:</span></p>

  <p><span class="c0">&lt;plainname&gt;</span><span>&#160;The name
  (without domain) of the machine affected by the job.</span></p>

  <p><span class="c0">&lt;progress&gt;</span><span>&#160;Possible
  values:</span></p>

  <p class="c2"><span class="c1">"none":</span><span>&#160; The job
  has not started yet.</span></p>

  <p class="c2"><span class=
  "c1">"hardware-detection":</span><span>&#160;A</span>
  <span class="c1">detect_hardware</span><span>&#160;message has
  been sent to the client.</span></p>

  <p class="c2"><span class=
  "c1">"goto-activation":</span><span>&#160;</span><span class=
  "c1">CLMSG_GOTOACTIVATION</span><span>&#160;has been received
  from client.</span></p>

  <p class="c2"><span>An integer between 1 and 100 (inclusive)
  gives a percentage of how far along the installation has
  progressed.</span></p>

  <p><span class=
  "c0">&lt;status&gt;</span><span>&#160;</span><span>Possible
  values:</span></p>

  <p class="c2"><span class="c1">"waiting":</span><span>&#160;No
  action has been performed yet. The server is waiting for the time
  specified by the job's</span> <span class=
  "c0">&lt;timestamp&gt;</span><span>.</span></p>

  <p class="c2"><span class=
  "c1">"processing":</span><span>&#160;The server has started
  taking action on the job.</span></p>

  <p class="c2"><span class=
  "c1">"processed":</span><span>&#160;gosa-si uses this to precede
  "done" in some cases. Not used by go-susi.</span></p>

  <p class="c2"><span class=
  "c1">"paused:"</span><span>&#160;</span><span class=
  "c0">FIXME???</span></p>

  <p class="c2"><span class="c1">"done"</span><span class=
  "c1">:</span><span>&#160;The job has completed. gosa-si allows
  finished jobs to be observed for a short period of time. go-susi
  however removes them immediately, so that the "done" status can
  not be observed. Note that a</span> <span class=
  "c1">foreign_job_updates</span><span>&#160;message can of course
  contain a "done" status.</span></p>

  <p class="c2"><span class=
  "c1">"error":</span><span>&#160;Something went wrong.</span>
  <span class="c0">&lt;result&gt;</span><span>&#160;contains more
  details.</span></p>

  <p><span class="c0">&lt;siserver&gt;</span></p>

  <p class="c2"><span>The listen address (IP:port) of the server
  responsible for processing the job. When gosa-si-server sends
  this message, this can also be the word &#8220;localhost&#8221;.
  go-susi never returns "localhost".</span></p>

  <p><span class="c0">&lt;modified&gt;</span><span>&#160;Always
  "1". Ignore.</span></p>

  <p><span class="c0">&lt;targettag&gt;</span></p>

  <p class="c2"><span>The</span> <span class=
  "c0">&lt;target&gt;</span><span>&#160;from the</span>
  <span class="c1">job_trigger_action_*</span><span>&#160;</span><span>message
  that created the job. This is typically the same as</span>
  <span class="c0">&lt;macaddress&gt;</span><span>.</span></p>

  <p><span class="c0">&lt;macaddress&gt;</span><span>&#160;The
  affected machine's MAC address.</span></p>

  <p><span class=
  "c0">&lt;timestamp&gt;</span><span>&#160;</span></p>

  <p class="c2"><span>When the job should be executed. The format
  is "YYYYMMDDHHMMSS". The time is local time of the server
  responsible for the job (see</span> <span class=
  "c0">&lt;siserver&gt;</span><span>) and takes daylight saving
  time into account. IOW the job will be executed at the earliest
  time that the responsible server's clock has a value greater than
  the job's timestamp.</span></p>

  <p><span class=
  "c0">&lt;periodic&gt;</span><span>&#160;(</span><span class=
  "c11">optional</span><span>)</span></p>

  <p class="c2"><span>The format is a</span> <span class=
  "c11">number</span><span>&#160;followed by &#8220;_&#8221;
  followed by either</span> <span class="c1">"minutes", "hours",
  "days", "weeks", &#160;"months"</span><span>&#160;or</span>
  <span class="c1">"years".</span><span>&#160;Also possible
  is</span> <span class="c0">&lt;periodic&gt;</span><span class=
  "c1">none</span><span class=
  "c0">&lt;/periodic&gt;</span><span>&#160;which is the same
  as</span> <span class="c0">&lt;periodic&gt;</span><span>&#160;not
  being present</span><span>.</span></p>

  <p class="c2"><span>See</span> <span class=
  "c1">job_trigger_action_*</span><span>&#160;for more information
  on the exact interpretation of</span> <span class=
  "c0">&lt;periodic&gt;</span><span>.</span></p>

  <p><span class="c0">&lt;id&gt;</span></p>

  <p class="c2"><span>A string that identifies the job (not
  necessarily a number; in particular not a 32bit number). Jobs
  are</span> <span class="c11">not</span><span>&#160;reindexed when
  a job is deleted, so some ids may be &#8220;missing&#8221;. In
  particular the</span> <span class=
  "c0">&lt;id&gt;</span><span>&#160;is</span> <span class=
  "c11">not</span><span>&#160;identical to the XX in</span>
  <span class="c0">&lt;answerXX&gt;</span><span>. Answers are
  always numbered starting from 1 with no missing
  numbers.</span></p>

  <p><span class=
  "c0">&lt;original_id&gt;</span><span>&#160;</span><span class=
  "c11">(optional)</span></p>

  <p class="c2"><span>the</span> <span class=
  "c0">&lt;id&gt;</span><span>&#160;of the job on the
  responsible</span> <span class=
  "c0">&lt;siserver&gt;</span><span>&#160;(which may be different
  from</span> <span class="c0">&lt;id&gt;</span><span>).</span></p>

  <p><span class="c0">&lt;headertag&gt;</span></p>

  <p class="c2"><span>Identifies the type of job. Derived from the
  &lt;header&gt; of the message that created the job by removing
  the prefix. E.g.</span> <span class=
  "c1">gosa_trigger_action_localboot &#8658;
  trigger_action_localboot.</span></p>

  <p><span class="c0">&lt;result&gt;</span><span>&#160;Further
  information about the job. Possible values:</span></p>

  <p class="c2"><span>"none": No information available.</span></p>

  <p class="c2"><span>error description: If</span> <span class=
  "c0">&lt;status&gt;</span><span class=
  "c1">error</span><span class="c0">&lt;/status&gt;</span><span>,
  this is a human-readable description with more
  information.</span></p>

  <p class="c2"><span>&#8220;TASKBEGIN foo&#8221; where
  &#8220;foo&#8221; is the most recent task sent by the client in a
  &#160;</span><span class=
  "c1">CLMSG_TASKBEGIN</span><span>&#160;message during
  installation.</span></p>

  <p><span class="c0">&lt;xmlmessage&gt;</span></p>

  <p class="c2"><span>base64-encoded &lt;xml&gt;...&lt;/xml&gt;
  message that was used to add this job to the database, usually
  a</span> <span class=
  "c1">job_trigger_action_*</span><span>&#160;message.</span></p>
  <hr style="page-break-before:always;display:none;" />

  <p><span class="c0">gosa-si-server notes:</span></p>

  <p class="c2"><span>New jobs always get the highest existing
  job</span> <span class="c0">&lt;id&gt;</span><span>&#160;+ 1.
  Because unfortunately GOsa uses the id column to identify a job
  when it sends</span> <span class=
  "c1">gosa_delete_jobdb_entry</span><span>&#160;this seems to
  allow for a race condition where user X wants to delete the
  highest-numbered job but before the request reaches the
  gosa-si-server another user Y deletes said job and adds a new
  job. This would cause user X to incorrectly delete user Y&#8217;s
  new job.<br />
  go-susi does not have this problem because it doesn&#8217;t
  repeat</span> <span class=
  "c0">&lt;id&gt;</span><span>&#160;values.</span></p>

  <p class="c2"><span>gosa-si-server splits up the</span>
  <span class="c0">&lt;xmlmessage&gt;</span><span>&#160;with
  whitespace which breaks base64-decoding unless the whitespace is
  removed first.</span></p>

  <p class="c2"><span>gosa-si-server does not report</span>
  <span class="c0">&lt;original_id&gt;</span><span>.</span></p>

  <p class="c2"><span>gosa-si treats</span> <span class=
  "c0">&lt;macaddress&gt;</span><span>&#160;as
  case-sensitive.</span></p>

  <p><span class="c0">GOsa notes:</span></p>

  <p class="c2"><span>AFAICT GOsa doesn't care about the
  reply's</span> <span class=
  "c0">&lt;source&gt;</span><span>,</span> <span class=
  "c0">&lt;target&gt;</span><span>&#160;and</span> <span class=
  "c0">&lt;session_id&gt;</span><span>.</span></p>

  <p class="c2"><span>AFAICT GOsa doesn't care about</span>
  <span class="c0">&lt;targettag&gt;</span><span>&#160;and there's
  no other use I can find. IOW it's completely useless.</span></p>
  <hr style="page-break-before:always;display:none;" />

  <h3 class="c16"><a id="h.am3mtnji9zso" name=
  "h.am3mtnji9zso"></a><span>gosa_delete_jobdb_entry</span></h3>

  <p><span class="c0">Purpose:</span></p>

  <p class="c2"><span>GOsa&#11020;Server. Remove planned jobs from
  the database. Sends</span> <span class=
  "c1">foreign_job_updates</span><span>&#160;with</span>
  <span class=
  "c0">&lt;status&gt;</span><span>done</span><span class=
  "c0">&lt;/status&gt;</span><span>&#160;and</span> <span class=
  "c0">&lt;periodic&gt;</span><span>none</span><span class=
  "c0">&lt;/periodic&gt;</span><span>&#160;(or no</span>
  <span class="c0">&lt;periodic&gt;</span><span>&#160;at
  all)</span><span class="c0">&#160;</span><span>to peer servers to
  make them remove the jobs from their databases as
  well.</span></p>

  <p><span class="c0">Example message:</span></p>

  <p class="c2"><span class="c0 c1">&lt;xml&gt;</span></p>

  <p class="c5"><span class=
  "c0 c1">&lt;header&gt;</span><span class=
  "c1">gosa_delete_jobdb_entry</span><span class=
  "c0 c1">&lt;/header&gt;</span></p>

  <p class="c5"><span class=
  "c0 c1">&lt;target&gt;</span><span class=
  "c1">GOSA</span><span class="c0 c1">&lt;/target&gt;</span></p>

  <p class="c5"><span class=
  "c0 c1">&lt;source&gt;</span><span class=
  "c1">GOSA</span><span class="c0 c1">&lt;/source&gt;</span></p>

  <p class="c5"><span class="c0 c1">&lt;where&gt;</span></p>

  <p class="c5"><span class="c0 c1">&#160; &#160; &#160;
  &lt;clause&gt;</span></p>

  <p class="c5"><span class="c0 c1">&#160; &#160; &#160; &#160;
  &#160; &#160; &lt;connector&gt;</span><span class=
  "c1">or</span><span class="c0 c1">&lt;/connector&gt;</span></p>

  <p class="c5"><span class="c0 c1">&#160; &#160; &#160; &#160;
  &#160; &#160; &lt;phrase&gt;</span></p>

  <p class="c5"><span class="c0 c1">&#160; &#160; &#160; &#160;
  &#160; &#160; &#160; &#160; &#160;
  &lt;operator&gt;</span><span class="c1">eq</span><span class=
  "c0 c1">&lt;/operator&gt;</span></p>

  <p class="c5"><span class="c0 c1">&#160; &#160; &#160; &#160;
  &#160; &#160; &#160; &#160; &#160; &lt;id&gt;</span><span class=
  "c1">1</span><span class="c0 c1">&lt;/id&gt;</span></p>

  <p class="c5"><span class="c0 c1">&#160; &#160; &#160; &#160;
  &#160; &#160; &lt;/phrase&gt;</span></p>

  <p class="c5"><span class="c0 c1">&#160; &#160; &#160;
  &lt;/clause&gt;</span></p>

  <p class="c5"><span class="c0 c1">&lt;/where&gt;</span></p>

  <p class="c2"><span class="c0 c1">&lt;/xml&gt;</span></p>

  <p class="c12 c2"></p>

  <p><span class="c0">The message elements have the following
  meaning:</span></p>

  <p class="c2"><span>Aside from the</span> <span class=
  "c0">&lt;header&gt;</span><span>&#160;the elements are the same
  as for</span> <span class=
  "c1">gosa_query_jobdb</span><span>.</span></p>
  <hr style="page-break-before:always;display:none;" />

  <p><span class="c0">Example reply:</span></p>

  <p class="c2"><span class="c0 c1">&lt;xml&gt;</span></p>

  <p class="c5"><span class=
  "c0 c1">&lt;header&gt;</span><span class=
  "c1">answer</span><span class="c0 c1">&lt;/header&gt;</span></p>

  <p class="c5"><span class=
  "c0 c1">&lt;source&gt;</span><span class=
  "c1">0.0.0.0:20081</span><span class=
  "c0 c1">&lt;/source&gt;</span></p>

  <p class="c5"><span class=
  "c0 c1">&lt;target&gt;</span><span class=
  "c1">GOSA</span><span class="c0 c1">&lt;/target&gt;</span></p>

  <p class="c5"><span class=
  "c0 c1">&lt;answer1&gt;</span><span class=
  "c1">0</span><span class="c0 c1">&lt;/answer1&gt;</span></p>

  <p class="c5"><span class=
  "c0 c1">&lt;session_id&gt;</span><span class=
  "c1">5352</span><span class=
  "c0 c1">&lt;/session_id&gt;</span></p>

  <p class="c2"><span class="c0 c1">&lt;/xml&gt;</span></p>

  <p class="c12 c2"></p>

  <p><span class="c0">The reply elements have the following
  meaning:</span></p>

  <p class="c2"><span class=
  "c0">&lt;answer1&gt;</span><span>&#160;0 if the jobs were
  successfully deleted or a numeric error code if there was a
  problem. In the latter case there will be an</span> <span class=
  "c0">&lt;error_string&gt;</span><span>&#160;element with a human
  language description of the error.</span></p>

  <p class="c2"><span>If no job matches the query that is not an
  error.</span></p>

  <p><span class="c0">gosa-si-server notes:</span></p>

  <p class="c2"><span>Some versions of gosa-si-server return broken
  replies to this message. The contained answer element is
  unusable, e.g.</span> <span class=
  "c0">&lt;answer1&gt;</span><span class=
  "c1">ARRAY(0xa3dfda8)</span><span class=
  "c0">&lt;/answer1&gt;</span><span>.</span></p>

  <p class="c12 c2"></p>

  <p><span class="c0">go-susi notes:</span></p>

  <p class="c2"><span>When the job to be deleted is another
  server&#8217;s responsibility, go-susi will forward the deletion
  request to that server. go-susi will not remove the job from its
  own database unless the responsible server reacts to the
  forwarded request. This means that jobs from servers that are
  down cannot be deleted. However, when go-susi cannot establish a
  connection to a server for some time, it will automatically purge
  that server&#8217;s jobs from its database.</span></p>

  <p class="c12 c27"></p>

  <p><span class="c0">GOsa notes:</span></p>

  <p class="c2"><span>This message is sent in</span> <span class=
  "c1">class_gosaSupportDaemon.inc:remove_entries()</span><span>.</span></p>

  <p class="c2"><span>GOsa always uses the id column to identify
  the jobs. See the notes for</span> <span class=
  "c1">gosa_query_jobdb</span><span>&#160;regarding</span>
  <span class="c0">&lt;id&gt;</span><span>.</span></p>

  <p class="c2"><span>GOsa does not care about the actual reply.
  The only requirement is that the outer-most tag must be
  either</span> <span class=
  "c0">&lt;xml&gt;</span><span>&#160;or</span> <span class=
  "c0">&lt;count&gt;</span><span>. If it isn't GOsa will log an
  error.</span></p>
  <hr style="page-break-before:always;display:none;" />

  <p class="c12 c2"></p>

  <h3 class="c16"><a id="h.aa2wm0ojc2ux" name=
  "h.aa2wm0ojc2ux"></a><span>gosa_update_status_jobdb_entry</span></h3>

  <p><span class="c0">Purpose:</span></p>

  <p class="c2"><span>GOsa&#11020;Server. Change properties of a
  scheduled job. Sends</span> <span class=
  "c1">foreign_job_updates</span><span>&#160;with the new
  data</span><span class="c0">&#160;</span><span>to peer
  servers.</span></p>

  <p><span class="c0">Example message:</span></p>

  <p class="c2"><span class="c0 c1">&lt;xml&gt;</span></p>

  <p class="c5"><span class=
  "c0 c1">&lt;header&gt;</span><span class=
  "c1">gosa_update_status_jobdb_entry</span><span class=
  "c0 c1">&lt;/header&gt;</span></p>

  <p class="c5"><span class=
  "c0 c1">&lt;target&gt;</span><span class=
  "c1">GOSA</span><span class="c0 c1">&lt;/target&gt;</span></p>

  <p class="c5"><span class=
  "c0 c1">&lt;source&gt;</span><span class=
  "c1">GOSA</span><span class="c0 c1">&lt;/source&gt;</span></p>

  <p class="c5"><span class="c0 c1">&lt;where&gt;</span></p>

  <p class="c9"><span class="c0 c1">&lt;clause&gt;</span></p>

  <p class="c18"><span class=
  "c0 c1">&lt;connector&gt;</span><span class=
  "c1">or</span><span class="c0 c1">&lt;/connector&gt;</span></p>

  <p class="c18"><span class="c0 c1">&lt;phrase&gt;</span></p>

  <p class="c13"><span class=
  "c0 c1">&lt;operator&gt;</span><span class=
  "c1">eq</span><span class="c0 c1">&lt;/operator&gt;</span></p>

  <p class="c13"><span class="c0 c1">&lt;id&gt;</span><span class=
  "c1">1</span><span class="c0 c1">&lt;/id&gt;</span></p>

  <p class="c18"><span class="c0 c1">&lt;/phrase&gt;</span></p>

  <p class="c9"><span class="c0 c1">&lt;/clause&gt;</span></p>

  <p class="c5"><span class="c0 c1">&lt;/where&gt;</span></p>

  <p class="c5"><span class="c0 c1">&lt;update&gt;</span></p>

  <p class="c9"><span class=
  "c0 c1">&lt;timestamp&gt;</span><span class=
  "c1">20121019132424</span><span class=
  "c0 c1">&lt;/timestamp&gt;</span></p>

  <p class="c5"><span class="c0 c1">&lt;/update&gt;</span></p>

  <p class="c2"><span class="c0 c1">&lt;/xml&gt;</span></p>

  <p class="c12 c2"></p>

  <p><span class="c0">The message elements have the following
  meaning:</span></p>

  <p class="c2"><span>Aside from</span> <span class=
  "c0">&lt;header&gt;</span><span>&#160;and</span> <span class=
  "c0">&lt;update&gt;</span><span>&#160;the elements are the same
  as for</span> <span class=
  "c1">gosa_query_jobdb</span><span>.</span></p>

  <p class="c12 c2"></p>

  <p class="c2"><span class="c0">&lt;update&gt;</span></p>

  <p class="c5"><span>Each subelement of</span> <span class=
  "c0">&lt;update&gt;</span><span>&#160;sets a new value for the
  respective aspect of the job(s). All other aspects of the job
  remain unchanged. To unset</span> <span class=
  "c0">&lt;periodic&gt;</span><span>, include</span> <span class=
  "c0">&lt;periodic&gt;</span><span class=
  "c1">none</span><span class="c0">&lt;/periodic&gt;</span><span>.
  It is permissible to change</span> <span class=
  "c0">&lt;status&gt;</span> <span>with this command although this
  only make sense in a few cases.</span></p>

  <p class="c5"><span>Note that it is possible to change multiple
  jobs at the same time with an appropriate</span> <span class=
  "c0">&lt;where&gt;</span><span>, but there is only one</span>
  <span class="c0">&lt;update&gt;</span><span>&#160;element that is
  applied to all selected jobs.</span></p>
  <hr style="page-break-before:always;display:none;" />

  <p><span class="c0">Example reply:</span></p>

  <p class="c2"><span class="c0 c1">&lt;xml&gt;</span></p>

  <p class="c5"><span class=
  "c0 c1">&lt;header&gt;</span><span class=
  "c1">answer</span><span class="c0 c1">&lt;/header&gt;</span></p>

  <p class="c5"><span class=
  "c0 c1">&lt;source&gt;</span><span class=
  "c1">172.16.2.143:20081</span><span class=
  "c0 c1">&lt;/source&gt;</span></p>

  <p class="c5"><span class=
  "c0 c1">&lt;target&gt;</span><span class=
  "c1">GOSA</span><span class="c0 c1">&lt;/target&gt;</span></p>

  <p class="c5"><span class=
  "c0 c1">&lt;answer1&gt;</span><span class=
  "c1">0</span><span class="c0 c1">&lt;/answer1&gt;</span></p>

  <p class="c5"><span class=
  "c0 c1">&lt;session_id&gt;</span><span class=
  "c1">5352</span><span class=
  "c0 c1">&lt;/session_id&gt;</span></p>

  <p class="c2"><span class="c0 c1">&lt;/xml&gt;</span></p>

  <p class="c2 c12"></p>

  <p><span class="c0">The reply elements have the following
  meaning:</span></p>

  <p class="c2"><span class=
  "c0">&lt;answer1&gt;</span><span>&#160;0 if the jobs were
  successfully deleted or a numeric error code if there was a
  problem. In the latter case there will be an</span> <span class=
  "c0">&lt;error_string&gt;</span><span>&#160;element with a human
  language description of the error.</span></p>

  <p class="c2"><span>If no job matches the query that is not an
  error.</span></p>

  <p><span class="c0">gosa-si-server notes:</span></p>

  <p class="c2"><span>gosa-si-server disallows changing the
  timestamp on jobs that have status
  &#8220;processing&#8221;.</span></p>

  <p><span class="c0">go-susi notes:</span></p>

  <p class="c2"><span>When go-susi receives an update request for a
  job that is another server&#8217;s responsibility, it will
  forward the request to that server. go-susi will not change its
  own job information immediately but will wait for the responsible
  server to react. This means that if the responsible server is
  down,</span> <span class=
  "c1">gosa_update_status_jobdb_entry</span><span>&#160;will have
  no observable effect on go-susi&#8217;s database.</span></p>

  <p><span class="c0">GOsa notes:</span></p>

  <p class="c2"><span>GOsa has a bug in its edit job page (if you
  select a job&#8217;s &#8220;Edit&#8221; icon on the
  &#8221;Deployment status&#8221; page). If a job has</span>
  <span class="c0">&lt;periodic&gt;</span><span>&#160;set and you
  uncheck the respective checkbox when editing the job, the</span>
  <span class="c0">&lt;periodic&gt;</span><span>&#160;will not
  actually be cleared, because GOsa omits the</span> <span class=
  "c0">&lt;periodic&gt;</span><span>&#160;from the</span>
  <span class="c0">&lt;update&gt;</span><span>&#160;element instead
  of setting it to &#8220;none&#8221;.</span></p>

  <p class="c2"><span>This message is sent in</span> <span class=
  "c1">class_gosaSupportDaemon.inc:update_entries()</span><span>.</span></p>

  <p class="c2"><span>GOsa always uses the id column to identify
  the jobs. See the notes for</span> <span class=
  "c1">gosa_query_jobdb</span><span>&#160;regarding</span>
  <span class="c0">&lt;id&gt;</span><span>.</span></p>

  <p class="c2"><span>GOsa does not care about the actual reply.
  The only requirement is that the outer-most tag must be</span>
  <span class="c0">&lt;xml&gt;</span><span>. If there is an</span>
  <span class="c0">&lt;error_string&gt;</span><span>&#160;element,
  GOsa will log an error.</span></p>
  <hr style="page-break-before:always;display:none;" />
  <a href="#" id="id.8rs4yx8or7cf" name="id.8rs4yx8or7cf"></a>

  <h2 class="c26"><a id="h.n1abt4rakrkh" name=
  "h.n1abt4rakrkh"></a><span>Server - Server</span></h2>

  <p><span>There are various reasons for running multiple servers
  with GOsa and an accompanying si-server. To make administration
  easier, si-servers exchange information that allows different
  instances of GOsa to be used interchangeably. For example you can
  plan a job in one GOsa and cancel the job in another.</span></p>

  <p><span>When an si-server starts up it looks into its
  configuration file and DNS for peer si-servers. It will then send
  a</span> <span class="c1">new_server</span><span>&#160;message to
  each peer. Peers that are reachable will send</span> <span class=
  "c1">confirm_new_server</span><span>&#160;messages in return.
  After this exchange the servers have a common encryption key and
  know about each other's list of registered clients.</span></p>

  <p><span>Whenever one server changes the information about a job
  in its database, e.g. because of a message like</span>
  <span class="c1">gosa_delete_jobdb_entry</span><span>&#160;or
  because a client performing an installation has sent a</span>
  <span class="c1">CLMSG_PROGRESS</span><span>, the server informs
  all of its peers about the change with a</span> <span class=
  "c1">foreign_job_updates</span><span>&#160;message, so that the
  peers can apply the same change to their databases.</span></p>

  <p><span>Because a gosa-si-client only accepts messages from the
  server it registered at, only that server can properly execute
  jobs that require sending messages to that client. In particular
  this affects jobs that require the client to reboot or shut down.
  To solve this problem the server will forward such jobs to the
  peer where the client is registered.</span></p>

  <p><span>To make forwarding work, each server must know at all
  times which clients are registered at which servers. Therefore,
  whenever a client registers at a server, that server will send
  a</span> <span class=
  "c1">new_foreign_client</span><span>&#160;message to all of its
  peers to inform them about the new client. There is no
  corresponding deregistration. A client is considered to belong to
  a specific server until it registers at another one.</span></p>

  <p><span>A job is forwarded to a peer by sending that peer the
  appropriate</span> <span class=
  "c1">gosa_trigger_action_*</span><span>&#160;message.</span></p>

  <p><span>A special case are wakeup jobs. These are not forwarded
  in the sense that the responsibility for the wakeup is passed on
  to the peer. Instead, peers may be asked to help waking up a
  client, because a peer may have information about the client's
  network location that the original server responsible for the job
  lacks. To recruit the help from a peer in waking up a client
  the</span> <span class=
  "c1">trigger_wake</span><span>&#160;message is used.</span></p>

  <p><span class="c0">Note:</span></p>

  <p class="c2"><span>While go-susi and gosa-si-server both follow
  the general principles outlined above for the forwarding of jobs,
  the timing and the message details are different for the
  two.</span></p>
  <hr style="page-break-before:always;display:none;" />

  <h3><a id="h.ggvkhagjviu" name=
  "h.ggvkhagjviu"></a><span>new_server</span></h3>

  <p class="c4"><span class="c0">Purpose:</span></p>

  <p class="c4 c2"><span>Server&#10132;Server.</span> <span>A
  server announces its presence to another server so that the
  receiving server will inform the sending server about job updates
  etc.</span></p>

  <p class="c4 c2"><span>The receiving server must react by sending
  a</span> <span class=
  "c1">confirm_new_server</span><span>&#160;message to the sender
  (via a new connection). The sender will keep using the old
  encryption key if it does not receive a</span> <span class=
  "c1">confirm_new_server</span><span>&#160;message with the new
  key or, if there is no old key, communication will fail
  altogether.</span></p>

  <p class="c4 c12 c2"></p>

  <p class="c4"><span class="c0">Example message (encrypted with
  [ServerPackages] key):</span></p>

  <p class="c4 c2"><span class="c0 c1">&lt;xml&gt;</span></p>

  <p class="c3"><span class=
  "c0 c1">&lt;header&gt;</span><span class=
  "c1">new_server</span><span class=
  "c0 c1">&lt;/header&gt;</span></p>

  <p class="c3"><span class=
  "c0 c1">&lt;new_server&gt;&lt;/new_server&gt;</span></p>

  <p class="c3"><span class=
  "c0 c1">&lt;source&gt;</span><span class=
  "c1">172.16.2.143:20081</span><span class=
  "c0 c1">&lt;/source&gt;</span></p>

  <p class="c3"><span class=
  "c0 c1">&lt;target&gt;</span><span class=
  "c1">172.16.2.184:20081</span><span class=
  "c0 c1">&lt;/target&gt;</span></p>

  <p class="c3"><span class="c0 c1">&lt;key&gt;</span><span class=
  "c1">eTlWFLUYpRhCKBpagk5B4Zk3NkDcLco</span><span class=
  "c0 c1">&lt;/key&gt;</span></p>

  <p class="c3"><span class=
  "c0 c1">&lt;loaded_modules&gt;</span><span class=
  "c1">gosaTriggered</span><span class=
  "c0 c1">&lt;/loaded_modules&gt;</span></p>

  <p class="c3"><span class=
  "c0 c1">&lt;loaded_modules&gt;</span><span class=
  "c1">siTriggered</span><span class=
  "c0 c1">&lt;/loaded_modules&gt;</span></p>

  <p class="c3"><span class=
  "c0 c1">&lt;loaded_modules&gt;</span><span class=
  "c1">clMessages</span><span class=
  "c0 c1">&lt;/loaded_modules&gt;</span></p>

  <p class="c3"><span class=
  "c0 c1">&lt;loaded_modules&gt;</span><span class=
  "c1">server_server_com</span><span class=
  "c0 c1">&lt;/loaded_modules&gt;</span></p>

  <p class="c3"><span class=
  "c0 c1">&lt;loaded_modules&gt;</span><span class=
  "c1">databases</span><span class=
  "c0 c1">&lt;/loaded_modules&gt;</span></p>

  <p class="c3"><span class=
  "c0 c1">&lt;loaded_modules&gt;</span><span class=
  "c1">logHandling</span><span class=
  "c0 c1">&lt;/loaded_modules&gt;</span></p>

  <p class="c3"><span class=
  "c0 c1">&lt;loaded_modules&gt;</span><span class=
  "c1">goSusi</span><span class=
  "c0 c1">&lt;/loaded_modules&gt;</span></p>

  <p class="c3"><span class=
  "c0 c1">&lt;client&gt;</span><span class=
  "c1">172.16.2.143:20083,00:50:56:37:63:21</span><span class=
  "c0 c1">&lt;/client&gt;</span></p>

  <p class="c3"><span class=
  "c0 c1">&lt;client&gt;</span><span class=
  "c1">172.16.2.22:20083,00:1b:61:72:79:f5</span><span class=
  "c0 c1">&lt;/client&gt;</span></p>

  <p class="c3"><span class=
  "c0 c1">&lt;macaddress&gt;</span><span class=
  "c1">00:50:56:37:63:21</span><span class=
  "c0 c1">&lt;/macaddress&gt;</span></p>

  <p class="c4 c2"><span class="c0 c1">&lt;/xml&gt;</span></p>

  <p class="c4"><span class="c0">The message elements have the
  following meaning:</span></p>

  <p class="c4"><span class=
  "c0">&lt;new_server&gt;</span><span>&#160;Always
  empty.</span></p>

  <p class="c4"><span class="c0">&lt;key&gt;</span></p>

  <p class="c4 c2"><span>A randomly generated string of letters and
  digits to be used for server-server communication between sender
  and receiver. Replaces the most recent key exchanged between the
  2 servers via</span> <span class=
  "c1">new_server</span><span>/</span><span class=
  "c1">confirm_new_server</span><span>. The sender won't actually
  use the new key until it receives a</span> <span class=
  "c1">confirm_new_server</span><span>.</span></p>

  <p class="c4"><span class=
  "c0">&lt;loaded_modules&gt;</span><span>&#160;(</span><span class="c11">0
  or more times</span><span>) Modules supported by the sending
  server.</span></p>

  <p class="c4 c2"><span>A server that advertises "goSusi" in this
  list (as go-susi does) promises the following:</span></p>

  <ul class="c20 lst-kix_herycab31j2a-1 start">
    <li class="c3 c14"><span>All</span> <span class=
    "c1">foreign_job_updates</span><span>&#160;it sends will be
    synchronous (see</span> <span class=
    "c0">&lt;sync&gt;</span><span>&#160;description
    there)</span></li>

    <li class="c3 c14"><span>It will send out a</span> <span class=
    "c1">foreign_job_updates</span><span>&#160;message whenever a
    job it is responsible for changes, even if that change is
    caused by a</span> <span class=
    "c1">foreign_job_updates</span><span>. Note the restriction of
    this rule to jobs the "goSusi" server is responsible for (i.e.
    those that have it as</span> <span class=
    "c0">&lt;siserver&gt;</span><span>). Without this restriction
    there would be infinite series of update messages.</span></li>

    <li class="c3 c14"><span>When it establishes a connection with
    the receiving peer for the first time or re-establishes it
    after an interruption, it will send a</span> <span class=
    "c1">foreign_job_updates</span><span>&#160;with</span>
    <span class="c0">&lt;sync&gt;</span><span class=
    "c1">all</span><span class=
    "c0">&lt;/sync&gt;</span><span>.</span></li>

    <li class="c3 c14"><span>All jobs have a unique</span>
    <span class="c0">&lt;id&gt;</span><span>&#160;which is
    contained in</span> <span class=
    "c1">gosa_query_jobdb</span><span>&#160;replies as well
    as</span> <span class=
    "c1">foreign_job_updates</span><span>&#160;messages and can be
    used to address jobs with specificity in</span> <span class=
    "c0">&lt;where&gt;</span><span>&#160;clauses.</span></li>

    <li class="c3 c14"><span>When a "goSusi" server sends out
    a</span> <span class=
    "c1">foreign_job_updates</span><span>&#160;message that affects
    a job whose</span> <span class=
    "c0">&lt;siserver&gt;</span><span>&#160;is another server, it
    will use that server's original</span> <span class=
    "c0">&lt;id&gt;</span><span>&#160;for the job. IOW, the</span>
    <span class="c0">&lt;id&gt;</span><span>&#160;of a job is
    always from the jobdb of the job's</span> <span class=
    "c0">&lt;siserver&gt;</span><span>.</span></li>

    <li class="c3 c14"><span>An</span> <span class=
    "c0">&lt;id&gt;</span><span>&#160;value is never re-used for a
    different job once it has been used.</span></li>

    <li class="c3 c14"><span>When a</span> <span class=
    "c0">&lt;periodic&gt;</span><span>&#160;job has finished, the
    next repetition of the job gets a new</span> <span class=
    "c0">&lt;id&gt;</span><span>.</span></li>

    <li class="c3 c14"><span>When a</span> <span class=
    "c0">&lt;periodic&gt;</span><span>&#160;job has finished and
    the next repetition gets scheduled, both facts are communicated
    by</span> <span class=
    "c1">foreign_job_updates</span><span>&#160;(either in two
    separate messages or one combined message).</span></li>

    <li class="c3 c14"><span>Two jobs with different</span>
    <span class="c0">&lt;id&gt;</span><span>&#160;are never treated
    as the same. In particular</span> <span class=
    "c1">foreign_job_updates</span><span>&#160;messages do not use
    the combination</span> <span class=
    "c0">&lt;headertag&gt;+&lt;macaddress&gt;</span><span>&#160;to
    identify jobs. This applies only to communication with other
    servers advertising "goSusi". When communicating with
    non-"goSusi" servers this behaviour is not
    required.</span></li>

    <li class="c3 c14"><span>A corollary of the previous point is
    that a server that advertises "goSusi" is capable of managing
    multiple jobs with identical properties.</span></li>
  </ul>

  <p class="c4"><span class="c0">&lt;client&gt;</span></p>

  <p class="c4 c2"><span>Listening port and MAC address of a client
  registered at this server.</span></p>

  <p class="c4"><span class=
  "c0">&lt;macaddress&gt;</span><span>&#160;The sending
  server&#8217;s MAC address.</span></p>

  <p class="c4 c12"></p>

  <p class="c4"><span class="c0">gosa-si-server notes:</span></p>

  <p class="c2 c4"><span>gosa-si-server sends this message
  in</span> <span class=
  "c1">gosa-si-server:register_at_foreign_servers().</span></p>

  <p class="c4 c2"><span>gosa-si-server re-registers at all known
  other servers (not just from DNS but also those known from
  incoming messages) in regular intervals. go-susi doesn&#8217;t do
  that at this time.</span></p>

  <p class="c4"><span class="c0">go-susi notes:</span></p>

  <p class="c4 c2"><span>When go-susi starts, it will send this
  message to all servers listed in DNS for the service
  tcp/gosa-si.</span></p>

  <p class="c4 c2"><span>When go-susi receives a</span>
  <span class="c1">new_server</span><span>&#160;message it will
  send a</span> <span class=
  "c1">confirm_new_server</span><span>&#160;message to the server
  listed in &lt;source&gt; (usually the sender itself) and
  following</span> <span class=
  "c1">confirm_new_server</span><span>&#160;it will send its
  complete jobdb as a</span> <span class=
  "c1">foreign_job_updates</span><span>&#160;message. The latter
  behaviour is different from gosa-si which only sends</span>
  <span class="c1">confirm_new_server.</span></p>

  <p class="c4 c2"><span>When go-susi is contacting a peer server
  for the first time after being started, go-susi will consider the
  key it sends in the new_server message valid and will use it even
  before the peer replies with</span> <span class=
  "c1">confirm_new_server</span><span>. IOW the</span> <span class=
  "c1">confirm_new_server</span><span>&#160;message is not required
  in the case of go-susi.</span></p>

  <h3><a id="h.t6s5fv3aa5zt" name=
  "h.t6s5fv3aa5zt"></a><span>confirm_new_server</span></h3>

  <p class="c4"><span class="c0">Purpose:</span></p>

  <p class="c4 c2"><span>Server&#10132;Server. Same format
  as</span> <span class="c1">new_server</span><span>, except that
  the</span> <span class="c0">&lt;header&gt;</span><span>&#160;and
  the empty tag are</span> <span class=
  "c1">"confirm_new_server"</span><span>. When server A sends
  server B a</span> <span class=
  "c1">new_server</span><span>&#160;message containing server A's
  information, server B sends back (via a new connection) a</span>
  <span class="c1">confirm_new_server</span><span>&#160;message
  containing server B's information. After this exchange both
  servers have each other's data. The</span> <span class=
  "c1">confirm_new_server</span><span>&#160;message usually
  contains the same</span> <span class=
  "c0">&lt;key&gt;</span><span>&#160;as the new_server message. In
  any case the most recent</span> <span class=
  "c1">new_server/confirm_new_server
  message</span><span>&#160;</span><span class=
  "c11">received</span><span>&#160;(not</span> <span class=
  "c11">sent</span><span>!) determines the key used for those
  messages that are encrypted with a server-key (such as</span>
  <span class="c1">foreign_job_updates</span><span>).</span></p>
  <hr style="page-break-before:always;display:none;" />

  <h3><a id="h.d21gga45wxtz" name=
  "h.d21gga45wxtz"></a><span>foreign_job_updates</span></h3>

  <p class="c4"><span class="c0">Purpose:</span></p>

  <p class="c4 c2"><span>Server&#10132;Server. Inform another
  server about changes made to one or more jobs. This message is
  also used to cancel other servers&#8217; jobs by telling them the
  status is &#8220;done&#8221; (and periodic is "none"). The server
  that receives this message replaces the data of the job(s) with
  the new data.</span></p>

  <p class="c4"><span class="c0">Example message:</span></p>

  <p class="c4 c2"><span class="c0 c1">&lt;xml&gt;</span></p>

  <p class="c3"><span class=
  "c0 c1">&lt;header&gt;</span><span class=
  "c1">foreign_job_updates</span><span class=
  "c0 c1">&lt;/header&gt;</span></p>

  <p class="c3"><span class=
  "c0 c1">&lt;source&gt;</span><span class=
  "c1">172.16.2.143:20081</span><span class=
  "c0 c1">&lt;/source&gt;</span></p>

  <p class="c3"><span class=
  "c0 c1">&lt;target&gt;</span><span class=
  "c1">172.16.2.60:20081</span><span class=
  "c0 c1">&lt;/target&gt;</span></p>

  <p class="c3"><span class="c0 c1">&lt;sync&gt;</span><span class=
  "c1">ordered</span><span class="c0 c1">&lt;/sync&gt;</span></p>

  <p class="c3"><span class=
  "c0 c1">&lt;answer1&gt;</span></p><a href="#" id=
  "id.i03t6xrtz85y" name="id.i03t6xrtz85y"></a>

  <p class="c4 c9"><span class=
  "c0 c1">&lt;plainname&gt;</span><span class=
  "c1">grisham</span><span class=
  "c0 c1">&lt;/plainname&gt;</span></p>

  <p class="c4 c9"><span class=
  "c0 c1">&lt;progress&gt;</span><span class=
  "c1">none</span><span class="c0 c1">&lt;/progress&gt;</span></p>

  <p class="c4 c9"><span class=
  "c0 c1">&lt;status&gt;</span><span class=
  "c1">done</span><span class="c0 c1">&lt;/status&gt;</span></p>

  <p class="c4 c9"><span class=
  "c0 c1">&lt;periodic&gt;</span><span class=
  "c1">none</span><span class="c0 c1">&lt;/periodic&gt;</span></p>

  <p class="c4 c9"><span class=
  "c0 c1">&lt;siserver&gt;</span><span class=
  "c1">localhost</span><span class=
  "c0 c1">&lt;/siserver&gt;</span><span class=
  "c1"><br /></span><span class=
  "c0 c1">&lt;modified&gt;</span><span class=
  "c1">1</span><span class="c0 c1">&lt;/modified&gt;</span></p>

  <p class="c4 c9"><span class=
  "c0 c1">&lt;targettag&gt;</span><span class=
  "c1">00:0c:29:50:a3:52</span><span class=
  "c0 c1">&lt;/targettag&gt;</span><span class=
  "c1"><br /></span><span class=
  "c0 c1">&lt;macaddress&gt;</span><span class=
  "c1">00:0c:29:50:a3:52</span><span class=
  "c0 c1">&lt;/macaddress&gt;</span><span class=
  "c1"><br /></span><span class=
  "c0 c1">&lt;timestamp&gt;</span><span class=
  "c1">20120906164734</span><span class=
  "c0 c1">&lt;/timestamp&gt;<br />
  &lt;id&gt;</span><span class="c1">4</span><span class=
  "c0 c1">&lt;/id&gt;</span><span class=
  "c1"><br /></span><span class=
  "c0 c1">&lt;headertag&gt;</span><span class=
  "c1">trigger_action_wake</span><span class=
  "c0 c1">&lt;/headertag&gt;</span><span class=
  "c1"><br /></span><span class=
  "c0 c1">&lt;result&gt;</span><span class=
  "c1">none</span><span class=
  "c0 c1">&lt;/result&gt;</span><span class=
  "c1"><br /></span><span class=
  "c0 c1">&lt;xmlmessage&gt;</span><span class=
  "c1">PHhtbD48aGVhZGVyPmpvYl90cmlnZ2VyX2Fjd</span></p>

  <p class="c4 c9"><span class=
  "c1">Glvbl93YWtlPC9oZWFkZXI+PHNvdXJjZT5HT1NBPC9zb3VyY2
  U+PHRhcmdldD4wMDowYzoyOTo1MDphMzo1MjwvdGFyZ2V0Pjx
  0aW1lc3RhbXA+MjAxMjA5MDYxNjQ3MzQ8L3RpbWVzdGFtcD48
  bWFjYWRkcmVzcz4wMDowYzoyOTo1MDphMzo1MjwvbWFjYWRkc</span></p>

  <p class="c4 c9"><span class=
  "c1">mVzcz48L3htbD4=</span><span class=
  "c0 c1">&lt;/xmlmessage&gt;</span></p>

  <p class="c3"><span class="c0 c1">&lt;/answer1&gt;</span></p>

  <p class="c4 c2"><span class="c0 c1">&lt;/xml&gt;</span></p>

  <p class="c4 c12"></p>

  <p class="c4"><span class="c0">The message elements have the
  following meaning:</span></p>

  <p class="c4"><span class=
  "c0">&lt;sync&gt;</span><span>&#160;</span><span class=
  "c11">(optional, unless the sender has &#8220;goSusi&#8221; in
  &lt;loaded_modules&gt;)</span></p>

  <p class="c4 c2"><span class="c1">"none" or not
  present</span></p>

  <p class="c3"><span>The order in which</span> <span class=
  "c1">foreign_job_updates</span><span>&#160;messages are received
  and the order in which jobs are listed within a message may not
  reflect the order in which the changes were performed.</span></p>

  <p class="c4 c2"><span class="c1">"ordered"</span></p>

  <p class="c3"><span>The sender ensures that</span> <span class=
  "c1">foreign_job_updates</span><span>&#160;messages are received
  and jobs within them are listed in the same order in which the
  changes were performed. This synchronization is implemented by
  sending all</span> <span class=
  "c1">foreign_job_updates</span><span>&#160;messages properly
  ordered over a dedicated permanent connection.</span></p>

  <p class="c4 c2"><span class="c1">"all"</span></p>

  <p class="c3"><span>The</span> <span class=
  "c1">foreign_job_updates</span><span>&#160;message contains a
  complete list of all jobs the sender is responsible for (i.e.
  where</span> <span class=
  "c0">&lt;siserver&gt;</span><span>&#160;is the sender). The
  receiver is expected to discard all old information about the
  sender&#8217;s jobs it has and replace it with the new
  data.</span></p>

  <p class="c4"><span class="c0">&lt;answerX&gt;</span></p>

  <p class="c4 c2"><span>Each job in the list has its own number X,
  counting from 1 with no numbers left out. Note that X is not
  identical to the</span> <span class=
  "c0">&lt;id&gt;</span><span>&#160;number.</span></p>

  <p class="c4"><span class="c0">&lt;id&gt;</span></p>

  <p class="c4 c2"><span>If the sending server does</span>
  <span class="c11">not</span><span>&#160;advertise "goSusi" in
  its</span> <span class=
  "c1">(confirm_)new_server</span><span>&#160;message, this number
  is the ID of the job in the</span> <span class=
  "c11">sending</span><span>&#160;server&#8217;s jobdb.</span></p>

  <p class="c4 c2"><span>If the sending server</span> <span class=
  "c11">does</span><span>&#160;advertise "goSusi" in its</span>
  <span class="c1">(confirm_)new_server</span><span>&#160;message,
  this number is the ID of the job in the</span> <span class=
  "c11">responsible</span><span>&#160;server&#8217;s jobdb (i.e.
  the jobdb of the job's</span> <span class=
  "c0">&lt;siserver&gt;</span><span>).</span></p>

  <p class="c4"><span class="c0">&lt;siserver&gt;</span></p>

  <p class="c4 c2"><span>The listen address (IP:port) of the server
  responsible for processing the job. When gosa-si-server sends
  this message, this can also be the word &#8220;localhost&#8221;
  (and go-susi treats this as alias for the address from</span>
  <span class="c0">&lt;source&gt;</span><span>).</span></p>

  <p class="c4"><span class="c0">&lt;periodic&gt;</span></p>

  <p class="c4 c2"><span>If the</span> <span class=
  "c1">foreign_job_updates</span><span>&#160;was sent as a result
  of</span> <span class="c1">gosa_delete_jobdb_entry</span><span>,
  then</span> <span class=
  "c0">&lt;periodic&gt;</span><span>&#160;is always "none" or not
  present, even if the job started out as periodic.</span></p>

  <p class="c4"><span class=
  "c0">&lt;modified&gt;</span><span>&#160;always 1.</span></p>

  <p class="c4"><span class=
  "c0">&lt;macaddress&gt;+&lt;headertag&gt;</span></p>

  <p class="c4 c2"><span>gosa-si-server uses this pair as the key
  to uniquely identify a job. This means that the job database of a
  gosa-si-server can only contain one job type per MAC address. If
  the jobdb already contains an entry for the</span><span class=
  "c0">&#160;&lt;macaddress&gt;+&lt;headertag&gt;</span><span>&#160;pair
  from the</span> <span class=
  "c1">foreign_job_updates</span><span>&#160;message, that entry
  will be updated. Otherwise a new entry will be added to the
  jobdb.</span></p>

  <p class="c4 c2"><span>gosa-si-server treats</span> <span class=
  "c0">&lt;macaddress&gt;</span><span>&#160;as case-sensitive and
  will not process</span> <span class=
  "c1">foreign_job_updates</span><span>&#160;correctly if the case
  in the message does not match the case in its
  database.</span></p>

  <p class="c4 c2"><span>go-susi uses</span> <span class=
  "c0">&lt;id&gt;</span><span>&#160;to uniquely identify a job and
  permits multiple jobs with the same</span> <span class=
  "c0">&lt;macaddress&gt;+&lt;headertag&gt;</span><span>&#160;to
  coexist. When go-susi evaluates</span> <span class=
  "c1">foreign_job_updates</span><span>&#160;from a gosa-si-server,
  however, it will fall back to gosa-si-server's
  behaviour.</span></p>

  <p class="c4"><span class="c0">&lt;xmlmessage&gt;</span></p>

  <p class="c4 c2"><span>Base64-encoded &lt;xml&gt;...&lt;/xml&gt;
  message that was used to create the job originally.</span></p>

  <p class="c4 c12"></p>

  <p class="c4"><span class="c0">gosa-si-server notes:</span></p>

  <p class="c4 c2"><span>This message is handled in</span>
  <span class=
  "c1">events/server_server_com.pm:foreign_job_updates().</span></p>

  <p class="c4 c2"><span class=
  "c0">&lt;xmlmessage&gt;</span><span>&#160;may include whitespace
  characters in the base64-string that need to be removed before
  the string will decode properly.</span></p>

  <p class="c4 c2"><span>gosa-si treats</span> <span class=
  "c0">&lt;macaddress&gt;</span><span>&#160;as case-sensitive and
  will not process</span> <span class=
  "c1">foreign_job_updates</span><span>&#160;correctly if the case
  in the message does not match the case in its
  database.</span></p>

  <p class="c4"><span class="c0">go-susi notes:</span></p>

  <p class="c4 c2"><span class=
  "c0">&lt;sync&gt;</span><span>&#160;is a go-susi
  extension.</span></p>

  <p class="c4 c2"><span>gosa-si-server sends</span> <span class=
  "c0">&lt;xmlmessage&gt;</span><span>&#160;to itself (replacing
  "job_" with "gosa_" in the &lt;header&gt;) when the job's time
  has come. This means that in case of an inconsistency
  between</span> <span class=
  "c0">&lt;xmlmessage&gt;</span><span>&#160;and the job's
  data,</span> <span class=
  "c0">&lt;xmlmessage&gt;</span><span>&#160;wins. go-susi does not
  use</span> <span class="c0">&lt;xmlmessage&gt;</span><span>, so
  in case of an inconsistency go-susi will go by the job's
  data.</span></p>
  <hr style="page-break-before:always;display:none;" />

  <h3><a id="h.4o43ycaft42x" name=
  "h.4o43ycaft42x"></a><span>new_foreign_client</span></h3>

  <p class="c4"><span class="c0">Purpose:</span></p>

  <p class="c4 c2"><span>Server&#10132;Server. When a client
  registers at a server using</span> <span class=
  "c1">here_i_am</span><span>, that server notifies its peers of
  the new client by sending a</span> <span class=
  "c1">new_foreign_client</span><span>&#160;message.</span></p>

  <p class="c4 c12 c2"></p>

  <p class="c4"><span class="c0">Example message:</span></p>

  <p class="c4 c2"><span class="c0 c1">&lt;xml&gt;</span></p>

  <p class="c3"><span class=
  "c0 c1">&lt;header&gt;</span><span class=
  "c1">new_foreign_client</span><span class=
  "c0 c1">&lt;/header&gt;</span></p>

  <p class="c3"><span class=
  "c0 c1">&lt;source&gt;</span><span class=
  "c1">172.16.2.19:20081</span><span class=
  "c0 c1">&lt;/source&gt;</span></p>

  <p class="c3"><span class=
  "c0 c1">&lt;target&gt;</span><span class=
  "c1">172.16.2.60:20081</span><span class=
  "c0 c1">&lt;/target&gt;</span></p>

  <p class="c3"><span class=
  "c0 c1">&lt;client&gt;</span><span class=
  "c1">172.16.2.143:20083</span><span class=
  "c0 c1">&lt;/client&gt;</span></p>

  <p class="c3"><span class=
  "c0 c1">&lt;macaddress&gt;</span><span class=
  "c1">00:45:6e:00:03:01</span><span class=
  "c0 c1">&lt;/macaddress&gt;</span></p>

  <p class="c3"><span class="c0 c1">&lt;key&gt;</span><span class=
  "c1">current_client_key</span><span class=
  "c0 c1">&lt;/key&gt;</span></p>

  <p class="c3"><span class="c0 c1">&lt;key&gt;</span><span class=
  "c1">previous_client_key</span><span class=
  "c0 c1">&lt;/key&gt;</span></p>

  <p class="c3"><span class=
  "c0 c1">&lt;new_foreign_client&gt;&lt;/new_foreign_client&gt;</span></p>

  <p class="c4 c2"><span class="c0 c1">&lt;/xml&gt;</span></p>

  <p class="c4 c12"></p>

  <p class="c4"><span class="c0">The message elements have the
  following meaning:</span></p>

  <p class="c4 c2"><span>The</span> <span class=
  "c0">&lt;macaddress&gt;</span><span>&#160;and</span> <span class=
  "c0">&lt;client&gt;</span><span>&#160;elements identify the
  client. The</span> <span class=
  "c0">&lt;key&gt;</span><span>&#160;elements, if present, specify
  the most recent and the previous encryption key sent by the
  client via</span> <span class=
  "c1">here_i_am</span><span>&#160;or</span> <span class=
  "c1">new_key</span><span>. The</span> <span class=
  "c0">&lt;key&gt;</span><span>&#160;elements are go-susi specific
  and not sent by gosa-si-server.</span></p>

  <p class="c4 c2"><span>Note that even with the client's key a
  foreign server can not contact that client successfully, because
  gosa-si-client discards messages whose origin is not the
  si-server it is registered at.</span></p>
  <hr style="page-break-before:always;display:none;" />

  <h3><a id="h.z3ec199pha6w" name=
  "h.z3ec199pha6w"></a><span>trigger_wake</span></h3>

  <p class="c4"><span class="c0">Purpose:</span></p>

  <p class="c4 c2"><span>Server&#10132;Server. Ask a peer server
  for help in waking up a machine.</span></p>

  <p class="c4 c12 c2"></p>

  <p class="c4"><span class="c0">Example message:</span></p>

  <p class="c4 c2"><span class="c0 c1">&lt;xml&gt;</span></p>

  <p class="c3"><span class=
  "c0 c1">&lt;header&gt;</span><span class=
  "c1">trigger_wake</span><span class=
  "c0 c1">&lt;/header&gt;</span></p>

  <p class="c3"><span class=
  "c0 c1">&lt;source&gt;</span><span class=
  "c1">172.16.2.143:20081</span><span class=
  "c0 c1">&lt;/source&gt;</span></p>

  <p class="c3"><span class=
  "c0 c1">&lt;target&gt;</span><span class=
  "c1">172.16.2.60:20081</span><span class=
  "c0 c1">&lt;/target&gt;</span></p>

  <p class="c3"><span class=
  "c0 c1">&lt;macaddress&gt;</span><span class=
  "c1">00:45:6e:00:03:01</span><span class=
  "c0 c1">&lt;/macaddress&gt;</span></p>

  <p class="c3"><span class=
  "c0 c1">&lt;trigger_wake&gt;&lt;/trigger_wake&gt;</span></p>

  <p class="c4 c2"><span class="c0 c1">&lt;/xml&gt;</span></p>

  <p class="c4 c12"></p>

  <p class="c4"><span class="c0">The message elements have the
  following meaning:</span></p>

  <p class="c4 c2"><span>The</span> <span class=
  "c0">&lt;macaddress&gt;</span><span>&#160;identifies the machine
  to be woken up. The other elements have their usual meanings. The
  empty</span> <span class=
  "c0">&lt;trigger_wake&gt;</span><span>&#160;element is always
  empty.</span></p>
  <hr style="page-break-before:always;display:none;" />
  <a href="#" id="id.lcwii6oc1qwv" name="id.lcwii6oc1qwv"></a>

  <h2><a id="h.w73b9qoqu5cg" name="h.w73b9qoqu5cg"></a><span>Client
  - Server</span></h2>

  <p><span>When an si-client starts up, it checks its configuration
  as well as DNS and assembles a list of available si-servers. It
  will then send a</span> <span class=
  "c1">here_i_am</span><span>&#160;message to the first server on
  the list. If it receives a</span> <span class=
  "c1">registered</span><span>&#160;message from the server within
  a certain amount of time (typically 10s), the client and that
  server are paired and have a shared encryption key that they will
  use for all future communications.</span></p>

  <p><span>If no</span> <span class=
  "c1">registered</span><span>&#160;message is received from the
  server within the time window, the client will send a</span>
  <span class="c1">here_i_am</span><span>&#160;to the next server
  on the list and will keep on going through the server list until
  a server manages to answer within the time window. This behaviour
  can lead to the absurd situation that all servers on the list are
  available and do answer but registration fails anyway because
  delays cause all of the answers to miss the time
  window.</span></p>

  <p><span>From time to time the client will send a</span>
  <span class="c1">new_key</span><span>&#160;message to the server
  to establish a new encryption key to be used for future messages
  between the two parties. While this does not make the stupid
  homegrown encryption protocol used by gosa-si secure, it does
  cause race conditions because the client simply starts using the
  new key right away, even though the server may not have processed
  the</span> <span class="c1">new_key</span><span>, yet.</span></p>

  <p><span>What happens after the server has sent the</span>
  <span class="c1">registered</span><span>&#160;message to the
  client depends on whether an LDAP object exists for the client's
  system or not. If there is an LDAP object, the server will read
  its data and data from</span> <span class=
  "c1">gosaGroupOfNames</span><span>&#160;it is a member of and
  will send corresponding</span> <span class="c1">new_ldap_config,
  new_ntp_config</span><span>&#160;and</span> <span class=
  "c1">new_syslog_config</span><span>&#160;messages to the
  client.</span></p>

  <p><span>If there is no LDAP object for the client, the server
  sends a</span> <span class=
  "c1">detect_hardware</span><span>&#160;message and creates an
  installation job with</span> <span class=
  "c1">&lt;progress&gt;hardware-detection&lt;/progress&gt;</span><span>&#160;for
  the new system. The client then performs hardware detection and
  sends the results back to the server in a</span> <span class=
  "c1">detected_hardware</span><span>&#160;message. The server uses
  that information to create an LDAP object. If a matching template
  object exists (go-susi extension, see</span> <span class=
  "c1">detected_hardware</span><span>&#160;for details), the result
  is a complete system object. Otherwise it is an incomplete object
  in</span> <span class=
  "c1">new-systems-base</span><span>&#160;that needs to be
  completed in GOsa.</span></p>

  <p><span>Once the object has been completed, the server sends the
  available information to the client in</span> <span class=
  "c1">new_ldap_config, new_ntp_config</span><span>&#160;and</span>
  <span class="c1">new_syslog_config</span><span>&#160;messages.
  And when the</span> <span class=
  "c1">gotoMode</span><span>&#160;becomes</span> <span class=
  "c1">active</span><span>, the server sends</span> <span class=
  "c1">set_activated_for_installation.</span><span>&#160;It is only
  after the client has received both</span> <span class=
  "c1">new_ldap_config</span><span>&#160;and</span> <span class=
  "c1">set_activated_for_installation</span><span>&#160;that it can
  begin the actual installation process. A variety of message types
  may occur during an installation or softupdate. These are
  explained in their own chapter of this manual.</span></p>

  <p><span>Whenever a server starts executing a job that affects a
  client, it will send that client a</span> <span class=
  "c1">trigger_action_*</span><span>&#160;message. Depending on the
  kind of job the client may react to this by e.g. presenting a
  popup to a logged in user asking the user to log out.</span></p>

  <p><span>Jobs of type</span> <span class=
  "c1">job_send_user_msg</span><span>&#160;have their own
  associated client-server messages but go-susi does not support
  these. See the chapter on deprecated messages later in this
  manual.</span></p>
  <hr style="page-break-before:always;display:none;" />

  <h3 class="c16"><a id="h.w909y3vom7bh" name=
  "h.w909y3vom7bh"></a><span>here_i_am</span></h3>

  <p><span class="c0">Purpose:</span></p>

  <p class="c2"><span>Client&#10132;Server.</span> <span>Used by an
  si-client to register at the si-server responsible for it. The
  si-server reacts by sending a</span> <span class=
  "c1">registered</span><span>&#160;message possibly followed
  by</span></p>

  <p class="c12 c2"></p>

  <ul class="c20 lst-kix_qcfysk3gr1ej-1 start">
    <li class="c5 c14"><span>a</span> <span class=
    "c1">new_ldap_config</span><span>&#160;message to tell the
    client which LDAP parameters it should use.</span></li>

    <li class="c5 c14"><span>a</span> <span class=
    "c1">detect_hardware</span><span>&#160;message to instruct the
    client to perform hardware detection.</span></li>

    <li class="c5 c14"><span>a</span> <span class=
    "c1">new_ntp_config</span><span>&#160;message to tell the
    client which NTP server(s) to use.</span></li>

    <li class="c5 c14"><span>a</span> <span class=
    "c1">new_syslog_config</span><span>&#160;message to tell the
    client which syslog server to use.</span></li>
  </ul>

  <p class="c2"><span>A client to be (re)installed will not start
  the installation until it has received the return message(s) to
  its</span> <span class="c1">here_i_am</span><span>&#160;message
  from the server from which it is installing. In other situations
  (e.g. normal booting) the client will, if it does not receive the
  messages after a few seconds, try to register at each si-server
  listed in DNS in turn to find one that answers quickly
  enough.</span></p>

  <p class="c2"><span>The</span> <span class=
  "c1">here_i_am</span><span>&#160;message is also responsible for
  setting the encryption key the si-server should use to encrypt
  messages sent to the client (such as</span> <span class=
  "c1">new_ldap_config).</span></p>

  <p class="c2"><span>When a client has successfully registered at
  a server, the server sends out</span> <span class=
  "c1">new_foreign_client</span><span>&#160;messages to its
  peers.</span></p>

  <p class="c2"><span>The new client will also appear in future
  (</span><span class=
  "c1">confirm_</span><span>)</span><span class="c1">new_server</span><span>&#160;messages
  sent by the server.</span></p>

  <p class="c2"><span>If the server can find the client in LDAP by
  its MAC address, it will also update the ipHostNumber field.
  go-susi also updates the cn.</span></p>

  <p class="c2"><span>If the sending client does not exist in LDAP,
  a reinstall job will automatically be created with</span>
  <span class=
  "c0">&lt;progress&gt;</span><span>hardware-detection</span><span class="c0">&lt;/progress&gt;</span>
  <span>and</span> <span class=
  "c0">&lt;status&gt;</span><span>processing</span><span class=
  "c0">&lt;/status&gt;</span><span>&#160;and the</span>
  <span class="c1">detect_hardware</span> <span>message will be
  sent to the client.</span></p>

  <p><span class="c0">Example message:</span></p>

  <p class="c2"><span class="c0 c1">&lt;xml&gt;</span></p>

  <p class="c5"><span class=
  "c0 c1">&lt;header&gt;</span><span class=
  "c1">here_i_am</span><span class=
  "c0 c1">&lt;/header&gt;</span></p>

  <p class="c5"><span class=
  "c0 c1">&lt;source&gt;</span><span class=
  "c1">172.16.2.146:20083</span><span class=
  "c0 c1">&lt;/source&gt;</span></p>

  <p class="c5"><span class=
  "c0 c1">&lt;target&gt;</span><span class=
  "c1">172.16.2.143:20081</span><span class=
  "c0 c1">&lt;/target&gt;</span></p>

  <p class="c5"><span class=
  "c0 c1">&lt;here_i_am&gt;&lt;/here_i_am&gt;</span></p>

  <p class="c5"><span class=
  "c0 c1">&lt;mac_address&gt;</span><span class=
  "c1">00:0c:29:50:a3:52</span><span class=
  "c0 c1">&lt;/mac_address&gt;</span></p>

  <p class="c5"><span class=
  "c0 c1">&lt;new_passwd&gt;</span><span class=
  "c1">qXBaZCnDgKMhvDULAD0ltWdfk9kHdnl</span><span class=
  "c0 c1">&lt;/new_passwd&gt;</span></p>

  <p class="c5"><span class=
  "c0 c1">&lt;key_lifetime&gt;</span><span class=
  "c1">600</span><span class=
  "c0 c1">&lt;/key_lifetime&gt;</span></p>

  <p class="c5"><span class=
  "c0 c1">&lt;client_revision&gt;</span><span class=
  "c1">20926</span><span class=
  "c0 c1">&lt;/client_revision&gt;</span></p>

  <p class="c5"><span class=
  "c0 c1">&lt;client_status&gt;</span><span class=
  "c1">stable</span><span class=
  "c0 c1">&lt;/client_status&gt;</span></p>

  <p class="c5"><span class=
  "c0 c1">&lt;gotoHardwareChecksum&gt;</span><span class=
  "c1">qQvNNtPqaV5MG8UElNS7g</span><span class=
  "c0 c1">&lt;/gotoHardwareChecksum&gt;</span></p>

  <p class="c5"><span class="c0 c1">&lt;events&gt;</span></p>

  <p class="c9"><span class=
  "c1">trigger_action_localboot,trigger_action_reboot,</span></p>

  <p class="c9"><span class=
  "c1">confirm_new_key,mailqueue_requeue,import_events,usr_msg,</span></p>

  <p class="c9"><span class=
  "c1">new_syslog_config,generate_hw_digest,get_events,</span></p>

  <p class="c9"><span class=
  "c1">new_ntp_config,mailqueue_del,trigger_action_faireboot,</span></p>

  <p class="c9"><span class=
  "c1">new_key,registered,mailqueue_header,trigger_action_reinstall,</span></p>

  <p class="c9"><span class=
  "c1">new_ldap_config,trigger_action_instant_update,mailqueue_hold,</span></p>

  <p class="c9"><span class=
  "c1">set_activated_for_installation,detect_hardware,</span></p>

  <p class="c9"><span class=
  "c1">trigger_action_update,ping,mailqueue_unhold,</span></p>

  <p class="c9"><span class=
  "c1">mailqueue_query,trigger_goto_settings_reload,</span></p>

  <p class="c9"><span class="c1">trigger_action_halt</span></p>

  <p class="c5"><span class="c0 c1">&lt;/events&gt;</span></p>

  <p class="c2"><span class="c0 c1">&lt;/xml&gt;</span></p>

  <p><span class="c0">The message elements have the following
  meaning:</span></p>

  <p><span class="c0">&lt;mac_address&gt;</span></p>

  <p class="c2"><span>The sending client's MAC address.</span>
  <span class="c0">Note:</span><span>&#160;The tag has an
  underscore in its name unlike the MAC address elements in other
  messages.</span></p>

  <p><span class="c0">&lt;new_passwd&gt;</span></p>

  <p class="c2"><span>The client equivalent to the</span>
  <span class="c0">&lt;key&gt;</span><span>&#160;element of</span>
  <span class="c1">new_server</span><span>&#160;messages. The
  receiving server will use this key to encrypt messages to the
  client.</span></p>

  <p><span class="c0">&lt;key_lifetime&gt;</span></p>

  <p class="c2"><span>Number of seconds the key is valid. The
  client will send a</span> <span class=
  "c1">new_key</span><span>&#160;message in intervals of this many
  seconds (Some versions of gosa-si-client don&#8217;t do this
  because of bugs. They keep using the same key
  indefinitely).</span></p>

  <p><span class="c0">&lt;client_revision&gt;,
  &lt;client_status&gt;</span><span>&#160;Version information about
  the client.</span></p>

  <p><span class=
  "c0">&lt;gotoHardwareChecksum&gt;</span><span>&#160;A digest
  generated based on the machine hardware.</span></p>

  <p><span class="c0">&lt;events&gt;</span><span>&#160;The set of
  messages the client understands.</span></p>

  <p><span class="c0">go-susi notes:</span></p>

  <p class="c2"><span>go-susi updates the system&#8217;s</span>
  <span class="c1">ipHostNumber</span><span>&#160;field when it
  receives this message. If the system&#8217;s</span> <span class=
  "c1">cn</span><span>&#160;does not match the long or short name
  of the reverse lookup of its IP, the object will be renamed to
  match the DNS name.</span></p>

  <p><span class="c0">gosa-si-client notes:</span></p>

  <p class="c2"><span>gosa-si-client internally manages a
  list</span> <span class="c1">@servers</span><span>&#160;that it
  will contact in turn with</span> <span class=
  "c1">here_i_am</span><span>&#160;until it receives a</span>
  <span class="c1">registered</span><span>&#160;response within a
  certain reply time. If gosa-si-client receives a message that it
  cannot decode, it will re-register, however, it will do so at the
  next server in the list instead of starting at the beginning
  again.</span></p>
  <hr style="page-break-before:always;display:none;" />

  <h3 class="c16"><a id="h.uw29iuabpm6q" name=
  "h.uw29iuabpm6q"></a><span>new_key</span></h3>

  <p><span class="c0">Purpose:</span></p>

  <p class="c2"><span>Client&#10132;Server. Informs the server
  about a new encryption key to be used when communicating with the
  sending client.</span></p>

  <p><span class="c0">Example message:</span></p>

  <p class="c2"><span class="c0 c1">&lt;xml&gt;</span></p>

  <p class="c5"><span class=
  "c0 c1">&lt;header&gt;</span><span class=
  "c1">new_key</span><span class="c0 c1">&lt;/header&gt;</span></p>

  <p class="c5"><span class=
  "c0 c1">&lt;source&gt;</span><span class=
  "c1">172.16.2.146:20083</span><span class=
  "c0 c1">&lt;/source&gt;</span><span class=
  "c1">&#160;</span><span class=
  "c0 c1">&lt;target&gt;</span><span class=
  "c1">172.16.2.143:20081</span><span class=
  "c0 c1">&lt;/target&gt;</span></p>

  <p class="c5"><span class=
  "c0 c1">&lt;new_key&gt;</span><span class=
  "c1">edLDBiajQownOirf424zKFOyG4AlrP7</span><span class=
  "c0 c1">&lt;/new_key&gt;</span></p>

  <p class="c2"><span class="c0 c1">&lt;/xml&gt;</span></p>
  <hr style="page-break-before:always;display:none;" />

  <h3><a id="h.w5skplmpyja8" name=
  "h.w5skplmpyja8"></a><span>registered</span></h3>

  <p class="c4"><span class="c0">Purpose:</span></p>

  <p class="c4 c2"><span>Server&#10132;Client. Sent in</span>
  <span>reaction to a client&#8217;s</span> <span class=
  "c1">here_i_am</span><span>&#160;message.</span></p>

  <p class="c4 c12"></p>

  <p class="c4"><span class="c0">Example message:</span></p>

  <p class="c4 c2"><span class="c0 c1">&lt;xml&gt;</span></p>

  <p class="c3"><span class=
  "c0 c1">&lt;header&gt;</span><span class=
  "c1">registered</span><span class=
  "c0 c1">&lt;/header&gt;</span></p>

  <p class="c3"><span class=
  "c0 c1">&lt;source&gt;</span><span class=
  "c1">172.16.2.143:20081</span><span class=
  "c0 c1">&lt;/source&gt;</span></p>

  <p class="c3"><span class=
  "c0 c1">&lt;target&gt;</span><span class=
  "c1">172.16.2.106:20083</span><span class=
  "c0 c1">&lt;/target&gt;</span></p>

  <p class="c3"><span class=
  "c0 c1">&lt;ldap_available&gt;</span><span class=
  "c1">true</span><span class=
  "c0 c1">&lt;/ldap_available&gt;</span></p>

  <p class="c3"><span class=
  "c0 c1">&lt;registered&gt;&lt;/registered&gt;</span></p>

  <p class="c4 c2"><span class="c0 c1">&lt;xml&gt;</span></p>

  <p class="c4 c12"></p>

  <p class="c4"><span class="c0">The message elements have the
  following meaning:</span></p>

  <p class="c4"><span class="c0">&lt;ldap_available&gt;</span></p>

  <p class="c4 c2"><span>If this is present and</span> <span class=
  "c1">true</span><span>&#160;it tells the client that it will get
  a</span> <span class=
  "c1">new_ldap_config</span><span>&#160;message. If the element is
  absent or</span> <span class="c1">false</span><span>, this means
  that no LDAP information is available and the client will not
  receive a</span> <span class=
  "c1">new_ldap_config</span><span>&#160;message until its LDAP
  object has been created (usually after hardware
  detection).</span></p>

  <p class="c4"><span class="c0">LHM note:</span></p>

  <p class="c4 c2"><span>If this element is sent as</span>
  <span class="c1">true</span><span>&#160;and not followed up with
  a</span> <span class="c1">new_ldap_config</span><span>, the
  installation will not properly display the message &#8220;System
  is locked. Waiting for activation.&#8221;</span></p>

  <h3><a id="h.adu9m7a7h8yw" name=
  "h.adu9m7a7h8yw"></a><span>deregistered</span></h3>

  <p><span class="c0">Purpose:</span></p>

  <p class="c2"><span>Server&#10132;Client. Sent to a client that
  has been registered at this server to inform it that the
  registration needs to be renewed if the client wants to stay
  registered at this server. This go-susi specific message is sent
  when the server receives a</span> <span class=
  "c1">new_foreign_client</span><span>&#160;message that informs it
  that one of its clients is now registered at a different server.
  When a client receives a</span> <span class=
  "c1">deregistered</span><span>&#160;message from a server the
  client still believes is the one it should be registered at, it
  will re-register at that server. Otherwise the client will simply
  ignore the message. This corrects the effects of erroneous</span>
  <span class="c1">new_foreign_client</span><span>&#160;messages
  which may result from race conditions during the registration
  process or network problems.</span></p>

  <p><span class="c0">Example message:</span></p>

  <p class="c2"><span class="c0 c1">&lt;xml&gt;</span></p>

  <p class="c5"><span class=
  "c0 c1">&lt;header&gt;</span><span class=
  "c1">deregistered</span><span class=
  "c0 c1">&lt;/header&gt;</span></p>

  <p class="c5"><span class=
  "c0 c1">&lt;source&gt;</span><span class=
  "c1">172.16.2.143:20081</span><span class=
  "c0 c1">&lt;/source&gt;</span></p>

  <p class="c5"><span class=
  "c0 c1">&lt;target&gt;</span><span class=
  "c1">172.16.2.106:20083</span><span class=
  "c0 c1">&lt;/target&gt;</span></p>

  <p class="c2"><span class="c0 c1">&lt;xml&gt;</span></p>

  <p><span class="c0">go-susi note:</span></p>

  <p class="c4 c2"><span>This message is specific to post-TLS
  versions of go-susi. However both pre-TLS versions of go-susi and
  gosa-si-clients will react properly because they see the
  "STARTTLS" as undecryptable gibberish and will re-register based
  on the assumption that the decryption keys of the pre-TLS
  protocol have gone out of sync between client and
  server.</span></p>
  <hr style="page-break-before:always;display:none;" />

  <h3><a id="h.l3p6rg78vgh1" name=
  "h.l3p6rg78vgh1"></a><span>new_ldap_config</span></h3>

  <p class="c4"><span class="c0">Purpose:</span></p>

  <p class="c4 c2"><span>Server&#10132;Client.
  Sends</span><span>&#160;various LDAP-related information to the
  client. This message is not sent until the client object has been
  properly created.</span></p>

  <p class="c4"><span class="c0">Note:</span></p>

  <p class="c4 c2"><span>When go-susi</span> <span class=
  "c11">receives</span><span>&#160;this message, it will
  call</span> <span class=
  "c1">[general]/new-config-hook</span><span>. If go-susi is in
  client-only mode, it will also update its internal LDAP
  parameters.</span></p>

  <p class="c4"><span class="c0">Example message:</span></p>

  <p class="c4 c2"><span class="c0 c1">&lt;xml&gt;</span></p>

  <p class="c3"><span class=
  "c0 c1">&lt;header&gt;</span><span class=
  "c1">new_ldap_config</span><span class="c0 c1">&lt;/header&gt;
  &#160;</span></p>

  <p class="c3"><span class=
  "c0 c1">&lt;source&gt;</span><span class=
  "c1">172.16.2.143:20081</span><span class=
  "c0 c1">&lt;/source&gt;</span></p>

  <p class="c3"><span class=
  "c0 c1">&lt;target&gt;</span><span class=
  "c1">172.16.2.106:20083</span><span class="c0 c1">&lt;/target&gt;
  &#160;</span></p>

  <p class="c3"><span class=
  "c0 c1">&lt;admin_base&gt;</span><span class=
  "c1">ou=Direktorium,o=go-susi,c=de</span><span class=
  "c0 c1">&lt;/admin_base&gt;</span></p>

  <p class="c3"><span class=
  "c0 c1">&lt;department&gt;</span><span class=
  "c1">Direktorium</span><span class=
  "c0 c1">&lt;/department&gt;</span></p>

  <p class="c3"><span class=
  "c0 c1">&lt;ldap_base&gt;</span><span class=
  "c1">ou=Direktorium,o=go-susi,c=de</span><span class=
  "c0 c1">&lt;/ldap_base&gt;</span></p>

  <p class="c3"><span class=
  "c0 c1">&lt;ldap_uri&gt;</span><span class=
  "c1">ldap://ldap01.example.de</span><span class=
  "c0 c1">&lt;/ldap_uri&gt;</span></p>

  <p class="c3"><span class=
  "c0 c1">&lt;ldap_uri&gt;</span><span class=
  "c1">ldap://ldap02.example.de</span><span class=
  "c0 c1">&lt;/ldap_uri&gt;</span></p>

  <p class="c3"><span class=
  "c0 c1">&lt;release&gt;</span><span class=
  "c1">halut/2.4.0</span><span class=
  "c0 c1">&lt;/release&gt;</span></p>

  <p class="c3"><span class=
  "c0 c1">&lt;unit_tag&gt;</span><span class=
  "c1">1154342234048479900</span><span class=
  "c0 c1">&lt;/unit_tag&gt;</span></p>

  <p class="c3"><span class=
  "c0 c1">&lt;new_ldap_config&gt;&lt;/new_ldap_config&gt;</span></p>

  <p class="c4 c2"><span class="c0 c1">&lt;/xml&gt;</span></p>

  <p class="c4 c12"></p>

  <p class="c4"><span class="c0">The message elements have the
  following meaning:</span></p>

  <p class="c4"><span class=
  "c0 c1">&lt;release&gt;</span><span class=
  "c11 c1">&#160;</span><span class="c11">(optional)</span></p>

  <p class="c4 c2"><span>The release the client should have
  according to LDAP if known.</span></p>

  <p class="c4"><span class=
  "c0 c1">&lt;ldap_uri&gt;</span><span>&#160;</span><span class=
  "c11">(1 or more)</span></p>

  <p class="c4 c2"><span>The LDAP server(s) from which the client
  should read its data. All listed LDAP servers contain the same
  data with respect to the client system&#8217;s object but may
  differ in other ways. In general the client should use the
  first</span> <span class=
  "c0 c1">&lt;ldap_uri&gt;</span><span>&#160;and only fall back to
  trying the others if the first is not available.</span></p>

  <p class="c4"><span class="c0 c1">&lt;ldap_base&gt;</span></p>

  <p class="c4 c2"><span>The base under which the client should
  look for its data. There is only one</span> <span class=
  "c0 c1">&lt;ldap_base&gt;</span><span>&#160;element even if there
  are multiple</span> <span class=
  "c0 c1">&lt;ldap_uri&gt;</span><span>&#160;elements.</span></p>

  <p class="c4"><span class="c0 c1">&lt;unit_tag&gt;
  &#160;</span><span class="c11">(only present when unit tags are
  used)</span> <span>The unit tag for the client.</span></p>

  <p class="c4"><span class=
  "c0 c1">&lt;admin_base&gt;</span><span class="c11">(only present
  when unit tags are used)</span></p>

  <p class="c4 c2"><span>The dn of the admin base object. This is
  the first object under the</span> <span class=
  "c0">&lt;ldap_base&gt;</span><span>&#160;that matches</span>
  <span class=
  "c1">(&amp;(objectClass=gosaAdministrativeUnit)(gosaUnitTag=...)).</span><span>&#160;Typically
  this is the same as the</span> <span class=
  "c0">&lt;ldap_base&gt;</span><span>.</span></p>

  <p class="c4"><span class=
  "c0 c1">&lt;department&gt;</span><span class="c11">(only present
  when unit tags are used)</span><span>&#160;The</span>
  <span class="c1">ou</span><span>&#160;attribute of the admin base
  object.</span></p>

  <p class="c4 c12"></p>

  <p class="c4"><span class="c0">gosa-si-server notes:</span></p>

  <p class="c4 c2"><span class=
  "c1">modules/ClientPackages.pm:new_ldap_config()</span>
  <span>contains the code that constructs this message. When the
  system is activated for installation, the</span> <span class=
  "c1">set_activated_for_installation</span><span>&#160;message
  will always be followed by</span> <span class=
  "c1">new_ldap_config</span><span>. This seems like a race
  condition. I think it would be better to send the</span>
  <span class="c1">new_ldap_config</span><span>&#160;beforehand. In
  practice this is not a problem with gosa-si-server because it
  seems to send the LDAP config once before and once after
  the</span> <span class=
  "c1">set_activated_for_installation</span><span>&#160;however I
  believe that the data sent before reflects only a default choice
  and may not be current if the LDAP server is changed in GOsa for
  a new system.</span></p>

  <p class="c4"><span class="c0">GOsa/go-susi note:</span></p>

  <p class="c4 c2"><span>The format of the</span> <span class=
  "c1">gotoLdapServer</span><span>&#160;attribute that is the
  source for this message's information has changed over time.
  go-susi only supports the version 3 format.</span></p>

  <p class="c5"><span>Version 3 format:</span> <span class=
  "c1">Index:Servername:URL/Base</span></p>

  <p class="c5"><span>Version 2 format:</span> <span class=
  "c1">Index:Servername:Base</span></p>

  <p class="c5"><span>Version 1 format:</span> <span class=
  "c1">Servername:URL/Base</span></p>

  <p class="c2"><span>where</span></p>

  <p class="c5"><span class="c1">Index</span><span>&#160;is a
  number used to sort multiple</span> <span class=
  "c1">gotoLdapServer</span><span>&#160;values.</span></p>

  <p class="c5"><span class="c1">Servername</span><span>&#160;is
  unused in version 3 format.</span></p>

  <p class="c5"><span class="c1">URL</span><span>&#160;is the
  ldap:// or ldaps:// URL of the server.</span></p>

  <p class="c5"><span class="c1">Base</span><span>&#160;is the DN
  of the subtree to which searches should be restricted.</span></p>
  <hr style="page-break-before:always;display:none;" />

  <h3><a id="h.gprzmis7xdu9" name=
  "h.gprzmis7xdu9"></a><span>new_ntp_config</span></h3>

  <p class="c4"><span class="c0">Purpose:</span></p>

  <p class="c4 c2"><span>Server&#10132;Client. Tells the client
  which NTP server(s) to use.</span></p>

  <p class="c4"><span class="c0">Note:</span></p>

  <p class="c4 c2"><span>When go-susi</span> <span class=
  "c11">receives</span><span>&#160;this message, it will
  call</span> <span class=
  "c1">[general]/new-config-hook</span><span>.</span></p>

  <p class="c4 c12"></p>

  <p class="c4"><span class="c0">Example message:</span></p>

  <p class="c4 c2"><span class="c0 c1">&lt;xml&gt;</span></p>

  <p class="c3"><span class=
  "c0 c1">&lt;header&gt;</span><span class=
  "c1">new_ntp_config</span><span class="c0 c1">&lt;/header&gt;
  &#160;</span></p>

  <p class="c3"><span class=
  "c0 c1">&lt;source&gt;</span><span class=
  "c1">172.16.2.143:20081</span><span class=
  "c0 c1">&lt;/source&gt;</span></p>

  <p class="c3"><span class=
  "c0 c1">&lt;target&gt;</span><span class=
  "c1">172.16.2.106:20083</span><span class=
  "c0 c1">&lt;/target&gt;</span></p>

  <p class="c3"><span class=
  "c0 c1">&lt;server&gt;</span><span class=
  "c1">pool.ntp.org</span><span class=
  "c0 c1">&lt;/server&gt;</span></p>

  <p class="c3"><span class=
  "c0 c1">&lt;server&gt;</span><span class=
  "c1">ntp.example.org</span><span class=
  "c0 c1">&lt;/server&gt;</span></p>

  <p class="c3"><span class=
  "c0 c1">&lt;new_ntp_config&gt;&lt;/new_ntp_config&gt;</span></p>

  <p class="c4 c2"><span class="c0 c1">&lt;/xml&gt;</span></p>

  <p class="c4 c12"></p>

  <p class="c4"><span class="c0">The message elements have the
  following meaning:</span></p>

  <p class="c4 c2"><span class=
  "c0">&lt;server&gt;</span><span>&#160;</span><span class="c11">(1
  or more)</span><span>&#160;NTP server(s) to use.</span></p>
  <hr style="page-break-before:always;display:none;" />

  <h3><a id="h.hoqs75a5zaxq" name=
  "h.hoqs75a5zaxq"></a><span>detect_hardware</span></h3>

  <p class="c4"><span class="c0">Purpose:</span></p>

  <p class="c4 c2"><span>Server&#10132;Client. Wh</span><span>en
  the server receives a</span> <span class=
  "c1">here_i_am</span><span>&#160;message with a MAC address for
  which no</span> <span class="c1">GOhard</span><span>&#160;object
  can be found in LDAP, the server sends a</span> <span class=
  "c1">detecT_hardware</span><span>&#160;message. The client reacts
  to this message by performing hardware detection and sends
  a</span> <span class=
  "c1">detecTED_hardware</span><span>&#160;message to the server.
  The server then creates the LDAP object with that
  data.</span></p>

  <p class="c4 c12"></p>

  <p class="c4"><span class="c0">Example message:</span></p>

  <p class="c4 c2"><span class="c0 c1">&lt;xml&gt;</span></p>

  <p class="c3"><span class=
  "c0 c1">&lt;header&gt;</span><span class=
  "c1">detect_hardware</span><span class="c0 c1">&lt;/header&gt;
  &#160;</span></p>

  <p class="c3"><span class=
  "c0 c1">&lt;source&gt;</span><span class=
  "c1">172.16.2.143:20081</span><span class=
  "c0 c1">&lt;/source&gt;</span></p>

  <p class="c3"><span class=
  "c0 c1">&lt;target&gt;</span><span class=
  "c1">172.16.2.146:20083</span><span class=
  "c0 c1">&lt;/target&gt;</span></p>

  <p class="c3"><span class=
  "c0 c1">&lt;detect_hardware&gt;&lt;/detect_hardware&gt;</span></p>

  <p class="c4 c2"><span class="c0 c1">&lt;/xml&gt;</span></p>
  <hr style="page-break-before:always;display:none;" />

  <h3 class="c16"><a id="h.ylkn6o4e9qjp" name=
  "h.ylkn6o4e9qjp"></a><span>detected_hardware</span></h3>

  <p><span class="c0">Purpose:</span></p>

  <p class="c2"><span>Client&#10132;Server. When the server
  receives a</span> <span class=
  "c1">here_i_am</span><span>&#160;message with a MAC address for
  which no GOhard object exists in LDAP , the server sends a</span>
  <span class="c1">detecT_hardware</span><span>&#160;message to the
  client. The client reacts to this message by performing hardware
  detection and sends a</span> <span class=
  "c1">detecTED_hardware</span><span>&#160;message to the server.
  The server then creates the LDAP object with that data. If
  a</span> <span class=
  "c1">detecTED_hardware</span><span>&#160;message is received for
  a system whose MAC address is found in LDAP, then that system's
  LDAP object will be updated with the new info.</span></p>

  <p><span class="c0">go-susi extension:</span></p>

  <p class="c2"><span>go-susi extends the usage of</span>
  <span class="c1">detected_hardware</span><span>&#160;to permit
  any kind of creation, modification and even moving of system
  objects within the LDAP tree, even without prior use of</span>
  <span class="c1">here_i_am</span><span>. See the go-susi note
  further below for more information.</span></p>

  <p><span class="c0">Template objects:</span></p>

  <p class="c2"><span>The data from the</span> <span class=
  "c1">detected_hardware</span><span>&#160;message is not enough to
  create a complete system object that is ready for installation.
  This means that usually further action is necessary in GOsa to
  provide the remaining data before the installation can begin. To
  allow for fully automatic installation, go-susi has the ability
  to complement the</span> <span class=
  "c1">detected_hardware</span><span>&#160;data with data copied
  from a template object.</span></p>

  <p class="c2"><span>Whenever go-susi receives a</span>
  <span class="c1">detected_hardware</span><span>&#160;message for
  a system that does not yet exist in LDAP, go-susi will search for
  template objects which are objects that have</span> <span class=
  "c1">objectClass=GOHard</span><span>&#160;and a</span>
  <span class="c1">goComment</span><span>&#160;attribute that
  starts with "</span><span class="c1">Template for</span><span>".
  The remainder of the</span> <span class=
  "c1">goComment</span><span>&#160;is taken as a matching rule as
  described below. If the rule matches against the attributes of
  the new system that are known so far, then the other attributes
  are copied from the template object.</span></p>

  <p><span class="c0">Template objects that are group
  members:</span></p>

  <p class="c2"><span>If the template object is</span> <span class=
  "c1">member</span><span>&#160;of any object groups
  (</span><span class=
  "c1">objectClass=gosaGroupOfNames</span><span>), then &#160;the
  new system will be added to the same groups.</span></p>

  <p><span class="c0">Auto-activation for immediate
  installation:</span></p>

  <p class="c2"><span>If the template object has</span>
  <span class="c1">gotoMode=active</span><span>, then the new
  system will be activated and installation will commence
  immediately.</span></p>

  <p><span class="c0">Object creation not in
  new-systems-base:</span></p>

  <p class="c2"><span>The &#160;new system's LDAP object will be
  placed in the same LDAP path as the template object from which it
  copies attributes. Template objects are allowed to be but don't
  need to be in</span> <span class=
  "c1">new-systems-base.</span></p>

  <p><span class="c0">Matching rule language:</span></p>

  <p class="c2"><span>A matching rule consists of one or more
  parts, optionally separated by whitespace. Each part can have one
  of the following 2 forms:</span></p>

  <p class="c2"><span class="c1">attributeName =~
  /regex/</span></p>

  <p class="c5"><span>matches if the system has at least an
  attribute named</span> <span class=
  "c1">attributeName</span><span>&#160;with at least one value that
  matches the given regex. This is a non-anchored match. If you
  want the match to be anchored you need to specifically
  include</span> <span class="c1">^</span><span>&#160;and/or</span>
  <span class="c1">$</span> <span>in the regex.</span></p>

  <p class="c5"><span>As a special case the regex</span>
  <span class="c1">/^$/</span><span>&#160;matches if the system has
  no attribute</span> <span class=
  "c1">attributeName</span><span>.</span></p>

  <p class="c2"><span class="c1">attributeName !~
  /regex/</span></p>

  <p class="c5"><span>matches if none of the system's values for
  the attribute named</span> <span class=
  "c1">attributeName</span><span>&#160;match the given regex. If
  the system has no attribute of that name this will be treated as
  if it had such an attribute with an empty string as
  value.</span></p>

  <p class="c2"><span>The regex syntax is described
  here:</span><span><a class="c8" href=
  "https://www.google.com/url?q=https://code.google.com/p/re2/wiki/Syntax&amp;sa=D&amp;ust=1454670274247000&amp;usg=AFQjCNHau2eAPvkbnhEF42NOfNTuPC86AQ">&#160;</a></span><span class="c6"><a class="c8"
  href=
  "https://www.google.com/url?q=https://code.google.com/p/re2/wiki/Syntax&amp;sa=D&amp;ust=1454670274248000&amp;usg=AFQjCNG-j0903wud4XAoywGyIhfDrkT-1g">https://code.google.com/p/re2/wiki/Syntax</a></span></p>

  <p class="c2"><span>Whitespace note: Every sequence of whitespace
  characters in regexes is converted to "</span><span class=
  "c1">\s+</span><span>", so a simple space represents any kind of
  whitespace. Note that this breaks some things like
  "</span><span class="c1">[^ ]</span><span>". Use</span>
  <span class="c1">\x20</span><span>&#160;if you need to explicitly
  match a space.</span></p>

  <p><span class="c0">Matching process:</span></p>

  <p class="c2"><span>The matching rule is divided into groups of
  subsequent parts of the same type (i.e.</span><span class=
  "c1">&#160;=~</span><span>&#160;or</span> <span class=
  "c1">!~</span><span>).</span></p>

  <p class="c2"><span>From each</span> <span class=
  "c1">=~</span><span>&#160;group the system must match at least
  one part.</span></p>

  <p class="c2"><span>From each</span> <span class=
  "c1">!~</span><span>&#160;group the system must match all parts
  (i.e. it must not match any of the regexes).</span></p>

  <p class="c2"><span class="c0">Example:</span></p>

  <p class="c5"><span class="c1">cn=~/foo/ cn=~/bar/ cn!~/fool/
  cn!~/barstool/ cn=~/moo/</span></p>

  <p class="c5"><span>matches</span> <span class=
  "c1">cn=foomoo</span></p>

  <p class="c5"><span>matches</span> <span class=
  "c1">cn=moobar</span></p>

  <p class="c5"><span>does not match</span> <span class=
  "c1">cn=foo</span><span>&#160;(the "</span><span class=
  "c1">moo</span><span>" from the 2nd</span> <span class=
  "c1">=~</span><span>&#160;group is missing)</span></p>

  <p class="c5"><span>does not match</span> <span class=
  "c1">cn=moofoolish</span><span>&#160;(forbidden by</span>
  <span class="c1">cn!~/fool/</span><span>)</span></p>

  <p class="c5"><span>does not match</span> <span class=
  "c1">cn=barstoolmoo</span><span>&#160;(forbidden by</span>
  <span class="c1">cn!~/barstool/</span><span>)</span></p>

  <p class="c5"><span>does not match</span> <span class=
  "c1">cn=moo</span><span>&#160;(needs "</span><span class=
  "c1">foo</span><span>" or "</span><span class=
  "c1">bar</span><span>" from the 1st</span> <span class=
  "c1">=~</span><span>&#160;group)</span></p>

  <p class="c5"><span>matches</span> <span class=
  "c1">cn=foobarmoomoo</span><span>&#160;(multiple matches from
  each group are okay)</span></p>

  <p><span class="c0">Matching rule precedence:</span></p>

  <p class="c2"><span>If multiple template objects have matching
  rules that match the new system, go-susi will choose that
  template object whose rule contains the greatest number of
  matching (or non-matching in the case of "!~") regular
  expressions. If multiple template objects have the same score,
  one of them will be picked in an unspecified manner.</span></p>

  <p class="c2"><span class="c0">Example:</span><span>&#160;In the
  example from</span> <span class="c0">Matching
  process</span><span>&#160;above,</span> <span class=
  "c1">cn=foobarmoomoo</span><span>&#160;has a matching score of 5,
  because it matches all three</span> <span class=
  "c1">=~</span><span>&#160;parts and does not match the two</span>
  <span class="c1">!~</span><span>&#160;parts.</span></p>

  <p><span class="c0">Attributes available for matching:</span></p>

  <p class="c2"><span>The following attributes may be used in
  matching rules:</span></p>

  <ul class="c20 lst-kix_16eukovhtu33-1 start">
    <li class="c5 c14"><span>all attributes from the</span>
    <span class="c0">&lt;</span><span class=
    "c0 c1">detected_hardware&gt;</span><span>&#160;element of
    the</span> <span class="c1">detected_hardware</span>
    <span>message.</span></li>

    <li class="c5 c14"><span>the system's</span> <span class=
    "c1">macAddress</span><span>. If the</span> <span class=
    "c0">&lt;</span><span class=
    "c0">detected_hardware&gt;</span><span>&#160;element does not
    contain a valid MAC, it will be determined from the most
    recent</span> <span class=
    "c1">here_i_am</span><span>&#160;or</span> <span class=
    "c1">new_foreign_client</span><span>&#160;message concerning
    the client matching</span> <span class=
    "c1">detected_hardware</span><span>'s</span> <span class=
    "c0">&lt;source&gt;</span> <span>element.</span></li>

    <li class="c5 c14"><span>the system's</span> <span class=
    "c1">ipHostNumber</span><span>&#160;extracted from</span>
    <span class="c1">detected_hardware</span><span>'s</span>
    <span class="c0">&lt;source&gt;</span><span>&#160;element
    (unless there is an attribute or sub-element</span>
    <span class="c1">ipHostNumber</span><span>&#160;in</span>
    <span class=
    "c0">&lt;detected_hardware&gt;</span><span>).</span></li>

    <li class="c5 c14"><span class="c1">cn</span><span>&#160;which
    is the system's DNS name in plain or fully qualified form as
    determined by a reverse lookup of</span> <span class=
    "c1">ipHostNumber</span><span>&#160;(see above).</span></li>

    <li class="c5 c14"><span class=
    "c1">siserver</span><span>&#160;which evaluates to the go-susi
    server doing the matching. You can match by IP address as well
    as DNS name (</span><span class=
    "c1">siserver</span><span>&#160;is a multi-value
    attribute)</span></li>
  </ul>

  <p><span class="c0">Example message:</span></p>

  <p class="c2"><span class="c0 c1">&lt;xml&gt;</span></p>

  <p class="c5"><span class=
  "c0 c1">&lt;header&gt;</span><span class=
  "c1">detected_hardware</span><span class=
  "c0 c1">&lt;/header&gt;</span><span class=
  "c1">&#160;</span><span class=
  "c0 c1">&lt;source&gt;</span><span class=
  "c1">172.16.2.146:20083</span><span class=
  "c0 c1">&lt;/source&gt;</span><span class=
  "c1">&#160;</span><span class=
  "c0 c1">&lt;target&gt;</span><span class=
  "c1">172.16.2.143:20081</span><span class=
  "c0 c1">&lt;/target&gt;</span></p>

  <p class="c5"><span class=
  "c0 c1">&lt;detected_hardware</span></p>

  <p class="c9"><span class="c0 c1">ghCpuType="GenuineIntel /
  Intel(R) Celeron(R) CPU E3300 @ 2.50GHz - 2493.734"</span></p>

  <p class="c9"><span class="c0 c1">ghGfxAdapter="VMWare
  VMWARE0405"</span></p>

  <p class="c9"><span class="c0 c1">ghMemSize="1025692"</span></p>

  <p class="c9"><span class="c0 c1">ghNetNic="AMD PCnet - Fast
  79C971"</span></p>

  <p class="c9"><span class="c0 c1">ghSoundAdapter="Ensoniq
  Creative Sound Blaster AudioPCI64V, AudioPCI128"</span></p>

  <p class="c9"><span class="c0 c1">ghUsbSupport="false"
  gotoHardwareChecksum="qQvNNtPqaV5MG82UElNS7g"
  gotoSndModule="snd_ens1371"</span></p>

  <p class="c9"><span class="c0 c1">gotoXDriver=""</span></p>

  <p class="c9"><span class="c0 c1">gotoXHsync="31-48"
  gotoXMonitor="Generic Monitor"</span></p>

  <p class="c9"><span class="c0 c1">gotoXMouseType="explorerps/2"
  gotoXMouseport="/dev/input/mice"</span></p>

  <p class="c9"><span class="c0 c1">gotoXResolution="800x600"
  gotoXVsync="50-90"</span></p>

  <p class="c9"><span class="c0 c1">gotoXkbModel="pc104"
  macAddress="00:00:00:00:00:00"</span></p>

  <p class="c5"><span class="c0 c1">&gt;</span></p>

  <p class="c9"><span class=
  "c0 c1">&lt;ghScsiDev&gt;</span><span class="c1">NECVMWar VMware
  IDE CDR10</span><span class="c0 c1">&lt;/ghScsiDev&gt;</span></p>

  <p class="c9"><span class=
  "c0 c1">&lt;ghScsiDev&gt;</span><span class="c1">VMware Virtual
  S</span><span class="c0 c1">&lt;/ghScsiDev&gt;</span><span class=
  "c1">&#160;</span><span class=
  "c0 c1">&lt;gotoModules&gt;</span><span class=
  "c1">ppdev</span><span class=
  "c0 c1">&lt;/gotoModules&gt;</span><span class=
  "c1">&#160;</span><span class=
  "c0 c1">&lt;gotoModules&gt;</span><span class=
  "c1">gameport</span><span class=
  "c0 c1">&lt;/gotoModules&gt;</span><span class=
  "c1">&#160;</span><span class=
  "c0 c1">&lt;gotoModules&gt;</span><span class=
  "c1">psmouse</span><span class=
  "c0 c1">&lt;/gotoModules&gt;</span><span class=
  "c1">&#160;</span><span class=
  "c0 c1">&lt;gotoModules&gt;</span><span class=
  "c1">joydev</span><span class=
  "c0 c1">&lt;/gotoModules&gt;</span><span class=
  "c1">&#160;</span><span class=
  "c0 c1">&lt;gotoModules&gt;</span><span class=
  "c1">parport_pc</span><span class=
  "c0 c1">&lt;/gotoModules&gt;</span></p>

  <p class="c9"><span class="c1">&#8230;</span></p>

  <p class="c9"><span class=
  "c0 c1">&lt;gotoModules&gt;</span><span class=
  "c1">async_xor</span><span class=
  "c0 c1">&lt;/gotoModules&gt;</span></p>

  <p class="c9"><span class=
  "c0 c1">&lt;gotoModules&gt;</span><span class=
  "c1">hid</span><span class=
  "c0 c1">&lt;/gotoModules&gt;</span></p>

  <p class="c9"><span class=
  "c0 c1">&lt;gotoModules&gt;</span><span class=
  "c1">pcnet32</span><span class=
  "c0 c1">&lt;/gotoModules&gt;</span></p>

  <p class="c5"><span class=
  "c0 c1">&lt;/detected_hardware&gt;</span></p>

  <p class="c2"><span class="c0 c1">&lt;/xml&gt;</span></p>

  <p class="c12 c2"></p>

  <p><span class="c0">gosa-si-client note:</span></p>

  <p class="c2"><span>The</span> <span class=
  "c0">macAddress</span><span>&#160;attribute of</span>
  <span class="c0">&lt;detected_hardware&gt;</span><span>&#160; may
  be 00:00:00:00:00:00 when this message is sent by gosa-si-client.
  I don't know if this happens all the time with all versions of
  gosa-si-client.</span></p>

  <p><span class="c0">go-susi note:</span></p>

  <p class="c2"><span>go-susi permits multiple</span> <span class=
  "c0">&lt;detected_hardware&gt;</span><span>&#160;elements and
  will take the union of all their values.</span></p>

  <p class="c2"><span>As an alternative to attributes on the</span>
  <span class=
  "c0">&lt;detected_hardware&gt;</span><span>&#160;element go-susi
  also accepts child elements inside</span> <span class=
  "c0">&lt;detected_hardware&gt;</span><span>, e.g.</span>
  <span class=
  "c0">&lt;detected_hardware&gt;&lt;gotoXHsync&gt;</span><span>31-48</span><span class="c0">&lt;/gotoXHsync&gt;&lt;/detected_hardware&gt;</span><span>.<br />
  </span></p>

  <p class="c2"><span>go-susi writes all attributes and
  sub-elements of</span> <span class=
  "c0">&lt;detected_hardware&gt;</span><span>&#160;into the LDAP
  object, except</span> <span class="c1">objectClass</span><span>.
  If there is an</span> <span class=
  "c1">ipHostNumber</span><span>&#160;attribute or element, it will
  override the IP address extracted from</span> <span class=
  "c0">&lt;source&gt;</span><span>. If both</span> <span class=
  "c1">ipHostNumber</span><span>&#160;and</span> <span class=
  "c1">macAddress</span><span>&#160;are present, the</span>
  <span class="c0">&lt;source&gt;</span><span>&#160;element does
  not need to identify a known client. This means that with go-susi
  you can use a</span> <span class=
  "c1">detected_hardware</span><span>&#160;message to create a
  self-contained ready-for-installation object in LDAP and you can
  use &#160;</span><span class=
  "c1">detected_hardware</span><span>&#160;messages to update all
  aspects of a system object. It is even possible to rename a
  system by including a</span> <span class=
  "c1">cn</span><span>&#160;attribute and to move a system by
  including a</span> <span class=
  "c1">dn</span><span>&#160;attribute.<br />
  Note that when updating an existing object, all attributes from
  the old object that are completely missing from</span>
  <span class="c0">&lt;detected_hardware&gt;</span><span>&#160;will
  be copied, but if</span> <span class=
  "c0">&lt;detected_hardware&gt;</span><span>&#160;has an attribute
  with the same name, it will replace the old attribute completely.
  IOW, old and new attribute values are never mixed for the same
  attribute. E.g. if you want to add a single</span> <span class=
  "c1">gotoModules</span><span>&#160;entry, you need to repeat all
  the old entries in the</span> <span class=
  "c1">detected_hardware</span><span>&#160;message. You can't just
  list the new module and expect the others to be
  copied.</span></p>

  <p class="c2"><span>To delete an attribute, include an empty
  sub-element of that name in</span> <span class=
  "c0">&lt;detected_hardware&gt;</span><span>.</span></p>

  <p class="c2"><span>go-susi accepts</span> <span class=
  "c1">detected_hardware</span><span>&#160;messages encrypted with
  any key, not just client keys. This allows a 3rd party to create
  system objects by sending</span> <span class=
  "c1">detected_hardware</span><span>&#160;encrypted e.g. with the
  [GOsaPackages] key.</span></p>
  <hr style="page-break-before:always;display:none;" />

  <h3 class="c16"><a id="h.ylgwskj1nfmx" name=
  "h.ylgwskj1nfmx"></a><span>trigger_action_*</span></h3>

  <p><span class="c0">Purpose:</span></p>

  <p class="c2"><span>Server&#10132;Client.
  Sent</span><span>&#160;by the server to the client when the
  server starts executing a job that affects the client. The client
  will then react appropriately. Most of the time this means
  presenting a message to logged in users to log out.</span></p>

  <p><span class="c0">Example message:</span></p>

  <p class="c2"><span class="c0 c1">&lt;xml&gt;</span></p>

  <p class="c5"><span class=
  "c0 c1">&lt;header&gt;</span><span class=
  "c1">trigger_action_localboot</span><span class=
  "c0 c1">&lt;/header&gt;</span></p>

  <p class="c5"><span class=
  "c0 c1">&lt;source&gt;</span><span class=
  "c1">172.16.2.143:20081</span><span class=
  "c0 c1">&lt;/source&gt;</span></p>

  <p class="c5"><span class=
  "c0 c1">&lt;target&gt;</span><span class=
  "c1">172.16.2.146:20083</span><span class=
  "c0 c1">&lt;/target&gt;</span></p>

  <p class="c5"><span class=
  "c0 c1">&lt;trigger_action_localboot&gt;&lt;/trigger_action_localboot&gt;</span></p>

  <p class="c5"><span class=
  "c0 c1">&lt;session_id&gt;</span><span class=
  "c1">109</span><span class="c0 c1">&lt;/session_id&gt;</span></p>

  <p class="c2"><span class="c0 c1">&lt;/xml&gt;</span></p>

  <p><span class="c0">The following actions are
  supported:</span></p>

  <p class="c2"><span class="c1">trigger_action_localboot<br />
  trigger_action_halt<br />
  trigger_action_faireboot<br />
  trigger_action_reboot<br />
  trigger_action_reinstall<br />
  trigger_action_update<br />
  trigger_action_instant_update</span></p>
  <hr style="page-break-before:always;display:none;" />

  <p class="c12 c2"></p><a href="#" id="id.qz602c68q3ci" name=
  "id.qz602c68q3ci"></a>

  <h2><a id="h.g0n6u5xsrhzi" name=
  "h.g0n6u5xsrhzi"></a><span>Installation and
  Softupdate</span></h2>

  <p><span>When an installation is pending and the client's LDAP
  object has</span> <span class="c1">gotoMode
  locked</span><span>&#160;the client waits for the si-server where
  it is registered to send the client a</span> <span class=
  "c1">set_activated_for_installation</span><span>&#160;message.</span></p>

  <p><span>During an installation as well as during a softupdate
  the client sends information about the FAI progress to the
  server.</span></p>

  <p><span>The</span> <span class=
  "c1">CLMSG_PROGRESS</span><span>&#160;message contains a number
  between 1 and 100 that gives a rough indication of the percentage
  of the process that has been completed.</span></p>

  <p><span>The</span> <span class=
  "c1">CLMSG_GOTOACTIVATION</span><span>&#160;message is a strange
  kind of progress message that sets the job's &lt;progress&gt;
  (which otherwise is a number) to the string</span> <span class=
  "c1">"goto-activation".</span></p>

  <p><span>The</span> <span class="c1">CLMSG_HOOK, CLMSG_TASKBEGIN,
  CLMSG_TASKDIE, CLMSG_TASKEND</span> <span>and</span><span class=
  "c1">&#160;CLMSG_TASKERROR</span><span>&#160;messages inform the
  server about specific steps in the FAI process.</span></p>

  <p><span>The most important message during installation/update
  is</span> <span class=
  "c1">CLMSG_save_fai_log</span><span>&#160;which the client uses
  to transmit the log files from the process to the server. The
  server stores these log files and allows access to them
  via</span> <span class="c1">gosa_show_log_by_mac,
  gosa_show_log_files_by_date_and_mac</span><span>&#160;and</span>
  <span class="c1">gosa_get_log_file_by_date_and_mac.</span></p>

  <p><span>The</span> <span class=
  "c1">CLMSG_check</span><span>&#160;has an unclear purpose and is
  ignored by the si-server.</span></p>

  <h3><a id="h.finq4l4vjm98" name=
  "h.finq4l4vjm98"></a><span>set_activated_for_installation</span></h3>

  <p class="c4"><span class="c0">Purpose:</span></p>

  <p class="c4 c2"><span>Server&#10132;Client. Tell
  t</span><span>he client that it has been activated. This message
  is always sent when a</span> <span class=
  "c1">trigger_action_activate</span><span>&#160;job is executed,
  regardless of whether the client has a pending installation or
  not. It&#8217;s even sent if the client is already
  activated.</span></p>

  <p class="c4 c12"></p>

  <p class="c4"><span class="c0">Example message:</span></p>

  <p class="c4 c2"><span class="c0 c1">&lt;xml&gt;</span></p>

  <p class="c3"><span class=
  "c0 c1">&lt;header&gt;</span><span class=
  "c1">set_activated_for_installation</span><span class=
  "c0 c1">&lt;/header&gt;</span></p>

  <p class="c3"><span class=
  "c0 c1">&lt;source&gt;</span><span class=
  "c1">172.16.2.143:20081</span><span class=
  "c0 c1">&lt;/source&gt;</span></p>

  <p class="c3"><span class=
  "c0 c1">&lt;target&gt;</span><span class=
  "c1">172.16.2.146:20083</span><span class=
  "c0 c1">&lt;/target&gt;</span></p>

  <p class="c3"><span class=
  "c0 c1">&lt;faistate&gt;</span><span class=
  "c1">install</span><span class=
  "c0 c1">&lt;/faistate&gt;</span></p>

  <p class="c3"><span class=
  "c0 c1">&lt;set_activated_for_installation&gt;&lt;/set_activated_for_installation&gt;</span></p>

  <p class="c3"><span class=
  "c0 c1">&lt;session_id&gt;</span><span class=
  "c1">109</span><span class="c0 c1">&lt;/session_id&gt;</span></p>

  <p class="c4 c2"><span class="c0 c1">&lt;/xml&gt;</span></p>

  <p><span class="c0">The message elements have the following
  meaning:</span></p>

  <p><span class="c0">&lt;faistate&gt;</span></p>

  <p class="c2"><span>This reflects the value of the target
  machine's</span> <span class=
  "c1">FAIstate</span><span>&#160;attribute at the time of the
  activation job that triggered the sending of the
  message.</span></p>

  <p class="c12 c2"></p>

  <p class="c4"><span class="c0">gosa-si-client notes:</span></p>

  <p class="c4 c2"><span>When the client receives this message
  in</span> <span class=
  "c1">client/events/installation.pm</span><span>&#160;it creates a
  file</span> <span class=
  "c1">/var/run/gosa-si/gosa-si-client.activated</span><span>.</span>
  <span class="c1">fai/get-config-dir-gosa</span><span>&#160;waits
  for the existence of this file before starting the
  installation.</span></p>
  <hr style="page-break-before:always;display:none;" />

  <h3><a id="h.ntyp12z772rh" name=
  "h.ntyp12z772rh"></a><span>CLMSG_PROGRESS</span></h3>

  <p class="c4"><span class="c0">Purpose:</span></p>

  <p class="c2"><span>Client&#10132;Server. Dur</span><span>ing
  installation or softupdate the client uses this message to send
  progress information in percent to the server.</span></p>

  <p class="c2"><span>When the server receives this message it will
  update its job data and will forward the new information
  via</span> <span class=
  "c1">foreign_job_updates</span><span>&#160;to its peers.
  Subsequent</span> <span class=
  "c1">gosa_query_jobdb</span><span>&#160;requests will also
  receive the new progress number in the answer's</span>
  <span class=
  "c0">&lt;progress&gt;</span><span>&#160;element.</span></p>

  <p class="c2"><span>Note that</span> <span class=
  "c1">CLMSG_GOTOACTIVATION</span><span>&#160;is technically also a
  progress indication and reflected in the</span> <span class=
  "c0">&lt;progress&gt;</span><span>&#160;element.</span></p>

  <p><span class="c0">Example message:</span></p>

  <p class="c2"><span class="c0 c1">&lt;xml&gt;</span></p>

  <p class="c5"><span class=
  "c0 c1">&lt;header&gt;</span><span class=
  "c1">CLMSG_PROGRESS</span><span class=
  "c0 c1">&lt;/header&gt;</span></p>

  <p class="c5"><span class=
  "c0 c1">&lt;source&gt;</span><span class=
  "c1">172.16.2.146:20083</span><span class=
  "c0 c1">&lt;/source&gt;</span></p>

  <p class="c5"><span class=
  "c0 c1">&lt;target&gt;</span><span class=
  "c1">172.16.2.85:20081</span><span class=
  "c0 c1">&lt;/target&gt;</span></p>

  <p class="c5"><span class=
  "c0 c1">&lt;CLMSG_PROGRESS&gt;</span><span class=
  "c1">77</span><span class=
  "c0 c1">&lt;/CLMSG_PROGRESS&gt;</span></p>

  <p class="c5"><span class=
  "c0 c1">&lt;macaddress&gt;</span><span class=
  "c1">00:0c:29:50:a3:52</span><span class=
  "c0 c1">&lt;/macaddress&gt;</span></p>

  <p class="c5"><span class=
  "c0 c1">&lt;timestamp&gt;</span><span class=
  "c1">20130305113331</span><span class=
  "c0 c1">&lt;/timestamp&gt;</span></p>

  <p class="c2"><span class="c0 c1">&lt;/xml&gt;</span></p>

  <p><span class="c0">The message elements have the following
  meaning:</span></p>

  <p><span class="c0 c1">&lt;CLMSG_PROGRESS&gt;</span></p>

  <p class="c2"><span>An integer between between 1 and 100
  (inclusive) giving the percentage of the installation/softupdate
  that has been completed.</span></p>

  <p><span class="c0 c1">&lt;timestamp&gt;,
  &lt;macaddress&gt;</span><span>&#160;see</span> <span class=
  "c1">CLMSG_CURRENTLY_LOGGED_IN.</span></p>
  <hr style="page-break-before:always;display:none;" />

  <h3><a id="h.n5rmujuoqo6x" name=
  "h.n5rmujuoqo6x"></a><span>CLMSG_GOTOACTIVATION</span></h3>

  <p class="c4"><span class="c0">Purpose:</span></p>

  <p class="c4 c2"><span>Client&#10132;Server. Th</span><span>e
  client sends this message when it receives</span> <span class=
  "c1">GOTOACTIVATION</span><span>&#160;via its FIFO interface. I
  don't know who sends this to the FIFO. In any case it happens
  when the client is waiting for activation because it is in</span>
  <span class="c1">gotoMode "locked".</span><span>&#160;It does not
  matter if the client already existed in LDAP or was just
  created.</span></p>

  <p class="c2"><span>When the server receives this message it will
  update its job data to have</span></p>

  <p class="c5"><span>&#160;</span><span class=
  "c0">&lt;progress&gt;</span><span class=
  "c1">goto-activation</span><span class=
  "c0">&lt;/progress&gt;</span></p>

  <p class="c2"><span>and will forward the new information
  via</span> <span class=
  "c1">foreign_job_updates</span><span>&#160;to its peers.
  Subsequent</span> <span class=
  "c1">gosa_query_jobdb</span><span>&#160;requests will also
  receive the new progress</span> <span class=
  "c0">&lt;progress&gt;</span><span>&#160;element.</span></p>

  <p class="c2"><span>Other than updating the progress, this
  message has no effect on the server.</span></p>

  <p><span class="c0">Example message:</span></p>

  <p class="c2"><span class="c0 c1">&lt;xml&gt;</span></p>

  <p class="c5"><span class=
  "c0 c1">&lt;header&gt;</span><span class=
  "c1">CLMSG_GOTOACTIVATION</span><span class=
  "c0 c1">&lt;/header&gt;</span></p>

  <p class="c5"><span class=
  "c0 c1">&lt;source&gt;</span><span class=
  "c1">172.16.2.146:20083</span><span class=
  "c0 c1">&lt;/source&gt;</span></p>

  <p class="c5"><span class=
  "c0 c1">&lt;target&gt;</span><span class=
  "c1">172.16.2.85:20081</span><span class=
  "c0 c1">&lt;/target&gt;</span></p>

  <p class="c5"><span class=
  "c0 c1">&lt;CLMSG_GOTOACTIVATION&gt;&lt;/CLMSG_GOTOACTIVATION&gt;</span></p>

  <p class="c5"><span class=
  "c0 c1">&lt;macaddress&gt;</span><span class=
  "c1">00:0c:29:50:a3:52</span><span class=
  "c0 c1">&lt;/macaddress&gt;</span></p>

  <p class="c5"><span class=
  "c0 c1">&lt;timestamp&gt;</span><span class=
  "c1">20130305113331</span><span class=
  "c0 c1">&lt;/timestamp&gt;</span></p>

  <p class="c2"><span class="c0 c1">&lt;/xml&gt;</span></p>

  <p><span class="c0">The message elements have the following
  meaning:</span></p>

  <p><span class="c0 c1">&lt;timestamp&gt;,
  &lt;macaddress&gt;</span><span>&#160;see</span> <span class=
  "c1">CLMSG_CURRENTLY_LOGGED_IN.</span></p>
  <hr style="page-break-before:always;display:none;" />

  <h3><a id="h.95smg2f0t4s6" name=
  "h.95smg2f0t4s6"></a><span>CLMSG_save_fai_log</span></h3>

  <p class="c4"><span class="c0">Purpose:</span></p>

  <p class="c4 c2"><span>Client&#10132;Server.
  Tra</span><span>nsmits log files from a finished installation or
  softupdate to the server.</span></p>

  <p class="c4 c12"></p>

  <p class="c4"><span class="c0">Example message:</span></p>

  <p class="c4 c2"><span class="c0 c1">&lt;xml&gt;</span></p>

  <p class="c3"><span class=
  "c0 c1">&lt;header&gt;</span><span class=
  "c1">CLMSG_save_fai_log</span><span class=
  "c0 c1">&lt;/header&gt;</span></p>

  <p class="c3"><span class=
  "c0 c1">&lt;source&gt;</span><span class=
  "c1">172.16.2.146:20083</span><span class=
  "c0 c1">&lt;/source&gt;</span></p>

  <p class="c3"><span class=
  "c0 c1">&lt;target&gt;</span><span class=
  "c1">172.16.2.85:20081</span><span class=
  "c0 c1">&lt;/target&gt;</span></p>

  <p class="c3"><span class=
  "c0 c1">&lt;macaddress&gt;</span><span class=
  "c1">00:0c:29:50:a3:52</span><span class=
  "c0 c1">&lt;/macaddress&gt;</span></p>

  <p class="c3"><span class=
  "c0 c1">&lt;fai_action&gt;</span><span class=
  "c1">install</span><span class=
  "c0 c1">&lt;/fai_action&gt;</span></p>

  <p class="c3"><span class=
  "c0 c1">&lt;CLMSG_save_fai_log&gt;</span></p>

  <p class="c3"><span class=
  "c1">log_file:fstab:IyAvZXRjL2...c2RhNQo=</span></p>

  <p class="c3"><span class=
  "c1">log_file:format.log:U3Rhc...M2I5ODEK</span></p>

  <p class="c3"><span class="c1">...</span></p>

  <p class="c3"><span class=
  "c0 c1">&lt;/CLMSG_save_fai_log&gt;</span></p>

  <p class="c4 c2"><span class="c0 c1">&lt;/xml&gt;</span></p>

  <p class="c4 c12"></p>

  <p class="c4"><span class="c0">The message elements have the
  following meaning:</span></p>

  <p class="c4"><span class="c0 c1">&lt;macaddress&gt;</span></p>

  <p class="c4 c2"><span>The MAC of the client whose log files are
  being sent (usually the same machine as identified by</span>
  <span class="c0">&lt;source&gt;</span><span>.</span></p>

  <p class="c4"><span class=
  "c0 c1">&lt;CLMSG_save_fai_log&gt;</span></p>

  <p class="c4 c2"><span>The log files to be transmitted. Every log
  file starts with the literal string</span> <span class=
  "c1">"log_file:"</span><span>, followed by the file name,
  followed by</span> <span class="c1">":"</span><span>. This is
  followed by the base64-encoded file contents and terminated by a
  space.</span></p>

  <p class="c4"><span class="c0 c1">&lt;fai_action&gt;</span></p>

  <p class="c4 c2"><span>The FAI action for which log files are
  being transmitted. Possible values are</span> <span class=
  "c1">"install"</span> <span>and</span> <span class=
  "c1">"softupdate".</span></p>

  <p class="c4 c12"></p>

  <p class="c4"><span>There is no</span> <span class=
  "c0">&lt;timestamp&gt;</span><span>. Unlike most other</span>
  <span class="c1">CLMSG_*</span><span>&#160;messages, this one
  does not include a</span> <span class=
  "c0">&lt;timestamp&gt;</span><span>&#160;element.</span></p>

  <p class="c4 c12"></p>

  <p class="c4"><span class="c0">gosa-si-client notes:</span></p>

  <p class="c4 c2"><span>gosa-si-client inserts spaces into the
  base64-encoded data which break some base64 decoders. Remove all
  whitespace before decoding.</span></p>

  <p class="c4 c2"><span>I have observed broken base64 strings
  coming from gosa-si-client.</span></p>
  <hr style="page-break-before:always;display:none;" />

  <h3><a id="h.g7r8biivaqpb" name=
  "h.g7r8biivaqpb"></a><span>CLMSG_&lt;FAI MONITOR
  EVENT&gt;</span></h3>

  <p class="c4"><span class="c0">Purpose</span><span>:</span></p>

  <p class="c4 c2"><span>Client&#10132;Server. Dur</span><span>ing
  installation gosa-si client receives events from FAI via its FIFO
  interface. These events can be seen in the</span> <span class=
  "c1">fai-monitord.log</span><span>&#160;log file. gosa-si-client
  passes these events on to the server.</span></p>

  <p class="c4 c12 c2"></p>

  <p class="c4 c2"><span>The CLMSG_* messages are used to
  communicate the status of an installation from the client to the
  Server. These messages look almost the same, except the element
  with the value and the header. Furthermore, the message</span>
  <span class="c1">CLMSG_save_fai_log</span><span>&#160;has the
  additional element</span> <span class=
  "c1">&lt;fai_action&gt;.</span></p>

  <p class="c4 c12"></p>

  <p class="c4"><span class="c0">Example message:</span></p>

  <p class="c2"><span class="c0 c1">&lt;xml&gt;</span></p>

  <p class="c5"><span class=
  "c0 c1">&lt;header&gt;</span><span class=
  "c1">CLMSG_TASKBEGIN</span><span class=
  "c0 c1">&lt;/header&gt;</span></p>

  <p class="c5"><span class=
  "c0 c1">&lt;source&gt;</span><span class=
  "c1">172.16.2.146:20083</span><span class=
  "c0 c1">&lt;/source&gt;</span></p>

  <p class="c5"><span class=
  "c0 c1">&lt;target&gt;</span><span class=
  "c1">172.16.2.85:20081</span><span class=
  "c0 c1">&lt;/target&gt;</span></p>

  <p class="c5"><span class=
  "c0 c1">&lt;CLMSG_TASKBEGIN&gt;</span><span class=
  "c1">confdir</span><span class=
  "c0 c1">&lt;/CLMSG_TASKBEGIN&gt;</span></p>

  <p class="c5"><span class=
  "c0 c1">&lt;macaddress&gt;</span><span class=
  "c1">00:0c:29:50:a3:52</span><span class=
  "c0 c1">&lt;/macaddress&gt;</span></p>

  <p class="c5"><span class=
  "c0 c1">&lt;timestamp&gt;</span><span class=
  "c1">20130305113331</span><span class=
  "c0 c1">&lt;/timestamp&gt;</span></p>

  <p class="c2"><span class="c0 c1">&lt;/xml&gt;</span></p>

  <p class="c4 c12"></p>

  <p><span class="c0">Possible</span> <span class="c0">&lt;FAI
  MONITOR EVENT&gt;s:</span></p>

  <p class="c2"><span class="c1">HOOK<br />
  TASKBEGIN<br />
  TASKDIE<br />
  TASKEND<br />
  TASKERROR</span></p>

  <p class="c2"><span class="c1">check</span></p>

  <p class="c4"><span class="c0 c1">&#160;</span></p>
  <hr style="page-break-before:always;display:none;" />

  <h3 class="c16"><a id="h.69oiwe17guu6" name=
  "h.69oiwe17guu6"></a><span>CLMSG_TASKBEGIN / CLMSG_TASKERROR /
  CLMSG_TASKEND</span></h3>

  <p><span class="c0">Purpose:</span></p>

  <p class="c2"><span>(See also</span> <span class=
  "c1">CLMSG_&lt;FAI MONITOR EVENT&gt;</span><span>)</span></p>

  <p class="c2"><span>Client&#10132;Server. Du</span><span>ring
  installation or softupdate the client sends these messages to the
  server to inform it about FAI tasks that are being started
  (</span><span class="c1">CLMSG_TASKBEGIN</span><span>), errors
  that occur during task execution (</span><span class=
  "c1">CLMSG_TASKERROR</span><span>) and the exit status when a
  task finishes (</span><span class=
  "c1">CLMSG_TASKEND</span><span>).</span></p>

  <p class="c12 c2"></p>

  <p><span class="c0">Example messages for a successfully completed
  task:</span></p>

  <p><span class="c0">Task &#8220;confdir&#8221; begins:</span></p>

  <p class="c2"><span class="c0 c1">&lt;xml&gt;</span></p>

  <p class="c5"><span class=
  "c0 c1">&lt;header&gt;</span><span class=
  "c1">CLMSG_TASKBEGIN</span><span class=
  "c0 c1">&lt;/header&gt;</span></p>

  <p class="c5"><span class=
  "c0 c1">&lt;source&gt;</span><span class=
  "c1">172.16.2.146:20083</span><span class=
  "c0 c1">&lt;/source&gt;</span></p>

  <p class="c5"><span class=
  "c0 c1">&lt;target&gt;</span><span class=
  "c1">172.16.2.85:20081</span><span class=
  "c0 c1">&lt;/target&gt;</span></p>

  <p class="c5"><span class=
  "c0 c1">&lt;CLMSG_TASKBEGIN&gt;</span><span class=
  "c1">confdir</span><span class=
  "c0 c1">&lt;/CLMSG_TASKBEGIN&gt;</span></p>

  <p class="c5"><span class=
  "c0 c1">&lt;macaddress&gt;</span><span class=
  "c1">00:0c:29:50:a3:52</span><span class=
  "c0 c1">&lt;/macaddress&gt;</span></p>

  <p class="c5"><span class=
  "c0 c1">&lt;timestamp&gt;</span><span class=
  "c1">20130305113331</span><span class=
  "c0 c1">&lt;/timestamp&gt;</span></p>

  <p class="c2"><span class="c0 c1">&lt;/xml&gt;</span></p>

  <p class="c12 c2"></p>

  <p><span class="c0">Task &#8220;confdir&#8221; has terminated
  successfully with exit code 0:</span></p>

  <p class="c2"><span class="c0 c1">&lt;xml&gt;</span></p>

  <p class="c5"><span class=
  "c0 c1">&lt;header&gt;</span><span class=
  "c1">CLMSG_TASKEND</span><span class=
  "c0 c1">&lt;/header&gt;</span></p>

  <p class="c5"><span class=
  "c0 c1">&lt;source&gt;</span><span class=
  "c1">172.16.2.146:20083</span><span class=
  "c0 c1">&lt;/source&gt;</span></p>

  <p class="c5"><span class=
  "c0 c1">&lt;target&gt;</span><span class=
  "c1">172.16.2.85:20081</span><span class=
  "c0 c1">&lt;/target&gt;</span></p>

  <p class="c5"><span class=
  "c0 c1">&lt;CLMSG_TASKEND&gt;</span><span class="c1">confdir
  0</span><span class="c0 c1">&lt;/CLMSG_TASKEND&gt;</span></p>

  <p class="c5"><span class=
  "c0 c1">&lt;macaddress&gt;</span><span class=
  "c1">00:0c:29:50:a3:52</span><span class=
  "c0 c1">&lt;/macaddress&gt;</span></p>

  <p class="c5"><span class=
  "c0 c1">&lt;timestamp&gt;</span><span class=
  "c1">20130305113331</span><span class=
  "c0 c1">&lt;/timestamp&gt;</span></p>

  <p class="c2"><span class="c0 c1">&lt;/xml&gt;</span></p>
  <hr style="page-break-before:always;display:none;" />

  <p><span class="c0">Example messages for a failed
  task:</span></p>

  <p><span class="c0">Task &#8220;instsoft&#8221;
  begins:</span></p>

  <p class="c2"><span class="c0 c1">&lt;xml&gt;</span></p>

  <p class="c5"><span class=
  "c0 c1">&lt;header&gt;</span><span class=
  "c1">CLMSG_TASKBEGIN</span><span class=
  "c0 c1">&lt;/header&gt;</span></p>

  <p class="c5"><span class=
  "c0 c1">&lt;source&gt;</span><span class=
  "c1">172.16.2.146:20083</span><span class=
  "c0 c1">&lt;/source&gt;</span></p>

  <p class="c5"><span class=
  "c0 c1">&lt;target&gt;</span><span class=
  "c1">172.16.2.85:20081</span><span class=
  "c0 c1">&lt;/target&gt;</span></p>

  <p class="c5"><span class=
  "c0 c1">&lt;CLMSG_TASKBEGIN&gt;</span><span class=
  "c1">instsoft</span><span class=
  "c0 c1">&lt;/CLMSG_TASKBEGIN&gt;</span></p>

  <p class="c5"><span class=
  "c0 c1">&lt;macaddress&gt;</span><span class=
  "c1">00:0c:29:50:a3:52</span><span class=
  "c0 c1">&lt;/macaddress&gt;</span></p>

  <p class="c5"><span class=
  "c0 c1">&lt;timestamp&gt;</span><span class=
  "c1">20130305113331</span><span class=
  "c0 c1">&lt;/timestamp&gt;</span></p>

  <p class="c2"><span class="c0 c1">&lt;/xml&gt;</span></p>

  <p><span class="c0">An error code 472 occurs during execution of
  task &#8220;instsoft&#8221;:</span></p>

  <p class="c2"><span class="c0 c1">&lt;xml&gt;</span></p>

  <p class="c5"><span class=
  "c0 c1">&lt;header&gt;</span><span class=
  "c1">CLMSG_TASKBEGIN</span><span class=
  "c0 c1">&lt;/header&gt;</span></p>

  <p class="c5"><span class=
  "c0 c1">&lt;source&gt;</span><span class=
  "c1">172.16.2.146:20083</span><span class=
  "c0 c1">&lt;/source&gt;</span></p>

  <p class="c5"><span class=
  "c0 c1">&lt;target&gt;</span><span class=
  "c1">172.16.2.85:20081</span><span class=
  "c0 c1">&lt;/target&gt;</span></p>

  <p class="c5"><span class=
  "c0 c1">&lt;CLMSG_TASKBEGIN&gt;</span><span class=
  "c1">error</span><span class=
  "c0 c1">&lt;/CLMSG_TASKBEGIN&gt;</span></p>

  <p class="c5"><span class=
  "c0 c1">&lt;macaddress&gt;</span><span class=
  "c1">00:0c:29:50:a3:52</span><span class=
  "c0 c1">&lt;/macaddress&gt;</span></p>

  <p class="c5"><span class=
  "c0 c1">&lt;timestamp&gt;</span><span class=
  "c1">20130305113331</span><span class=
  "c0 c1">&lt;/timestamp&gt;</span></p>

  <p class="c2"><span class="c0 c1">&lt;/xml&gt;</span></p>

  <p class="c2"><span class="c0 c1">&lt;xml&gt;</span></p>

  <p class="c5"><span class=
  "c0 c1">&lt;header&gt;</span><span class=
  "c1">CLMSG_TASKERROR</span><span class=
  "c0 c1">&lt;/header&gt;</span></p>

  <p class="c5"><span class=
  "c0 c1">&lt;source&gt;</span><span class=
  "c1">172.16.2.146:20083</span><span class=
  "c0 c1">&lt;/source&gt;</span></p>

  <p class="c5"><span class=
  "c0 c1">&lt;target&gt;</span><span class=
  "c1">172.16.2.85:20081</span><span class=
  "c0 c1">&lt;/target&gt;</span></p>

  <p class="c5"><span class=
  "c0 c1">&lt;CLMSG_TASKERROR&gt;</span></p>

  <p class="c5"><span class="c1">&#160; instsoft 472
  warn:install_packages: various error messages</span></p>

  <p class="c5"><span class=
  "c0 c1">&lt;/CLMSG_TASKERROR&gt;</span></p>

  <p class="c5"><span class=
  "c0 c1">&lt;macaddress&gt;</span><span class=
  "c1">00:0c:29:50:a3:52</span><span class=
  "c0 c1">&lt;/macaddress&gt;</span></p>

  <p class="c5"><span class=
  "c0 c1">&lt;timestamp&gt;</span><span class=
  "c1">20130305113331</span><span class=
  "c0 c1">&lt;/timestamp&gt;</span></p>

  <p class="c2"><span class="c0 c1">&lt;/xml</span></p>

  <p class="c2"><span class="c0 c1">&lt;xml&gt;</span></p>

  <p class="c5"><span class=
  "c0 c1">&lt;header&gt;</span><span class=
  "c1">CLMSG_TASKEND</span><span class=
  "c0 c1">&lt;/header&gt;</span></p>

  <p class="c5"><span class=
  "c0 c1">&lt;source&gt;</span><span class=
  "c1">172.16.2.146:20083</span><span class=
  "c0 c1">&lt;/source&gt;</span></p>

  <p class="c5"><span class=
  "c0 c1">&lt;target&gt;</span><span class=
  "c1">172.16.2.85:20081</span><span class=
  "c0 c1">&lt;/target&gt;</span></p>

  <p class="c5"><span class=
  "c0 c1">&lt;CLMSG_TASKEND&gt;</span><span class="c1">error
  472</span><span class="c0 c1">&lt;/CLMSG_TASKEND&gt;</span></p>

  <p class="c5"><span class=
  "c0 c1">&lt;macaddress&gt;</span><span class=
  "c1">00:0c:29:50:a3:52</span><span class=
  "c0 c1">&lt;/macaddress&gt;</span></p>

  <p class="c5"><span class=
  "c0 c1">&lt;timestamp&gt;</span><span class=
  "c1">20130305113331</span><span class=
  "c0 c1">&lt;/timestamp&gt;</span></p>

  <p class="c2"><span class="c0 c1">&lt;/xml&gt;</span></p>

  <p><span class="c0">The CLMSG_TASKEND for the
  &#8220;instsoft&#8221; task that failed:</span></p>

  <p class="c2"><span class="c0 c1">&lt;xml&gt;</span></p>

  <p class="c5"><span class=
  "c0 c1">&lt;header&gt;</span><span class=
  "c1">CLMSG_TASKEND</span><span class=
  "c0 c1">&lt;/header&gt;</span></p>

  <p class="c5"><span class=
  "c0 c1">&lt;source&gt;</span><span class=
  "c1">172.16.2.146:20083</span><span class=
  "c0 c1">&lt;/source&gt;</span></p>

  <p class="c5"><span class=
  "c0 c1">&lt;target&gt;</span><span class=
  "c1">172.16.2.85:20081</span><span class=
  "c0 c1">&lt;/target&gt;</span></p>

  <p class="c5"><span class=
  "c0 c1">&lt;CLMSG_TASKEND&gt;</span><span class="c1">instsoft
  472</span><span class="c0 c1">&lt;/CLMSG_TASKEND&gt;</span></p>

  <p class="c5"><span class=
  "c0 c1">&lt;macaddress&gt;</span><span class=
  "c1">00:0c:29:50:a3:52</span><span class=
  "c0 c1">&lt;/macaddress&gt;</span></p>

  <p class="c5"><span class=
  "c0 c1">&lt;timestamp&gt;</span><span class=
  "c1">20130305113331</span><span class=
  "c0 c1">&lt;/timestamp&gt;</span></p>

  <p class="c2"><span class="c0 c1">&lt;/xml&gt;</span></p>

  <p class="c12 c2"></p>

  <p><span class="c0">The message elements have the following
  meaning:</span></p>

  <p><span class=
  "c0 c1">&lt;CLMSG_TASKBEGIN&gt;,&lt;CLMSG_TASKEND&gt;</span></p>

  <p class="c2"><span>These messages always come in pairs.
  Every</span> <span class=
  "c1">CLMSG_TASKBEGIN</span><span>&#160;has a matching</span>
  <span class="c1">CLMSG_TASKEND</span><span>.</span></p>

  <p><span class="c0 c1">&lt;CLMSG_TASKBEGIN&gt;,
  &lt;CLMSG_TASKERROR&gt;,&lt;CLMSG_TASKEND&gt;</span></p>

  <p class="c2"><span>A</span> <span class=
  "c1">CLMSG_TASKERROR</span><span>&#160;is surrounded by</span>
  <span class="c1">CLMSG_TASKBEGIN</span><span>&#160;and</span>
  <span class="c1">CLMSG_TASKEND</span><span>&#160;for an</span>
  <span class="c1">"error"</span><span>&#160;task. This means that
  if an error occurs during a task there will be (at least) 5
  messages:</span></p>

  <p class="c2"><span class="c1">CLMSG_TASKBEGIN, CLMSG_TASKBEGIN,
  CLMSG_TASKERROR, CLMSG_TASKEND, CLMSG_TASKEND</span><span>. Other
  messages, in particular</span> <span class=
  "c1">CLMSG_PROGRESS</span><span>&#160;and</span> <span class=
  "c1">CLMSG_HOOK</span><span>&#160;may occur between these
  messages.</span></p>

  <p><span class=
  "c0 c1">&lt;CLMSG_TASKERROR&gt;</span><span>&#160;The following
  is (an incomplete) list of possible errors:</span></p>

  <p class="c2"><span class="c1">instsoft 472
  warn:install_packages: various error messages<br />
  instsoft 421 warn:install_packages: packages missing</span></p>

  <p class="c12 c2"></p>

  <p><span class="c0 c1">&lt;timestamp&gt;,
  &lt;macaddress&gt;</span><span>&#160;see</span> <span class=
  "c1">CLMSG_CURRENTLY_LOGGED_IN.</span></p>
  <hr style="page-break-before:always;display:none;" />

  <p class="c4 c12 c2"></p>

  <h3><a id="h.2sm8tu2tcdzu" name=
  "h.2sm8tu2tcdzu"></a><span>CLMSG_TASKDIE</span></h3>

  <p class="c4"><span class="c0">Purpose:</span></p>

  <p class="c4 c2"><span>(See also</span> <span class=
  "c1">CLMSG_&lt;FAI MONITOR EVENT&gt;</span><span>)</span></p>

  <p class="c4 c2"><span>Client&#10132;Server. Signals a fatal
  error that causes FAI to abort. The system to be installed is
  probably unusable. Log files are transmitted using</span>
  <span class=
  "c1">CLMSG_save_fai_log</span><span>&#160;despite</span>
  <span class="c1">CLMSG_TASKDIE</span><span>.</span></p>

  <p class="c4 c12 c2"></p>

  <p class="c4"><span class="c0">Example message:</span></p>

  <p class="c4 c2"><span class="c0 c1">&lt;xml&gt;</span></p>

  <p class="c3"><span class=
  "c0 c1">&lt;header&gt;</span><span class=
  "c1">CLMSG_TASKDIE</span><span class=
  "c0 c1">&lt;/header&gt;</span></p>

  <p class="c3"><span class=
  "c0 c1">&lt;source&gt;</span><span class=
  "c1">172.16.2.146:20083</span><span class=
  "c0 c1">&lt;/source&gt;</span></p>

  <p class="c3"><span class=
  "c0 c1">&lt;target&gt;</span><span class=
  "c1">172.16.2.85:20081</span><span class=
  "c0 c1">&lt;/target&gt;</span></p>

  <p class="c3"><span class=
  "c0 c1">&lt;CLMSG_TASKDIE&gt;</span><span class="c1">extrbase 803
  fatal:Bootstrap failed</span><span class=
  "c0 c1">&lt;/CLMSG_TASKDIE&gt;</span></p>

  <p class="c3"><span class=
  "c0 c1">&lt;macaddress&gt;</span><span class=
  "c1">00:0c:29:50:a3:52</span><span class=
  "c0 c1">&lt;/macaddress&gt;</span></p>

  <p class="c3"><span class=
  "c0 c1">&lt;timestamp&gt;</span><span class=
  "c1">20130305113331</span><span class=
  "c0 c1">&lt;/timestamp&gt;</span></p>

  <p class="c4 c2"><span class="c0 c1">&lt;/xml&gt;</span></p>

  <p class="c4 c12"></p>

  <p class="c4"><span class="c0">go-susi notes:</span></p>

  <p class="c2"><span>When go-susi receives this message, it
  removes the running job and sets the system's</span> <span class=
  "c1">faistate</span><span>&#160;to</span> <span class=
  "c1">"error:..."</span><span>&#160;.</span></p>
  <hr style="page-break-before:always;display:none;" />

  <h3><a id="h.z4re866t15e6" name=
  "h.z4re866t15e6"></a><span>CLMSG_check</span></h3>

  <p class="c4"><span class="c0">Purpose:</span></p>

  <p class="c2"><span>(See also</span> <span class=
  "c1">CLMSG_&lt;FAI MONITOR EVENT&gt;</span><span>)</span></p>

  <p class="c4 c2"><span>Client&#10132;Server.Se</span><span>nt by
  gosa-si-client when it receives "check &lt;foo&gt;" via its FIFO.
  This is caused by<br /></span><span class="c1">"if sendmon check
  $sendhostname; then"</span></p>

  <p class="c4 c2"><span>from FAI's</span> <span class=
  "c1">subroutines:task_confdir()</span><span>. Has no effect on
  the server.</span></p>

  <p class="c4 c12"></p>

  <p class="c4"><span class="c0">Example message:</span></p>

  <p class="c4 c2"><span class="c0 c1">&lt;xml&gt;</span></p>

  <p class="c3"><span class=
  "c0 c1">&lt;header&gt;</span><span class=
  "c1">CLMSG_check</span><span class=
  "c0 c1">&lt;/header&gt;</span></p>

  <p class="c3"><span class=
  "c0 c1">&lt;source&gt;</span><span class=
  "c1">172.16.2.146:20083</span><span class=
  "c0 c1">&lt;/source&gt;</span></p>

  <p class="c3"><span class=
  "c0 c1">&lt;target&gt;</span><span class=
  "c1">172.16.2.85:20081</span><span class=
  "c0 c1">&lt;/target&gt;</span></p>

  <p class="c3"><span class=
  "c0 c1">&lt;macaddress&gt;</span><span class=
  "c1">00:0c:29:50:a3:52</span><span class=
  "c0 c1">&lt;/macaddress&gt;</span></p>

  <p class="c3"><span class=
  "c0 c1">&lt;CLMSG_check&gt;</span><span class=
  "c1">fooclient</span><span class=
  "c0 c1">&lt;/CLMSG_check&gt;</span></p>

  <p class="c3"><span class=
  "c0 c1">&lt;timestamp&gt;</span><span class=
  "c1">20130305113331</span><span class=
  "c0 c1">&lt;/timestamp&gt;</span></p>

  <p class="c4 c2"><span class=
  "c0 c1">&lt;/xml&gt;<br /></span></p>

  <p><span class="c0">The message elements have the following
  meaning:</span></p>

  <p><span class="c0 c1">&lt;CLMSG_check&gt;</span><span>&#160;The
  plain name of the client.</span></p>

  <p><span class="c0 c1">&lt;timestamp&gt;,
  &lt;macaddress&gt;</span> <span>see</span> <span class=
  "c1">CLMSG_CURRENTLY_LOGGED_IN.</span></p>
  <hr style="page-break-before:always;display:none;" />
  <a href="#" id="id.vafpk0dntk2q" name="id.vafpk0dntk2q"></a>

  <h2 class="c10"><a id="h.p40mxwr1vmxg" name=
  "h.p40mxwr1vmxg"></a><span>Query various information</span></h2>

  <p><span>The si-server manages various databases on behalf of
  GOsa.</span></p>

  <p><span>The message</span> <span class=
  "c1">gosa_query_fai_server</span><span>&#160;returns a list of
  all known Debian software repositories as well as the available
  releases and their sections.</span></p>

  <p><span>The message</span> <span class=
  "c1">gosa_query_fai_release</span><span>&#160;performs a
  parameterized search over the database of FAI classes. It allows
  selection by a variety of criteria.</span></p>

  <p><span>The message</span> <span class=
  "c1">gosa_query_packages_list</span><span>&#160;performs a
  parameterized search over the database of Debian packages. It
  allows selection by a variety of criteria.</span></p>

  <p><span>The message</span> <span class=
  "c1">gosa_get_available_kernel</span><span>&#160;returns a list
  of all available kernels for a certain release.</span></p>

  <p><span>The messages</span> <span class=
  "c1">gosa_show_log_by_mac,
  gosa_show_log_files_by_date_and_mac</span><span>&#160;and</span>
  <span class=
  "c1">gosa_get_log_file_by_date_and_mac</span><span>&#160;are used
  to access the log files from installations/updates stored on the
  server. Note that server-server-communication does not extend to
  log files, so these messages only return those log files sent to
  the particular server via</span> <span class=
  "c1">CLMSG_save_fai_log.</span></p>

  <p><span class="c0">Note:</span></p>

  <p class="c2"><span>The transition of GOsa from accessing LDAP
  directly to using the si-server is very incomplete. In many
  places GOsa does its own LDAP reading and writing and maintains
  its own state. Whenever an operation in GOsa takes very long,
  that is usually the reason.</span></p>
  <hr style="page-break-before:always;display:none;" />

  <h3 class="c16"><a id="h.vnc6qrea3m0g" name=
  "h.vnc6qrea3m0g"></a><span>gosa_query_fai_server</span></h3>

  <p><span class="c0">Purpose:</span></p>

  <p class="c2"><span>GOsa&#11020;Server. Return a list of all
  known Debian software repositories as well as the available
  releases and their sections.</span></p>

  <p class="c12 c2"></p>

  <p><span class="c0">Example message:</span></p>

  <p class="c2"><span class="c0 c1">&lt;xml&gt;</span></p>

  <p class="c5"><span class=
  "c0 c1">&lt;header&gt;</span><span class=
  "c1">gosa_query_fai_server</span><span class=
  "c0 c1">&lt;/header&gt;<br />
  &lt;source&gt;</span><span class="c1">GOSA</span><span class=
  "c0 c1">&lt;/source&gt;</span></p>

  <p class="c5"><span class=
  "c0 c1">&lt;target&gt;</span><span class=
  "c1">GOSA</span><span class="c0 c1">&lt;/target&gt;</span></p>

  <p class="c2"><span class="c0 c1">&lt;/xml&gt;</span></p>

  <p><span class="c0">Example reply:</span></p>

  <p class="c2"><span class="c0 c1">&lt;xml&gt;</span></p>

  <p class="c5"><span class=
  "c0 c1">&lt;header&gt;</span><span class=
  "c1">query_fai_server</span><span class=
  "c0 c1">&lt;/header&gt;</span></p>

  <p class="c5"><span class=
  "c0 c1">&lt;source&gt;</span><span class=
  "c1">172.16.2.143:20081</span><span class=
  "c0 c1">&lt;/source&gt;</span></p>

  <p class="c5"><span class=
  "c0 c1">&lt;target&gt;</span><span class=
  "c1">GOSA</span><span class="c0 c1">&lt;/target&gt;</span></p>

  <p class="c5"><span class="c0 c1">&lt;answer1&gt;</span></p>

  <p class="c9"><span class=
  "c0 c1">&lt;timestamp&gt;</span><span class=
  "c1">20130304093211</span><span class=
  "c0 c1">&lt;/timestamp&gt;</span></p>

  <p class="c9"><span class=
  "c0 c1">&lt;fai_release&gt;</span><span class=
  "c1">halut/2.4.0</span><span class=
  "c0 c1">&lt;/fai_release&gt;</span></p>

  <p class="c9"><span class=
  "c0 c1">&lt;repopath&gt;</span><span class=
  "c1">halut-updates</span><span class=
  "c0 c1">&lt;/repopath&gt;</span></p>

  <p class="c9"><span class="c0 c1">&lt;tag&gt;</span><span class=
  "c1">1154342234048479900</span><span class=
  "c0 c1">&lt;/tag&gt;</span></p>

  <p class="c9"><span class=
  "c0 c1">&lt;server&gt;</span><span class=
  "c1">http://vts-susi.example.de/repo</span><span class=
  "c0 c1">&lt;/server&gt;</span></p>

  <p class="c9"><span class=
  "c0 c1">&lt;sections&gt;</span><span class=
  "c1">main,contrib,non-free,lhm,ff</span><span class=
  "c0 c1">&lt;/sections&gt;</span></p>

  <p class="c5"><span class="c0 c1">&lt;/answer1&gt;</span></p>

  <p class="c9"><span class="c1">...</span></p>

  <p class="c5"><span class=
  "c0 c1">&lt;answerN&gt;</span><span class=
  "c1">...</span><span class="c0 c1">&lt;/answerN&gt;<br />
  &lt;session_id&gt;</span><span class="c1">1105</span><span class=
  "c0 c1">&lt;/session_id&gt;</span></p>

  <p class="c2"><span class="c0 c1">&lt;/xml&gt;</span></p>

  <p class="c12 c2"></p>

  <p><span class="c0">The reply elements have the following
  meaning:</span></p>

  <p><span class="c0">&lt;server&gt;</span><span>&#160;The
  repository URL of the directory that contains the
  directories</span> <span class=
  "c1">dists/</span><span>&#160;and</span> <span class=
  "c1">pool/</span><span>.</span></p>

  <p><span class="c0">&lt;repopath&gt;</span></p>

  <p class="c2"><span>The path relative to the</span> <span class=
  "c1">dists/</span><span>&#160;directory of the directory that
  contains the</span> <span class=
  "c1">Release</span><span>&#160;file.</span></p>

  <p class="c2"><span>If the same server has multiple repository
  paths, each one has its own</span> <span class=
  "c0">&lt;answerX&gt;</span><span>&#160;element.</span></p>

  <p><span class="c0">&lt;fai_release&gt;</span></p>

  <p class="c2"><span>The FAI release to which the repository path
  belongs. Typically there is one repository path with the same
  name as the FAI release and additional repository paths that can
  optionally be used via additional sources.list lines (typical
  examples are</span> <span class=
  "c1">"*-backports"</span><span>&#160;and</span> <span class=
  "c1">"*-updates").</span></p>

  <p><span class="c0">&lt;timestamp&gt;</span><span>&#160;The time
  when go-susi last checked this entry.</span></p>

  <p><span class="c0">&lt;tag&gt;</span><span class=
  "c11">&#160;(optional)</span></p>

  <p class="c2"><span>The gosaUnitTag of the repository server (if
  it has one). The reply may contain servers with different unit
  tags.</span></p>
  <hr style="page-break-before:always;display:none;" />

  <h3 class="c16"><a id="h.1c4dc8mqlioo" name=
  "h.1c4dc8mqlioo"></a><span>gosa_query_fai_release</span></h3>

  <p><span class="c0">Purpose:</span></p>

  <p class="c2"><span>GOsa&#11020;Server. Query the FAI classes
  database.</span></p>

  <p><span class="c0">Example message:</span></p>

  <p><span class="c0 c1">&lt;xml&gt;</span></p>

  <p class="c2"><span class=
  "c0 c1">&lt;header&gt;</span><span class=
  "c1">gosa_query_fai_release</span><span class=
  "c0 c1">&lt;/header&gt;<br />
  &lt;target&gt;</span><span class="c1">GOSA</span><span class=
  "c0 c1">&lt;/target&gt;<br />
  &lt;source&gt;</span><span class="c1">GOSA</span><span class=
  "c0 c1">&lt;/source&gt;</span></p>

  <p class="c2"><span class="c0 c1">&lt;where&gt;</span></p>

  <p class="c5"><span class="c0 c1">&lt;clause&gt;</span></p>

  <p class="c9"><span class=
  "c0 c1">&lt;phrase&gt;</span></p><a href="#" id="id.vbpk5t3411tq"
  name="id.vbpk5t3411tq"></a>

  <p class="c18"><span class=
  "c0 c1">&lt;fai_release&gt;</span><span class=
  "c1">plophos/4.1.0</span><span class=
  "c0 c1">&lt;/fai_release&gt;</span></p>

  <p class="c9"><span class="c0 c1">&lt;/phrase&gt;</span></p>

  <p class="c5"><span class="c0 c1">&lt;/clause&gt;</span></p>

  <p class="c2"><span class="c0 c1">&lt;/where&gt;</span></p>

  <p><span class="c0 c1">&lt;/xml&gt;</span></p>

  <p><span class="c0">The message elements have the following
  meaning:</span></p>

  <p><span class="c0">&lt;where&gt;</span></p>

  <p class="c2"><span>The query syntax is the same as for</span>
  <span class="c1">gosa_query_jobdb</span><span>. The available
  column names are</span> <span class=
  "c0">&lt;timestamp&gt;</span><span>,</span> <span class=
  "c0">&lt;fai_release&gt;</span><span>,</span> <span class=
  "c0">&lt;type&gt;</span><span>,</span> <span class=
  "c0">&lt;class&gt;, &lt;tag&gt;</span><span>&#160;and</span>
  <span class="c0">&lt;state&gt;</span><span>. Their meanings are
  described below in the explanation of the reply
  elements.</span></p>

  <p class="c2"><span class="c0">Note:
  &lt;tag&gt;</span><span>&#160;is a go-susi extension. See the
  explanation of the corresponding reply element below.</span></p>

  <p><span class="c0">Example reply:</span></p>

  <p><span class="c0 c1">&lt;xml&gt;</span></p>

  <p class="c2"><span class=
  "c0 c1">&lt;header&gt;</span><span class=
  "c1">query_fai_release</span><span class=
  "c0 c1">&lt;/header&gt;<br />
  &lt;source&gt;</span><span class=
  "c1">172.16.2.143:20081</span><span class=
  "c0 c1">&lt;/source&gt;<br />
  &lt;target&gt;</span><span class="c1">GOSA</span><span class=
  "c0 c1">&lt;/target&gt;<br />
  &lt;answer1&gt;</span></p>

  <p class="c5"><span class=
  "c0 c1">&lt;timestamp&gt;</span><span class=
  "c1">20130304093210</span><span class=
  "c0 c1">&lt;/timestamp&gt;<br />
  &lt;fai_release&gt;</span><span class=
  "c1">plophos/4.1.0</span><span class=
  "c0 c1">&lt;/fai_release&gt;<br />
  &lt;type&gt;</span><span class="c1">FAIscript</span><span class=
  "c0 c1">&lt;/type&gt;<br />
  &lt;class&gt;</span><span class="c1">CLASSNAME</span><span class=
  "c0 c1">&lt;/class&gt;</span></p>

  <p class="c5"><span class="c0 c1">&lt;tag&gt;</span><span class=
  "c1">345</span><span class="c0 c1">&lt;/tag&gt;<br />
  &lt;state&gt;&lt;/state&gt;</span></p>

  <p class="c2"><span class="c0 c1">&lt;/answer1&gt;</span></p>

  <p class="c2"><span class="c0 c1">&lt;answer2&gt;</span></p>

  <p class="c5"><span class=
  "c0 c1">&lt;timestamp&gt;</span><span class=
  "c1">20130304093210</span><span class=
  "c0 c1">&lt;/timestamp&gt;<br />
  &lt;fai_release&gt;</span><span class=
  "c1">plophos/4.1.0</span><span class=
  "c0 c1">&lt;/fai_release&gt;<br />
  &lt;type&gt;</span><span class=
  "c1">FAItemplate</span><span class="c0 c1">&lt;/type&gt;<br />
  &lt;class&gt;</span><span class="c1">CLASSNAME</span><span class=
  "c0 c1">&lt;/class&gt;</span></p>

  <p class="c5"><span class="c0 c1">&lt;tag&gt;</span><span class=
  "c1">934757</span><span class="c0 c1">&lt;/tag&gt;<br />
  &lt;state&gt;&lt;/state&gt;</span></p>

  <p class="c2"><span class="c0 c1">&lt;/answer2&gt;</span></p>

  <p class="c2"><span class="c0 c1">...</span></p>

  <p class="c2"><span class=
  "c0 c1">&lt;answerN&gt;</span><span class=
  "c1">...</span><span class="c0 c1">&lt;/answerN&gt;<br />
  &lt;session_id&gt;</span><span class="c1">1013</span><span class=
  "c0 c1">&lt;/session_id&gt;</span></p>

  <p><span class="c0 c1">&lt;/xml&gt;</span></p>

  <p><span class="c0">The reply elements have the following
  meaning:</span></p>

  <p><span class="c0">&lt;timestamp&gt;</span></p>

  <p class="c2"><span>The time (local server time) when go-susi
  last checked this entry.</span></p>

  <p><span class="c0">&lt;fai_release&gt;</span></p>

  <p class="c2"><span>The release the answer belongs to, i.e. the
  release this class is available in. Only one release is listed
  per answer. If the query requested information for multiple
  releases that offer the same FAI class, each is listed in its own
  answer.</span></p>

  <p><span class="c0">&lt;type&gt;</span></p>

  <p class="c2"><span>The type of the class. Possible values
  are</span> <span class="c1">FAIhook, FAIpackageList,
  FAIpartitionTable, FAIprofile, FAIscript,
  FAItemplate</span><span class=
  "c11">&#160;</span><span>and</span><span class=
  "c11">&#160;</span><span class=
  "c1">FAIvariable</span><span>.<br />
  Only one type is listed per answer element, even if the query
  returns multiple types with the same class name.</span></p>

  <p><span class="c0">&lt;class&gt;</span></p>

  <p class="c2"><span>The name of the FAI class described in the
  answer.</span></p>

  <p><span class="c0">&lt;tag&gt;</span><span class=
  "c11">&#160;(optional)</span></p>

  <p class="c2"><span>The gosaUnitTag of the FAI class (if it has
  one). The reply may contain classes with different unit
  tags.</span></p>

  <p class="c2"><span class="c0">Note:</span><span>&#160;This is a
  go-susi extension. gosa-si-server does not include</span>
  <span class="c0">&lt;tag&gt;</span><span>&#160;in its reply and
  does not support filtering by tag in the</span> <span class=
  "c0">&lt;phrase&gt;</span><span>&#160;element. gosa-si-server
  always reports all FAI classes regardless of their
  gosaUnitTag.</span></p>

  <p><span class="c0">&lt;state&gt;</span> <span>The following
  values are possible:</span></p>

  <p class="c2"><span class="c11">empty
  string:</span><span>&#160;This class has no special
  properties.</span></p>

  <p class="c2"><span class=
  "c1">freeze:</span><span>&#160;modifications to this class via
  GOsa are not permitted.</span></p>

  <p class="c2"><span class=
  "c1">branch:</span><span>&#160;deprecated. go-susi never reports
  this state.</span></p>

  <p><span class="c0">go-susi note:</span></p>

  <p class="c2"><span>In addition to FAI classes actually present
  in LDAP, go-susi reports pseudo-classes for all</span>
  <span class="c1">Repository</span><span>&#160;attributes found in
  the output from</span> <span class=
  "c1">package-list-hook.</span><span>&#160;Refer to the section
  describing that hook for more information.</span></p>

  <p><span class="c0">GOsa note:</span></p>

  <p class="c2"><span>GOsa 2.7 presents all types of FAI class with
  the same name in one integrated entry. If at least one type has
  FAIstate</span> <span class="c1">freeze</span><span>, GOsa will
  present a lock icon with the entry. However the individual parts
  remain independent and if e.g. a</span> <span class=
  "c1">FAIhook</span><span>&#160;of name FOO has state freeze but
  a</span> <span class="c1">FAIscript</span><span>&#160;of name FOO
  doesn&#8217;t, then GOsa permits editing of the</span>
  <span class="c1">FAIscript</span><span>, even though it prevents
  editing of the hook.</span></p>
  <hr style="page-break-before:always;display:none;" />

  <h3 class="c16"><a id="h.k0ukjz6z8za5" name=
  "h.k0ukjz6z8za5"></a><span>gosa_query_packages_list</span></h3>

  <p><span class="c0">Purpose:</span></p>

  <p class="c2"><span>GOsa&#11020;Server. Query the Debian packages
  database.</span></p>

  <p><span class="c0">Example message:</span></p>

  <p><span class="c0 c1">&lt;xml&gt;</span></p>

  <p class="c2"><span class=
  "c0 c1">&lt;header&gt;</span><span class=
  "c1">gosa_query_packages_list</span><span class=
  "c0 c1">&lt;/header&gt;<br />
  &lt;target&gt;</span><span class="c1">GOSA</span><span class=
  "c0 c1">&lt;/target&gt;<br />
  &lt;source&gt;</span><span class="c1">GOSA</span><span class=
  "c0 c1">&lt;/source&gt;</span></p>

  <p class="c2"><span class=
  "c0 c1">&lt;select&gt;</span><span class=
  "c1">distribution</span><span class=
  "c0 c1">&lt;/select&gt;</span></p>

  <p class="c2"><span class=
  "c0 c1">&lt;select&gt;</span><span class=
  "c1">package</span><span class="c0 c1">&lt;/select&gt;</span></p>

  <p class="c2"><span class=
  "c0 c1">&lt;select&gt;</span><span class=
  "c1">version</span><span class="c0 c1">&lt;/select&gt;</span></p>

  <p class="c2"><span class=
  "c0 c1">&lt;select&gt;</span><span class=
  "c1">section</span><span class="c0 c1">&lt;/select&gt;</span></p>

  <p class="c2"><span class=
  "c0 c1">&lt;select&gt;</span><span class=
  "c1">description</span><span class=
  "c0 c1">&lt;/select&gt;</span></p>

  <p class="c2"><span class=
  "c0 c1">&lt;select&gt;</span><span class=
  "c1">timestamp</span><span class=
  "c0 c1">&lt;/select&gt;</span></p>

  <p class="c2"><span class=
  "c0 c1">&lt;select&gt;</span><span class=
  "c1">template</span><span class=
  "c0 c1">&lt;/select&gt;</span></p>

  <p class="c2"><span class="c0 c1">&lt;where&gt;</span></p>

  <p class="c5"><span class="c0 c1">&lt;clause&gt;</span></p>

  <p class="c9"><span class="c0 c1">&lt;phrase&gt;</span></p>

  <p class="c18"><span class=
  "c0 c1">&lt;distribution&gt;</span><span class=
  "c1">plophos</span><span class=
  "c0 c1">&lt;/distribution&gt;</span></p>

  <p class="c9"><span class="c0 c1">&lt;/phrase&gt;</span></p>

  <p class="c5"><span class="c0 c1">&lt;/clause&gt;</span></p>

  <p class="c5"><span class="c0 c1">&lt;clause&gt;</span></p>

  <p class="c9"><span class=
  "c0 c1">&lt;connector&gt;</span><span class=
  "c1">OR</span><span class="c0 c1">&lt;/connector&gt;</span></p>

  <p class="c9"><span class="c0 c1">&lt;phrase&gt;</span></p>

  <p class="c18"><span class=
  "c0 c1">&lt;operator&gt;</span><span class=
  "c1">like</span><span class="c0 c1">&lt;/operator&gt;</span></p>

  <p class="c18"><span class=
  "c0 c1">&lt;package&gt;</span><span class=
  "c1">srv-customize-default-parent-servers</span><span class=
  "c0 c1">&lt;/package&gt;</span></p>

  <p class="c9"><span class="c0 c1">&lt;/phrase&gt;</span></p>

  <p class="c9"><span class="c0 c1">&lt;phrase&gt;</span></p>

  <p class="c18"><span class=
  "c0 c1">&lt;operator&gt;</span><span class=
  "c1">like</span><span class="c0 c1">&lt;/operator&gt;</span></p>

  <p class="c18"><span class=
  "c0 c1">&lt;package&gt;</span><span class=
  "c1">srv-reprepro-statt-debmirror</span><span class=
  "c0 c1">&lt;/package&gt;</span></p>

  <p class="c9"><span class="c0 c1">&lt;/phrase&gt;</span></p>

  <p class="c5"><span class="c0 c1">&lt;/clause&gt;</span></p>

  <p class="c2"><span class="c0 c1">&lt;/where&gt;</span></p>

  <p><span class="c0 c1">&lt;/xml&gt;</span></p>

  <p><span class="c0">The message elements have the following
  meaning:</span></p>

  <p><span class="c0">&lt;where&gt;</span> <span class=
  "c11">(exactly 1)</span><span>&#160;</span></p>

  <p class="c2"><span>The query syntax is the same as for</span>
  <span class="c1">gosa_query_jobdb</span><span>. The available
  column names are</span> <span class=
  "c0">&lt;distribution&gt;</span><span>,</span> <span class=
  "c0">&lt;package&gt;</span><span>,</span> <span class=
  "c0">&lt;version&gt;</span><span>,</span> <span class=
  "c0">&lt;section&gt;, &lt;description&gt;</span><span>,</span>
  <span class="c0">&lt;timestamp&gt;</span><span>&#160;and</span>
  <span class="c0">&lt;template&gt;</span><span>. Their meanings
  are described below in the explanation of the reply
  elements.</span></p>

  <p><span class=
  "c0">&lt;select&gt;</span><span>&#160;</span><span class="c11">(0
  or more)</span></p>

  <p class="c2"><span>Each</span> <span class=
  "c0">&lt;select&gt;</span><span>&#160;element contains the name
  of a column that should be returned for each answer matching the
  query. If there is no</span> <span class=
  "c0">&lt;select&gt;</span><span>&#160;element, all columns are to
  be returned.</span></p>

  <p class="c2"><span class="c0">Note:</span></p>

  <p class="c5"><span>At this time go-susi ignores</span>
  <span class="c0">&lt;select&gt;</span><span>&#160;and will always
  return all columns.</span></p>
  <hr style="page-break-before:always;display:none;" />

  <p><span class="c0">Example reply:</span></p>

  <p><span class="c0 c1">&lt;xml&gt;</span></p>

  <p class="c2"><span class=
  "c0 c1">&lt;header&gt;</span><span class=
  "c1">query_packages_list</span><span class=
  "c0 c1">&lt;/header&gt;<br />
  &lt;source&gt;</span><span class=
  "c1">172.16.2.143:20081</span><span class=
  "c0 c1">&lt;/source&gt;<br />
  &lt;target&gt;</span><span class="c1">GOSA</span><span class=
  "c0 c1">&lt;/target&gt;<br />
  &lt;answer1&gt;</span></p>

  <p class="c2"><span class="c0 c1">&#160; &#160;
  &lt;timestamp&gt;</span><span class=
  "c1">20130317185123</span><span class=
  "c0 c1">&lt;/timestamp&gt;</span></p>

  <p class="c2"><span class="c0 c1">&#160; &#160;
  &lt;distribution&gt;</span><span class=
  "c1">plophos</span><span class=
  "c0 c1">&lt;/distribution&gt;</span></p>

  <p class="c2"><span class="c0 c1">&#160; &#160;
  &lt;package&gt;</span><span class=
  "c1">srv-customize-default-parent-servers</span><span class=
  "c0 c1">&lt;/package&gt;</span></p>

  <p class="c2"><span class="c0 c1">&#160; &#160;
  &lt;version&gt;</span><span class="c1">1.0</span><span class=
  "c0 c1">&lt;/version&gt;</span></p>

  <p class="c2"><span class="c0 c1">&#160; &#160;
  &lt;section&gt;</span><span class=
  "c1">updates/misc</span><span class=
  "c0 c1">&lt;/section&gt;</span></p>

  <p class="c2"><span class="c0 c1">&#160; &#160;
  &lt;description&gt;</span><span class=
  "c1">VWViZXIgZGViY29uZ...dlc2V0enQ=</span><span class=
  "c0 c1">&lt;/description&gt;</span></p>

  <p class="c2"><span class="c0 c1">&#160; &#160;
  &lt;template&gt;</span><span class=
  "c1">ClRlbXBsYXRlOi...wgdXNlCgo=</span><span class=
  "c0 c1">&lt;/template&gt;</span></p>

  <p class="c2"><span class="c0 c1">&lt;/answer1&gt;</span></p>

  <p class="c2"><span class="c0 c1">&lt;answer2&gt;</span></p>

  <p class="c2"><span class="c0 c1">&#160; &#160;
  &lt;timestamp&gt;</span><span class=
  "c1">20130317185123</span><span class=
  "c0 c1">&lt;/timestamp&gt;</span></p>

  <p class="c2"><span class="c0 c1">&#160; &#160;
  &lt;distribution&gt;</span><span class=
  "c1">plophos</span><span class=
  "c0 c1">&lt;/distribution&gt;</span></p>

  <p class="c2"><span class="c0 c1">&#160; &#160;
  &lt;package&gt;</span><span class=
  "c1">srv-reprepro-statt-debmirror</span><span class=
  "c0 c1">&lt;/package&gt;</span></p>

  <p class="c2"><span class="c0 c1">&#160; &#160;
  &lt;version&gt;</span><span class="c1">1.6</span><span class=
  "c0 c1">&lt;/version&gt;</span></p>

  <p class="c2"><span class="c0 c1">&#160; &#160;
  &lt;section&gt;</span><span class=
  "c1">updates/misc</span><span class=
  "c0 c1">&lt;/section&gt;</span></p>

  <p class="c2"><span class="c0 c1">&#160; &#160;
  &lt;description&gt;</span><span class=
  "c1">QWVuZGVyd...bmRldCB3aXJkLg==</span><span class=
  "c0 c1">&lt;/description&gt;</span></p>

  <p class="c2"><span class="c0 c1">&#160; &#160;
  &lt;template&gt;&lt;/template&gt;</span></p>

  <p class="c2"><span class="c0 c1">&lt;/answer2&gt;</span></p>

  <p class="c2"><span class="c0 c1">...</span></p>

  <p class="c2"><span class=
  "c0 c1">&lt;answerN&gt;</span><span class=
  "c1">...</span><span class="c0 c1">&lt;/answerN&gt;<br />
  &lt;session_id&gt;</span><span class="c1">1013</span><span class=
  "c0 c1">&lt;/session_id&gt;</span></p>

  <p><span class="c0 c1">&lt;/xml&gt;</span></p>

  <p><span class="c0">The reply elements have the following
  meaning:</span></p>

  <p><span class="c0">&lt;timestamp&gt;</span><span>The time (local
  server time) when go-susi last updated the packages
  database.</span></p>

  <p><span class="c0">&lt;distribution&gt;</span></p>

  <p class="c2"><span>The release the answer belongs to, i.e. the
  release the package is available in. Only one release is listed
  per answer. If the query requested information for multiple
  releases that include the same package, each is listed in its own
  answer.</span></p>

  <p><span class="c0">&lt;package&gt;</span><span>&#160;The name of
  the package described by the</span> <span class=
  "c0">&lt;answerX&gt;</span><span>&#160;element.</span></p>

  <p><span class="c0">&lt;version&gt;</span></p>

  <p class="c2"><span>&#160;The version of the package. A package
  may exist in multiple versions even within the same distribution.
  In that case each version will have its own</span> <span class=
  "c0">&lt;answerX&gt;</span><span>&#160;element.</span></p>

  <p><span class="c0">&lt;section&gt;</span><span>Guess
  what.</span></p>

  <p><span class="c0">&lt;description&gt;</span></p>

  <p class="c2"><span>The base64 encoding of the short description
  of the package, i.e. the text from the Debian</span> <span class=
  "c1">control</span><span>&#160;file that starts after</span>
  <span class="c1">"Description:"</span><span>&#160;and extends to
  the end of the line. Neither</span> <span class=
  "c1">"Description:"</span><span>&#160;nor the newline at the end
  of the line are included in the</span> <span class=
  "c0">&lt;description&gt;</span><span>&#160;element.</span></p>

  <p><span class="c0">&lt;template&gt;</span></p>

  <p class="c2"><span>If the Debian package has a</span>
  <span class="c1">templates</span><span>&#160;file describing
  debconf-parameters, the</span> <span class=
  "c0">&lt;template&gt;</span><span>&#160;element contains this
  file in its entirety encoded in base64.</span></p>

  <p><span class="c0">gosa-si-server note:</span></p>

  <p class="c2"><span>As always gosa-si-server inserts spurious
  whitespace into the base64 encodings.</span></p>
  <hr style="page-break-before:always;display:none;" />

  <h3 class="c16"><a id="h.3ws61p27du89" name=
  "h.3ws61p27du89"></a><span>gosa_get_available_kernel</span></h3>

  <p><span class="c0">Purpose:</span></p>

  <p class="c2"><span>GOsa&#11020;Server. Return a list of all
  available kernels for a certain release.</span></p>

  <p class="c2"><span>go-susi generates this list from the output
  of an external program specified by the configuration
  option</span> <span class=
  "c1">kernel-list-hook.</span><span>&#160;The default is</span>
  <span class=
  "c1">/usr/lib/go-susi/generate_kernel_list.</span></p>

  <p class="c12 c2"></p>

  <p><span class="c0">Example message:</span></p>

  <p class="c2"><span class="c0 c1">&lt;xml&gt;</span></p>

  <p class="c5"><span class=
  "c0 c1">&lt;header&gt;</span><span class=
  "c1">gosa_get_available_kernel</span><span class=
  "c0 c1">&lt;/header&gt;</span></p>

  <p class="c5"><span class=
  "c0 c1">&lt;source&gt;</span><span class=
  "c1">GOSA</span><span class="c0 c1">&lt;/source&gt;</span></p>

  <p class="c5"><span class=
  "c0 c1">&lt;target&gt;</span><span class=
  "c1">GOSA</span><span class="c0 c1">&lt;/target&gt;</span></p>

  <p class="c5"><span class=
  "c0 c1">&lt;fai_release&gt;</span><span class=
  "c1">plophos/4.1.0</span><span class=
  "c0 c1">&lt;/fai_release&gt;</span></p>

  <p class="c2"><span class="c0 c1">&lt;/xml&gt;</span></p>

  <p><span class="c0">Example reply:</span></p>

  <p class="c2"><span class="c0 c1">&lt;xml&gt;</span></p>

  <p class="c5"><span class=
  "c0 c1">&lt;header&gt;</span><span class=
  "c1">get_available_kernel</span><span class=
  "c0 c1">&lt;/header&gt;</span></p>

  <p class="c5"><span class=
  "c0 c1">&lt;source&gt;</span><span class=
  "c1">172.16.2.143:20081</span><span class=
  "c0 c1">&lt;/source&gt;</span></p>

  <p class="c5"><span class=
  "c0 c1">&lt;target&gt;</span><span class=
  "c1">GOSA</span><span class="c0 c1">&lt;/target&gt;</span></p>

  <p class="c5"><span class=
  "c0 c1">&lt;session_id&gt;</span><span class=
  "c1">899</span><span class="c0 c1">&lt;/session_id&gt;</span></p>

  <p class="c5"><span class=
  "c0 c1">&lt;get_available_kernel&gt;&lt;/get_available_kernel&gt;</span></p>

  <p class="c5"><span class=
  "c0 c1">&lt;answer1&gt;</span><span class=
  "c1">vmlinuz-2.6.32-44-generic</span><span class=
  "c0 c1">&lt;/answer1&gt;</span></p>

  <p class="c5"><span class=
  "c0 c1">&lt;answer2&gt;</span><span class=
  "c1">vmlinuz-3.2.0-24-generic</span><span class=
  "c0 c1">&lt;/answer2&gt;</span></p>

  <p class="c5"><span class="c0 c1">&#160;...</span></p>

  <p class="c5"><span class=
  "c0 c1">&lt;answerN&gt;</span><span class=
  "c1">default</span><span class=
  "c0 c1">&lt;/answerN&gt;</span></p>

  <p class="c2"><span class="c0 c1">&lt;/xml&gt;</span></p>
  <hr style="page-break-before:always;display:none;" />

  <h3 class="c16 c23"><a id="h.28xo9vfahju" name=
  "h.28xo9vfahju"></a></h3>

  <h3 class="c16"><a id="h.n4mrnc8f9h1c" name=
  "h.n4mrnc8f9h1c"></a><span>gosa_show_log_by_mac</span></h3>

  <p><span class="c0">Purpose:</span></p>

  <p class="c2"><span>GOsa&#11020;Server. Returns all
  subdirectories of log files within the log file directory of the
  machine selected by the</span> <span class=
  "c0">&lt;mac&gt;</span><span>&#160;element. The MAC address is
  case-insensitive.</span></p>

  <p class="c12 c2"></p>

  <p><span class="c0">Example message:</span></p>

  <p><span class="c0 c1">&lt;xml&gt;</span></p>

  <p><span class="c0 c1">&#160; &lt;header&gt;</span><span class=
  "c1">gosa_show_log_by_mac</span><span class=
  "c0 c1">&lt;/header&gt;</span></p>

  <p><span class="c0 c1">&#160; &lt;target&gt;</span><span class=
  "c1">GOSA</span><span class="c0 c1">&lt;/target&gt;</span></p>

  <p><span class="c0 c1">&#160; &lt;source&gt;</span><span class=
  "c1">GOSA</span><span class="c0 c1">&lt;/source&gt;</span></p>

  <p><span class="c0 c1">&#160; &lt;mac&gt;</span><span class=
  "c1">00:16:36:7c:db:3f</span><span class=
  "c0 c1">&lt;/mac&gt;</span></p>

  <p><span class="c0 c1">&lt;/xml&gt;</span></p>

  <p><span class="c0">Example reply:</span></p>

  <p><span class="c0 c1">&lt;xml&gt;</span></p>

  <p class="c2"><span class=
  "c0 c1">&lt;header&gt;</span><span class=
  "c1">show_log_by_mac</span><span class=
  "c0 c1">&lt;/header&gt;</span></p>

  <p class="c2"><span class=
  "c0 c1">&lt;source&gt;</span><span class=
  "c1">172.16.2.143:20081</span><span class=
  "c0 c1">&lt;/source&gt;</span></p>

  <p class="c2"><span class=
  "c0 c1">&lt;target&gt;</span><span class=
  "c1">GOSA</span><span class="c0 c1">&lt;/target&gt;</span></p>

  <p class="c2"><span class=
  "c0 c1">&lt;mac_00_16_36_7c_db_3f&gt;</span><span class=
  "c1">install_20130304_112529</span><span class=
  "c0 c1">&lt;/mac_00_16_36_7c_db_3f&gt;</span></p>

  <p class="c2"><span class=
  "c0 c1">&lt;mac_00_16_36_7c_db_3f&gt;</span><span class=
  "c1">softupdate_20130207_155242</span><span class=
  "c0 c1">&lt;/mac_00_16_36_7c_db_3f&gt;</span></p>

  <p class="c2"><span class="c0 c1">...</span></p>

  <p class="c2"><span class=
  "c0 c1">&lt;show_log_by_mac&gt;&lt;/show_log_by_mac&gt;</span></p>

  <p class="c2"><span class=
  "c0 c1">&lt;session_id&gt;</span><span class=
  "c1">260</span><span class="c0 c1">&lt;/session_id&gt;</span></p>

  <p><span class="c0 c1">&lt;/xml&gt;</span></p>

  <p><span class="c0">The reply elements have the following
  meaning:</span></p>

  <p><span class="c0">&lt;mac_...&gt;</span></p>

  <p class="c2"><span>This element corresponds to the</span>
  <span class="c0">&lt;mac&gt;</span><span>&#160;element in the
  request, but is always lowercase, even if the MAC address
  in</span> <span class="c0">&lt;mac&gt;</span><span>&#160;was
  not.</span></p>

  <p class="c2"><span>For each subdirectory in the system&#8217;s
  log directory there is one element.</span></p>

  <p class="c2"><span>If no log files are available, the answer
  will not contain any</span> <span class=
  "c0">&lt;mac...&gt;</span><span>&#160;elements.</span></p>
  <hr style="page-break-before:always;display:none;" />

  <p class="c12 c2"></p>

  <h3 class="c16"><a id="h.mgjs4al2n8iv" name=
  "h.mgjs4al2n8iv"></a><span>gosa_show_log_files_by_date_and_mac</span></h3>

  <p><span class="c0">Purpose:</span></p>

  <p class="c2"><span>GOsa&#11020;Server. Get the list of log files
  contained in a specific subdirectory of a machine&#8217;s log
  file directory.</span></p>

  <p class="c12 c2"></p>

  <p><span class="c0">Example message:</span></p>

  <p><span class="c0 c1">&lt;xml&gt;</span></p>

  <p class="c2"><span class=
  "c0 c1">&lt;header&gt;</span><span class=
  "c1">gosa_show_log_files_by_date_and_mac</span><span class=
  "c0 c1">&lt;/header&gt;<br />
  &lt;target&gt;</span><span class="c1">GOSA</span><span class=
  "c0 c1">&lt;/target&gt;<br />
  &lt;source&gt;</span><span class="c1">GOSA</span><span class=
  "c0 c1">&lt;/source&gt;<br />
  &lt;date&gt;</span><span class=
  "c1">softupdate_20130207_151808</span><span class=
  "c0 c1">&lt;/date&gt;<br />
  &lt;mac&gt;</span><span class=
  "c1">00:0c:29:50:a3:52</span><span class=
  "c0 c1">&lt;/mac&gt;</span></p>

  <p><span class="c0 c1">&lt;/xml&gt;</span></p>

  <p><span class="c0">The message elements have the following
  meaning:</span></p>

  <p><span class="c0">&lt;mac&gt;</span><span>&#160;The MAC address
  (case-insensitive) of the machine for which to list log
  files.</span></p>

  <p><span class="c0">&lt;date&gt;</span><span>&#160;The
  subdirectory name within the machine&#8217;s log file
  directory.</span></p>

  <p><span class="c0">Example
  reply:</span><span><br /></span><span class=
  "c0 c1">&lt;xml&gt;</span></p>

  <p class="c2"><span class=
  "c0 c1">&lt;header&gt;</span><span class=
  "c1">show_log_files_by_date_and_mac</span><span class=
  "c0 c1">&lt;/header&gt;</span></p>

  <p class="c2"><span class=
  "c0 c1">&lt;source&gt;</span><span class=
  "c1">172.16.2.143:20081</span><span class=
  "c0 c1">&lt;/source&gt;<br />
  &lt;target&gt;</span><span class="c1">GOSA</span><span class=
  "c0 c1">&lt;/target&gt;<br />
  &lt;show_log_files_by_date_and_mac&gt;</span></p>

  <p class="c2"><span class="c1">&#160; ldap2fai.log</span></p>

  <p class="c2"><span class=
  "c0 c1">&lt;/show_log_files_by_date_and_mac&gt;</span></p>

  <p class="c2"><span class="c0 c1">&#160;</span> <span class=
  "c1">...</span><span class="c0 c1"><br />
  &lt;show_log_files_by_date_and_mac&gt;<br /></span><span class=
  "c1">&#160; shell.log</span></p>

  <p class="c2"><span class=
  "c0 c1">&lt;/show_log_files_by_date_and_mac&gt;<br />
  &lt;session_id&gt;</span><span class="c1">1405</span><span class=
  "c0 c1">&lt;/session_id&gt;</span></p>

  <p class="c2"><span class=
  "c0 c1">&lt;show_log_files_by_date_and_mac&gt;&lt;/show_log_files_by_date_and_mac&gt;</span></p>

  <p><span class="c0 c1">&lt;/xml&gt;</span></p>

  <p><span class="c0">The reply elements have the following
  meaning:</span></p>

  <p><span class=
  "c0">&lt;show_log_files_by_date_and_mac&gt;</span></p>

  <p class="c2"><span>Each of these elements contains the name of
  one of the log files present in the requested
  subdirectory.</span></p>

  <p class="c2"><span class="c0">Note:</span></p>

  <p class="c5"><span>One of the returned</span> <span class=
  "c0">&lt;show_log_files_by_date_and_mac&gt;</span><span>&#160;is
  always empty.</span></p>
  <hr style="page-break-before:always;display:none;" />

  <h3 class="c16"><a id="h.87z05qg5bmin" name=
  "h.87z05qg5bmin"></a><span>gosa_get_log_file_by_date_and_mac</span></h3>

  <p><span class="c0">Purpose:</span></p>

  <p class="c2"><span>GOsa&#11020;Server. Get the contents of a
  specific log file.</span></p>

  <p class="c12 c2"></p>

  <p><span class="c0">Example message:</span></p>

  <p><span class="c0 c1">&lt;xml&gt;</span></p>

  <p class="c2"><span class=
  "c0 c1">&lt;header&gt;</span><span class=
  "c1">gosa_get_log_file_by_date_and_mac</span><span class=
  "c0 c1">&lt;/header&gt;</span></p>

  <p class="c2"><span class=
  "c0 c1">&lt;target&gt;</span><span class=
  "c1">GOSA</span><span class="c0 c1">&lt;/target&gt;</span></p>

  <p class="c2"><span class=
  "c0 c1">&lt;source&gt;</span><span class=
  "c1">GOSA</span><span class="c0 c1">&lt;/source&gt;</span></p>

  <p class="c2"><span class="c0 c1">&lt;date&gt;</span><span class=
  "c1">install_20130204_152626</span><span class=
  "c0 c1">&lt;/date&gt;</span></p>

  <p class="c2"><span class="c0 c1">&lt;mac&gt;</span><span class=
  "c1">00:0c:29:50:a3:52</span><span class=
  "c0 c1">&lt;/mac&gt;</span></p>

  <p class="c2"><span class=
  "c0 c1">&lt;log_file&gt;</span><span class=
  "c1">foo.log</span><span class=
  "c0 c1">&lt;/log_file&gt;</span></p>

  <p><span class="c0 c1">&lt;/xml&gt;</span></p>

  <p><span class="c0">The message elements have the following
  meaning:</span></p>

  <p><span class="c0">&lt;mac&gt;</span><span>&#160;The MAC address
  (case-insensitive) of the machine for which to read a log
  file.</span></p>

  <p><span class="c0">&lt;date&gt;</span><span>&#160;The
  subdirectory name within the machine&#8217;s log file directory
  where the log file is found.</span></p>

  <p><span class="c0">&lt;log_file&gt;</span><span>&#160;The name
  of the log file to return.</span></p>

  <p><span class="c0">Example reply:</span></p>

  <p><span class="c0 c1">&lt;xml&gt;</span></p>

  <p class="c2"><span class=
  "c0 c1">&lt;header&gt;</span><span class=
  "c1">get_log_file_by_date_and_mac</span><span class=
  "c0 c1">&lt;/header&gt;</span></p>

  <p class="c2"><span class=
  "c0 c1">&lt;source&gt;</span><span class=
  "c1">172.16.2.143:20081</span><span class=
  "c0 c1">&lt;/source&gt;</span></p>

  <p class="c2"><span class=
  "c0 c1">&lt;target&gt;</span><span class=
  "c1">GOSA</span><span class="c0 c1">&lt;/target&gt;</span></p>

  <p class="c2"><span class=
  "c0 c1">&lt;foo.log&gt;</span><span class=
  "c1">VXBkY....i4uCg==</span><span class=
  "c0 c1">&lt;/foo.log&gt;</span></p>

  <p class="c2"><span class=
  "c0 c1">&lt;get_log_file_by_date_and_mac&gt;&lt;/get_log_file_by_date_and_mac&gt;</span></p>

  <p class="c2"><span class=
  "c0 c1">&lt;session_id&gt;</span><span class=
  "c1">843</span><span class="c0 c1">&lt;/session_id&gt;</span></p>

  <p><span class="c0 c1">&lt;/xml&gt;</span></p>

  <p><span class="c0">The reply elements have the following
  meaning:</span></p>

  <p><span class="c0">&lt;foo.log&gt;</span></p>

  <p class="c2"><span>The name of the element corresponds to the
  contents of the</span> <span class=
  "c0">&lt;log_file&gt;</span><span>&#160;element in the request.
  The contents are the base64-encoded file contents.</span></p>

  <p><span class="c0">GOsa note:</span></p>

  <p class="c2"><span>When the tab &#8220;installation logs&#8221;
  for a specific machine is accessed for the first time, no log
  file is selected and GOsa creates an incorrect request
  where</span> <span class=
  "c0">&lt;log_file&gt;</span><span>&#160;has the value
  &#8220;0&#8221;. gosa-si-server answers this invalid request with
  a likewise broken reply.</span></p>
  <hr style="page-break-before:always;display:none;" />
  <a href="#" id="id.5uju4li1h33b" name="id.5uju4li1h33b"></a>

  <h2 class="c26"><a id="h.mehsqejmttjq" name=
  "h.mehsqejmttjq"></a><span>Miscellaneous</span></h2>

  <p><span>The messages in this section do not fit nicely in any of
  the other categories.</span></p>

  <h3 class="c16"><a id="h.lysjsrs0l1xj" name=
  "h.lysjsrs0l1xj"></a><span>gosa_ping</span></h3>

  <p><span class="c0">Purpose:</span></p>

  <p class="c2"><span>GOsa&#11020;Server. GOsa uses this message to
  determine if a specific client is on or off. GOsa uses this
  information e.g. to present the action "Wake up" only for clients
  that are off.</span></p>

  <p class="c12 c2"></p>

  <p><span class="c0">Example message:</span></p>

  <p class="c2"><span class="c0 c1">&lt;xml&gt;</span></p>

  <p class="c5"><span class=
  "c0 c1">&lt;header&gt;</span><span class=
  "c1">gosa_ping</span><span class=
  "c0 c1">&lt;/header&gt;</span></p>

  <p class="c5"><span class=
  "c0 c1">&lt;source&gt;</span><span class=
  "c1">GOSA</span><span class="c0 c1">&lt;/source&gt;</span></p>

  <p class="c5"><span class=
  "c0 c1">&lt;target&gt;</span><span class=
  "c1">1c:6f:65:08:b5:4d</span><span class=
  "c0 c1">&lt;/target&gt;</span></p>

  <p class="c2"><span class="c0 c1">&lt;/xml&gt;</span></p>

  <p><span class="c0">Example reply if client is ON:</span></p>

  <p class="c2"><span class="c0 c1">&lt;xml&gt;</span></p>

  <p class="c5"><span class=
  "c0 c1">&lt;header&gt;</span><span class=
  "c1">got_new_ping</span><span class=
  "c0 c1">&lt;/header&gt;</span></p>

  <p class="c5"><span class=
  "c0 c1">&lt;got_new_ping&gt;&lt;/got_new_ping&gt;</span></p>

  <p class="c5"><span class=
  "c0 c1">&lt;source&gt;</span><span class=
  "c1">12.34.56.78:20083</span><span class=
  "c0 c1">&lt;/source&gt;</span></p>

  <p class="c5"><span class=
  "c0 c1">&lt;target&gt;</span><span class=
  "c1">1.2.3.4:20081</span><span class=
  "c0 c1">&lt;/target&gt;</span></p>

  <p class="c2"><span class="c0 c1">&lt;/xml&gt;</span></p>

  <p><span class="c0">Reply if client is OFF:</span></p>

  <p class="c2"><span>If the client is off, the si-server closes
  the connection without reply.</span></p>

  <p><span class="c0">GOsa notes:</span></p>

  <p class="c2"><span>GOsa only checks if there is a reply but
  ignores the contents. This means even an error reply will be
  interpreted as the client being on.</span></p>

  <p class="c12 c2"></p>

  <p><span class="c0">go-susi note:</span></p>

  <p class="c2"><span>go-susi does not actually ping the client and
  wait for a pong. go-susi only checks if it can connect to the
  si-client port. This eliminates the need for server-server
  communication in case the client is registered at a peer and
  improves GOsa performance compared to the use of
  gosa-si-server.</span></p>

  <h3><a id="h.sp869tnshz6d" name=
  "h.sp869tnshz6d"></a><span>panic</span></h3>

  <p class="c4"><span class="c0">Purpose:</span></p>

  <p class="c4 c2"><span>Admin&#10132;Server. Causes go-susi to
  abort with a full stack trace of all running goroutines. This
  function is go-susi specific and useful only for
  debugging.</span></p>

  <p class="c4 c12"></p>

  <p class="c4"><span class="c0">Example message:</span></p>

  <p class="c4 c2"><span class="c0 c1">&lt;xml&gt;</span></p>

  <p class="c3"><span class=
  "c0 c1">&lt;header&gt;</span><span class=
  "c1">panic</span><span class="c0 c1">&lt;/header&gt;</span></p>

  <p class="c4 c2"><span class="c0 c1">&lt;/xml&gt;</span></p>
  <hr style="page-break-before:always;display:none;" />

  <h3><a id="h.1f6kgewdm74c" name=
  "h.1f6kgewdm74c"></a><span>sistats</span></h3>

  <p class="c4"><span class="c0">Purpose:</span></p>

  <p class="c4 c2"><span>Admin&#10132;Server. Query various
  statistics about go-susi's operation. This function is go-susi
  specific.</span></p>

  <p class="c4 c12 c2"></p>

  <p class="c4"><span class="c0">Example message:</span></p>

  <p class="c4 c2"><span class="c0 c1">&lt;xml&gt;</span></p>

  <p class="c3"><span class=
  "c0 c1">&lt;header&gt;</span><span class=
  "c1">sistats</span><span class="c0 c1">&lt;/header&gt;</span></p>

  <p class="c4 c2"><span class="c0 c1">&lt;/xml&gt;</span></p>

  <p class="c4 c12 c2"></p>

  <p class="c4"><span class="c0">Example reply:</span></p>

  <p class="c4 c2"><span class="c0 c1">&lt;xml&gt;</span></p>

  <p class="c3"><span class=
  "c0 c1">&lt;header&gt;</span><span class=
  "c1">answer</span><span class="c0 c1">&lt;/header&gt;</span></p>

  <p class="c3"><span class=
  "c0 c1">&lt;source&gt;</span><span class=
  "c1">10.10.10.8:20081</span><span class=
  "c0 c1">&lt;/source&gt;</span></p>

  <p class="c3"><span class=
  "c0 c1">&lt;target&gt;</span><span class=
  "c1">GOSA</span><span class="c0 c1">&lt;/target&gt;</span></p>

  <p class="c3"><span class="c0 c1">&lt;answer1&gt;</span></p>

  <p class="c4 c9"><span class="c0 c1">&#160; &#160;
  &lt;Alloc&gt;</span><span class="c1">788080</span><span class=
  "c0 c1">&lt;/Alloc&gt;</span></p>

  <p class="c4 c9"><span class="c0 c1">&#160; &#160;
  &lt;Architecture&gt;</span><span class=
  "c1">386</span><span class="c0 c1">&lt;/Architecture&gt;</span></p>

  <p class="c4 c9"><span class="c0 c1">&#160; &#160;
  &lt;BuckHashSys&gt;</span><span class="c1">0</span><span class=
  "c0 c1">&lt;/BuckHashSys&gt;</span></p>

  <p class="c4 c9"><span class="c0 c1">&#160; &#160;
  &lt;Compiler&gt;</span><span class="c1">gc</span><span class=
  "c0 c1">&lt;/Compiler&gt;</span></p>

  <p class="c4 c9"><span class="c0 c1">&#160; &#160;
  &lt;DebugGC&gt;</span><span class="c1">false</span><span class=
  "c0 c1">&lt;/DebugGC&gt;</span></p>

  <p class="c4 c9"><span class="c0 c1">&#160; &#160;
  &lt;EnableGC&gt;</span><span class="c1">true</span><span class=
  "c0 c1">&lt;/EnableGC&gt;</span></p>

  <p class="c4 c9"><span class="c0 c1">&#160; &#160;
  &lt;Frees&gt;</span><span class="c1">337</span><span class=
  "c0 c1">&lt;/Frees&gt;</span></p>

  <p class="c4 c9"><span class="c0 c1">&#160; &#160;
  &lt;Go-Version&gt;</span><span class=
  "c1">go1.0.2</span><span class=
  "c0 c1">&lt;/Go-Version&gt;</span></p>

  <p class="c4 c9"><span class="c0 c1">&#160; &#160;
  &lt;HeapAlloc&gt;</span><span class=
  "c1">788080</span><span class="c0 c1">&lt;/HeapAlloc&gt;</span></p>

  <p class="c4 c9"><span class="c0 c1">&#160; &#160;
  &lt;HeapIdle&gt;</span><span class="c1">36864</span><span class=
  "c0 c1">&lt;/HeapIdle&gt;</span></p>

  <p class="c4 c9"><span class="c0 c1">&#160; &#160;
  &lt;HeapInuse&gt;</span><span class=
  "c1">1011712</span><span class=
  "c0 c1">&lt;/HeapInuse&gt;</span></p>

  <p class="c4 c9"><span class="c0 c1">&#160; &#160;
  &lt;HeapObjects&gt;</span><span class=
  "c1">2440</span><span class="c0 c1">&lt;/HeapObjects&gt;</span></p>

  <p class="c4 c9"><span class="c0 c1">&#160; &#160;
  &lt;HeapReleased&gt;</span><span class="c1">0</span><span class=
  "c0 c1">&lt;/HeapReleased&gt;</span></p>

  <p class="c4 c9"><span class="c0 c1">&#160; &#160;
  &lt;HeapSys&gt;</span><span class="c1">1048576</span><span class=
  "c0 c1">&lt;/HeapSys&gt;</span></p>

  <p class="c4 c9"><span class="c0 c1">&#160; &#160;
  &lt;LastGC&gt;</span><span class=
  "c1">1352903012604979000</span><span class=
  "c0 c1">&lt;/LastGC&gt;</span></p>

  <p class="c4 c9"><span class="c0 c1">&#160; &#160;
  &lt;Lookups&gt;</span><span class="c1">167</span><span class=
  "c0 c1">&lt;/Lookups&gt;</span></p>

  <p class="c4 c9"><span class="c0 c1">&#160; &#160;
  &lt;MCacheInuse&gt;</span><span class=
  "c1">10656</span><span class=
  "c0 c1">&lt;/MCacheInuse&gt;</span></p>

  <p class="c4 c9"><span class="c0 c1">&#160; &#160;
  &lt;MCacheSys&gt;</span><span class=
  "c1">131072</span><span class="c0 c1">&lt;/MCacheSys&gt;</span></p>

  <p class="c4 c9"><span class="c0 c1">&#160; &#160;
  &lt;MSpanInuse&gt;</span><span class="c1">5044</span><span class=
  "c0 c1">&lt;/MSpanInuse&gt;</span></p>

  <p class="c4 c9"><span class="c0 c1">&#160; &#160;
  &lt;MSpanSys&gt;</span><span class="c1">131072</span><span class=
  "c0 c1">&lt;/MSpanSys&gt;</span></p>

  <p class="c4 c9"><span class="c0 c1">&#160; &#160;
  &lt;Mallocs&gt;</span><span class="c1">2777</span><span class=
  "c0 c1">&lt;/Mallocs&gt;</span></p>

  <p class="c4 c9"><span class="c0 c1">&#160; &#160;
  &lt;NextGC&gt;</span><span class="c1">967232</span><span class=
  "c0 c1">&lt;/NextGC&gt;</span></p>

  <p class="c4 c9"><span class="c0 c1">&#160; &#160;
  &lt;NumCPU&gt;</span><span class="c1">2</span><span class=
  "c0 c1">&lt;/NumCPU&gt;</span></p>

  <p class="c4 c9"><span class="c0 c1">&#160; &#160;
  &lt;NumGC&gt;</span><span class="c1">2</span><span class=
  "c0 c1">&lt;/NumGC&gt;</span></p>

  <p class="c4 c9"><span class="c0 c1">&#160; &#160;
  &lt;NumGoroutine&gt;</span><span class="c1">12</span><span class=
  "c0 c1">&lt;/NumGoroutine&gt;</span></p>

  <p class="c4 c9"><span class="c0 c1">&#160; &#160;
  &lt;OS&gt;</span><span class="c1">linux</span><span class=
  "c0 c1">&lt;/OS&gt;</span></p>

  <p class="c4 c9"><span class="c0 c1">&#160; &#160;
  &lt;PauseTotalNs&gt;</span><span class=
  "c1">1071000</span><span class=
  "c0 c1">&lt;/PauseTotalNs&gt;</span></p>

  <p class="c4 c9"><span class="c0 c1">&#160; &#160;
  &lt;Revision&gt;</span><span class=
  "c1">48f6d79cc053</span><span class=
  "c0 c1">&lt;/Revision&gt;</span></p>

  <p class="c4 c9"><span class="c0 c1">&#160; &#160;
  &lt;StackInuse&gt;</span><span class=
  "c1">49152</span><span class="c0 c1">&lt;/StackInuse&gt;</span></p>

  <p class="c4 c9"><span class="c0 c1">&#160; &#160;
  &lt;StackSys&gt;</span><span class="c1">655360</span><span class=
  "c0 c1">&lt;/StackSys&gt;</span></p>

  <p class="c4 c9"><span class="c0 c1">&#160; &#160;
  &lt;Sys&gt;</span><span class="c1">3145728</span><span class=
  "c0 c1">&lt;/Sys&gt;</span></p>

  <p class="c4 c9"><span class="c0 c1">&#160; &#160;
  &lt;TotalAlloc&gt;</span><span class=
  "c1">833976</span><span class=
  "c0 c1">&lt;/TotalAlloc&gt;</span></p>

  <p class="c4 c9"><span class="c0 c1">&#160; &#160;
  &lt;Version&gt;</span><span class="c1">1.0.0</span><span class=
  "c0 c1">&lt;/Version&gt;</span></p>

  <p class="c4 c9"><span class="c0 c1">&#160; &#160;
  &lt;mallinfo_arena&gt;</span><span class=
  "c1">1048576</span><span class=
  "c0 c1">&lt;/mallinfo_arena&gt;</span></p>

  <p class="c4 c9"><span class="c0 c1">&#160; &#160;
  &lt;mallinfo_fordblks&gt;</span><span class=
  "c1">1033272</span><span class=
  "c0 c1">&lt;/mallinfo_fordblks&gt;</span></p>

  <p class="c4 c9"><span class="c0 c1">&#160; &#160;
  &lt;mallinfo_hblkhd&gt;</span><span class=
  "c1">0</span><span class=
  "c0 c1">&lt;/mallinfo_hblkhd&gt;</span></p>

  <p class="c4 c9"><span class="c0 c1">&#160; &#160;
  &lt;mallinfo_hblks&gt;</span><span class=
  "c1">0</span><span class="c0 c1">&lt;/mallinfo_hblks&gt;</span></p>

  <p class="c4 c9"><span class="c0 c1">&#160; &#160;
  &lt;mallinfo_keepcost&gt;</span><span class=
  "c1">1029872</span><span class=
  "c0 c1">&lt;/mallinfo_keepcost&gt;</span></p>

  <p class="c4 c9"><span class="c0 c1">&#160; &#160;
  &lt;mallinfo_ordblks&gt;</span><span class=
  "c1">16</span><span class=
  "c0 c1">&lt;/mallinfo_ordblks&gt;</span></p>

  <p class="c4 c9"><span class="c0 c1">&#160; &#160;
  &lt;mallinfo_uordblks&gt;</span><span class=
  "c1">15304</span><span class=
  "c0 c1">&lt;/mallinfo_uordblks&gt;</span></p>

  <p class="c3"><span class="c0 c1">&lt;/answer1&gt;</span></p>

  <p class="c4 c2"><span class="c0 c1">&lt;/xml&gt;</span></p>

  <p class="c4 c12 c2"></p>

  <p class="c4"><span class="c0">The reply elements have the
  following meaning:</span></p>

  <p class="c4 c2"><span>The reply elements are subject to change.
  They are purely for testing and debugging. Most of them are
  either self-explanatory or correspond directly to values from the
  Go runtime (</span><span class="c6"><a class="c8" href=
  "https://www.google.com/url?q=http://golang.org/pkg/runtime/&amp;sa=D&amp;ust=1454670274491000&amp;usg=AFQjCNFC4pe2Epg6koOUD9m5TVZ16Iy5BQ">http://golang.org/pkg/runtime/</a></span><span>).</span></p>

  <p class="c4"><span class="c0">&lt;Version&gt;</span></p>

  <p class="c4 c2"><span>The go-susi version.</span></p>

  <p class="c4"><span class=
  "c0">&lt;SusiPeersUp&gt;</span><span>/</span><span class=
  "c0">&lt;SusiPeersDown&gt;</span></p>

  <p class="c4 c2"><span>Number of working (Up) and non-working
  (Down) peers known to support the go-susi protocol.</span></p>

  <p class="c4"><span class=
  "c0">&lt;NonSusiPeersUp&gt;</span><span>/</span><span class=
  "c0">&lt;NonSusiPeersDown&gt;</span></p>

  <p class="c4 c2"><span>Number of working (Up) and non-working
  (Down) peers that do not use the go-susi protocol.</span></p>

  <p class="c4"><span class="c0">&lt;KnownClients&gt;</span></p>

  <p class="c4 c2"><span>Number of clients the server is aware of,
  including those registered at peers.</span></p>

  <p class="c4"><span class="c0">&lt;MyClientsUp&gt;</span></p>

  <p class="c4 c2"><span>Number of clients registered at this
  server and currently reachable.</span></p>

  <p class="c4"><span class="c0">&lt;MyClientsDown&gt;</span></p>

  <p class="c4 c2"><span>Number of clients registered at this
  server and currently unreachable (probably off).</span></p>

  <p class="c4"><span class=
  "c0">&lt;TotalRegistrations&gt;</span></p>

  <p class="c4 c2"><span>Total number of</span> <span class=
  "c1">here_i_am</span><span>&#160;messages received.</span></p>

  <p class="c4"><span class=
  "c0">&lt;MissedRegistrations&gt;</span></p>

  <p class="c4 c2"><span>Number of</span> <span class=
  "c1">here_i_am</span><span>&#160;messages to which go-susi did
  not manage to reply in less than 8s.</span></p>

  <p class="c4"><span class="c0">&lt;AvgRequestTime&gt;</span></p>

  <p class="c4 c2"><span>Time in nanoseconds go-susi took to
  process requests averaged over the last 100. The time for reading
  the request from the network and writing the reply is not
  included.</span></p>

  <p class="c4"><span class="c0">&lt;mallinfo_arena&gt;</span></p>

  <p class="c4 c2"><span>The number of non-mmap'ed bytes currently
  reserved by malloc-based memory management. This includes memory
  that has already been free()d but not returned to the OS,
  yet.</span></p>

  <p class="c4 c2"><span class="c0">Note:</span> <span>malloc-based
  memory is not managed by the Go runtime and will not be garbage
  collected.</span></p>

  <p class="c4"><span class=
  "c0">&lt;mallinfo_fordblks&gt;</span></p>

  <p class="c4 c2"><span>The number of bytes within</span>
  <span class="c0">&lt;mallinfo_arena&gt;</span><span>&#160;that
  have been free()d. These bytes have not been returned to the OS
  (i.e. they're reported as in-use in the output of top and ps)
  even though they are not actually used by the program. The memory
  management keeps these bytes reserved either because of memory
  fragmentation or to improve performance.</span></p>

  <p class="c4 c2"><span class=
  "c0">Note:</span><span>&#160;If</span> <span class=
  "c0">&lt;mallinfo_arena&gt;</span><span>&#160;and</span>
  <span class="c0">&lt;mallinfo_fordblks&gt;</span> <span>keep
  growing together over the lifetime of the program &#160;this
  means that the program has problems with memory fragmentation.
  It's unlikely you'll ever see this.</span></p>

  <p class="c4 c2"><span>If the difference</span> <span class=
  "c0">&lt;mallinfo_arena&gt;</span><span>&#160;</span><span class=
  "c0">- &lt;mallinfo_fordblks&gt;</span><span>&#160;keeps growing
  over the lifetime of the program this means that the program has
  a memory leak. Report this as a bug.</span></p>

  <p class="c4"><span class="c0">&lt;mallinfo_hblkhd&gt;</span></p>

  <p class="c4 c2"><span>Number of bytes allocated by malloc-based
  memory management using mmap(). This kind of memory,
  unlike</span> <span class=
  "c0">&lt;mallinfo_arena&gt;</span><span>&#160;is always returned
  to the OS immediately when free()d, so all of these bytes are
  actually in use by the program.</span></p>

  <p class="c4 c2"><span class="c0">Note:</span> <span>If this
  number keeps growing over the lifetime of the program this means
  that the program has a memory leak. Report this as a
  bug.</span></p>

  <p class="c4"><span class=
  "c0">&lt;mallinfo_keepcost&gt;</span></p>

  <p class="c4 c2"><span>Number of bytes in</span> <span class=
  "c0">&lt;mallinfo_arena&gt;</span><span>&#160;that could be
  returned to the OS but are kept to make future allocations
  faster.</span></p>

  <p class="c4 c2"><span class="c0">Note:</span><span>&#160;This
  number should always be close to</span> <span class=
  "c0">&lt;mallinfo_fordblks&gt;</span><span>. If there's a large
  difference between the two it means there's an issue with memory
  fragmentation.</span></p>

  <p class="c4"><span class="c0">&lt;mallinfo_hblks&gt;</span></p>

  <p class="c4 c2"><span>The number of mmap'ed blocks that hold the
  memory reported as</span> <span class=
  "c0">&lt;mallinfo_hblkhd&gt;</span><span>.</span></p>

  <p class="c4 c2"><span class="c0">Note:</span> <span>This number
  should be fairly constant and small over the lifetime of the
  program. If it keeps growing this means the program has a memory
  leak. Report this as a bug.</span></p>
  <hr style="page-break-before:always;display:none;" />

  <p class="c4 c12"></p>

  <h3><a id="h.4syp8tvmprfx" name=
  "h.4syp8tvmprfx"></a><span>gosa_trigger_reload_ldap_config</span></h3>

  <p class="c4"><span class="c0">Purpose:</span></p>

  <p class="c4 c2"><span>GOsa&#10132;Server. Causes the server to
  send a</span> <span class=
  "c1">new_ldap_config</span><span>&#160;message with up-to-date
  data. GOsa sends this after operations on the client's LDAP
  object that have potentially changed the relevant
  attributes.</span></p>

  <p class="c4 c12 c2"></p>

  <p class="c4"><span class="c0">Example message:</span></p>

  <p class="c4 c2"><span class="c0 c1">&lt;xml&gt;</span></p>

  <p class="c3"><span class=
  "c0 c1">&lt;header&gt;</span><span class=
  "c1">gosa_trigger_reload_ldap_config</span><span class=
  "c0 c1">&lt;/header&gt;<br />
  &lt;source&gt;</span><span class="c1">GOSA</span><span class=
  "c0 c1">&lt;/source&gt;<br />
  &lt;target&gt;</span><span class=
  "c1">00:16:36:7c:db:3f</span><span class=
  "c0 c1">&lt;/target&gt;<br />
  &lt;macaddress&gt;</span><span class=
  "c1">00:16:36:7c:db:3f</span><span class=
  "c0 c1">&lt;/macaddress&gt;</span></p>

  <p class="c4 c2"><span class="c0 c1">&lt;/xml&gt;</span></p>

  <h3 class="c16"><a id="h.9n1vwe81fzyi" name=
  "h.9n1vwe81fzyi"></a><span>gosa_recreate_fai_release_db</span></h3>

  <p><span class="c0">Purpose:</span></p>

  <p class="c2"><span>GOsa&#10132;Server. GOsa sends this message
  whenever a FAI class has been added, modified or
  removed.</span></p>

  <p class="c12 c2"></p>

  <p><span class="c0">Example message:</span></p>

  <p class="c2"><span class="c0 c1">&lt;xml&gt;</span></p>

  <p class="c5"><span class=
  "c0 c1">&lt;header&gt;</span><span class=
  "c1">gosa_recreate_fai_release_db</span><span class=
  "c0 c1">&lt;/header&gt;<br />
  &lt;source&gt;</span><span class="c1">GOSA</span><span class=
  "c0 c1">&lt;/source&gt;<br />
  &lt;target&gt;</span><span class="c1">GOSA</span><span class=
  "c0 c1">&lt;/target&gt;<br />
  &lt;macaddress&gt;</span><span class="c1">GOSA</span><span class=
  "c0 c1">&lt;/macaddress&gt;</span></p>

  <p class="c5"><span class=
  "c0 c1">&lt;periodic&gt;</span><span class=
  "c1">none</span><span class="c0 c1">&lt;/periodic&gt;</span></p>

  <p class="c2"><span class="c0 c1">&lt;/xml&gt;</span></p>

  <p><span class="c0">go-susi note:</span></p>

  <p class="c2"><span>Because gosa-si-server does not forward this
  message to peer servers, it is not a good idea to rely on it.
  Therefore go-susi does not use this message and instead uses a
  cache with a very short lifetime.</span></p>

  <p class="c2"><span>If this message is ever implemented in
  go-susi, go-susi will probably forward it to peers (depending on
  whether</span> <span class=
  "c0">&lt;source&gt;</span><span>&#160;is GOSA or a peer, to avoid
  forwarding an already forwarded message).</span></p>
  <hr style="page-break-before:always;display:none;" />

  <p class="c4 c12"></p><a href="#" id="id.ys29afdlp9ml" name=
  "id.ys29afdlp9ml"></a>

  <h2 class="c26"><a id="h.fn2pc4k1bcbp" name=
  "h.fn2pc4k1bcbp"></a><span>Deprecated</span></h2>

  <p><span>The messages in this section are concerned with user
  presence tracking and delivering messages to individual users.
  Like the homegrown encryption protocol this message delivery
  service is badly designed and go-susi does not support it.
  The</span> <span class=
  "c1">[general]/send-user-msg</span><span>&#160;hook can be used
  to interface go-susi with an external messaging service such as
  Jabber or email.</span></p>

  <h3><a id="h.itw5nv66zjdc" name=
  "h.itw5nv66zjdc"></a><span>CLMSG_CURRENTLY_LOGGED_IN</span></h3>

  <p class="c4"><span class="c0">Purpose:</span></p>

  <p class="c4 c2"><span>Client&#10132;Server. After the client has
  registered at the server it will send this message to tell the
  server the login names of all users currently logged in
  (including ssh logins). This corresponds to the users listed by
  the</span> <span class=
  "c1">who</span><span>&#160;command.</span></p>

  <p class="c4 c2"><span>Updates to the list of logged in users are
  transmitted via</span> <span class=
  "c1">CLMSG_LOGOUT</span><span>&#160;and</span> <span class=
  "c1">CLMSG_LOGIN</span><span>&#160;messages.</span></p>

  <p class="c4 c2"><span>When the server receives this message, it
  sends an</span> <span class=
  "c1">information_sharing</span><span>&#160;message with</span>
  <span class="c0">&lt;user_db&gt;</span><span>&#160;elements to
  all peers.</span></p>

  <p class="c4 c12 c2"></p>

  <p class="c4"><span class="c0">Example message:</span></p>

  <p class="c4 c2"><span class="c0 c1">&lt;xml&gt;</span></p>

  <p class="c3"><span class=
  "c0 c1">&lt;header&gt;</span><span class=
  "c1">CLMSG_CURRENTLY_LOGGED_IN</span><span class=
  "c0 c1">&lt;/header&gt;</span></p>

  <p class="c3"><span class=
  "c0 c1">&lt;source&gt;</span><span class=
  "c1">172.16.2.146:20083</span><span class=
  "c0 c1">&lt;/source&gt;</span></p>

  <p class="c3"><span class=
  "c0 c1">&lt;target&gt;</span><span class=
  "c1">172.16.2.85:20081</span><span class=
  "c0 c1">&lt;/target&gt;</span></p>

  <p class="c3"><span class=
  "c0 c1">&lt;CLMSG_CURRENTLY_LOGGED_IN&gt;</span></p>

  <p class="c3"><span class="c1">&#160; &#160;felix.wolga
  serkan.soeldirim serkan.soeldirim</span></p>

  <p class="c3"><span class=
  "c0 c1">&lt;/CLMSG_CURRENTLY_LOGGED_IN&gt;</span></p>

  <p class="c3"><span class=
  "c0 c1">&lt;macaddress&gt;</span><span class=
  "c1">00:0c:29:50:a3:52</span><span class=
  "c0 c1">&lt;/macaddress&gt;</span></p>

  <p class="c3"><span class=
  "c0 c1">&lt;timestamp&gt;</span><span class=
  "c1">20130305113331</span><span class=
  "c0 c1">&lt;/timestamp&gt;</span></p>

  <p class="c4 c2"><span class="c0 c1">&lt;/xml&gt;</span></p>

  <p class="c4 c12"></p>

  <p class="c4"><span class="c0">The message elements have the
  following meaning:</span></p>

  <p class="c4"><span class=
  "c0 c1">&lt;CLMSG_CURRENTLY_LOGGED_IN&gt;</span></p>

  <p class="c4 c2"><span>a space-separated list of login names,
  including users with graphical as well as ssh sessions. The list
  may contain duplicate entries if a user has multiple simultaneous
  sessions.</span></p>

  <p class="c4"><span class="c0 c1">&lt;timestamp&gt;</span></p>

  <p class="c4 c2"><span>The</span> <span class=
  "c0">UTC</span><span>&#160;time at which the message is being
  sent.</span></p>

  <p class="c4"><span class=
  "c0 c1">&lt;macaddress&gt;</span><span>&#160;MAC address of the
  sending client.</span></p>

  <p class="c4 c12"></p>

  <p class="c4"><span class="c0">go-susi note:</span></p>

  <p class="c4 c2"><span>go-susi currently does not send</span>
  <span class=
  "c1">information_sharing</span><span>&#160;messages.</span></p>

  <p class="c4 c12"></p>
  <hr style="page-break-before:always;display:none;" />

  <p class="c4 c12"></p>

  <h3><a id="h.p7etfjet6df2" name=
  "h.p7etfjet6df2"></a><span>CLMSG_LOGIN</span></h3>

  <p class="c4"><span class="c0">Purpose:</span></p>

  <p class="c4 c2"><span>Client&#10132;Server. When a user opens a
  new session the client sends this message to the
  server.</span></p>

  <p class="c4 c2"><span>When the server receives this message, it
  sends an</span> <span class=
  "c1">information_sharing</span><span>&#160;message with</span>
  <span class="c0">&lt;new_user&gt;</span><span>&#160;elements to
  all peers.</span></p>

  <p class="c4 c12 c2"></p>

  <p class="c4"><span class="c0">Example message:</span></p>

  <p class="c4 c2"><span class="c0 c1">&lt;xml&gt;</span></p>

  <p class="c3"><span class=
  "c0 c1">&lt;header&gt;</span><span class=
  "c1">CLMSG_LOGIN</span><span class=
  "c0 c1">&lt;/header&gt;</span></p>

  <p class="c3"><span class=
  "c0 c1">&lt;source&gt;</span><span class=
  "c1">172.16.2.146:20083</span><span class=
  "c0 c1">&lt;/source&gt;</span></p>

  <p class="c3"><span class=
  "c0 c1">&lt;target&gt;</span><span class=
  "c1">172.16.2.85:20081</span><span class=
  "c0 c1">&lt;/target&gt;</span></p>

  <p class="c3"><span class=
  "c0 c1">&lt;CLMSG_LOGIN&gt;</span><span class=
  "c1">felix.wolga</span><span class=
  "c0 c1">&lt;/CLMSG_LOGIN&gt;</span></p>

  <p class="c3"><span class=
  "c0 c1">&lt;macaddress&gt;</span><span class=
  "c1">00:0c:29:50:a3:52</span><span class=
  "c0 c1">&lt;/macaddress&gt;</span></p>

  <p class="c3"><span class=
  "c0 c1">&lt;timestamp&gt;</span><span class=
  "c1">20130305113331</span><span class=
  "c0 c1">&lt;/timestamp&gt;</span></p>

  <p class="c4 c2"><span class="c0 c1">&lt;/xml&gt;</span></p>

  <p class="c4 c12"></p>

  <p class="c4"><span class="c0">The message elements have the
  following meaning:</span></p>

  <p class="c4"><span class="c0 c1">&lt;CLMSG_LOGIN&gt;</span></p>

  <p class="c4 c2"><span>Login name of the user who has just opened
  a new session.</span></p>

  <p class="c4"><span class="c0 c1">&lt;timestamp&gt;,
  &lt;macaddress&gt;</span><span>&#160;see</span><span class=
  "c1">&#160;CLMSG_CURRENTLY_LOGGED_IN.</span></p>

  <p class="c4 c12"></p>

  <p class="c4"><span class="c0">gosa-si-client note:</span></p>

  <p class="c4 c2"><span>gosa-si-client does not seem to notice new
  ssh sessions, even though existing ssh sessions are included in
  the list from</span> <span class=
  "c1">CLMSG_CURRENTLY_LOGGED_IN.</span></p>

  <p class="c4 c12"></p>

  <p class="c4"><span class="c0">go-susi note:</span></p>

  <p class="c4 c2"><span>go-susi currently does not send</span>
  <span class=
  "c1">information_sharing</span><span>&#160;messages.</span></p>
  <hr style="page-break-before:always;display:none;" />

  <p class="c4 c12"></p>

  <h3><a id="h.o8zsmxn55w4" name=
  "h.o8zsmxn55w4"></a><span>CLMSG_LOGOUT</span></h3>

  <p class="c4"><span class="c0">Purpose:</span></p>

  <p class="c4 c2"><span>Client&#10132;Server. When a user
  terminates a login session the client sends this message to the
  server.</span></p>

  <p class="c4 c2"><span>When the server receives this message, it
  does</span> <span class="c11">not</span><span>&#160;send
  an</span> <span class=
  "c1">information_sharing</span><span>&#160;message to its
  peers.</span></p>

  <p class="c4 c12 c2"></p>

  <p class="c4"><span class="c0">Example message:</span></p>

  <p class="c4 c2"><span class="c0 c1">&lt;xml&gt;</span></p>

  <p class="c3"><span class=
  "c0 c1">&lt;header&gt;</span><span class=
  "c1">CLMSG_LOGOUT</span><span class=
  "c0 c1">&lt;/header&gt;</span></p>

  <p class="c3"><span class=
  "c0 c1">&lt;source&gt;</span><span class=
  "c1">172.16.2.146:20083</span><span class=
  "c0 c1">&lt;/source&gt;</span></p>

  <p class="c3"><span class=
  "c0 c1">&lt;target&gt;</span><span class=
  "c1">172.16.2.85:20081</span><span class=
  "c0 c1">&lt;/target&gt;</span></p>

  <p class="c3"><span class=
  "c0 c1">&lt;CLMSG_LOGOUT&gt;</span><span class=
  "c1">felix.wolga</span><span class=
  "c0 c1">&lt;/CLMSG_LOGOUT&gt;</span></p>

  <p class="c3"><span class=
  "c0 c1">&lt;macaddress&gt;</span><span class=
  "c1">00:0c:29:50:a3:52</span><span class=
  "c0 c1">&lt;/macaddress&gt;</span></p>

  <p class="c3"><span class=
  "c0 c1">&lt;timestamp&gt;</span><span class=
  "c1">20130305113331</span><span class=
  "c0 c1">&lt;/timestamp&gt;</span></p>

  <p class="c4 c2"><span class="c0 c1">&lt;/xml&gt;</span></p>

  <p class="c4 c12"></p>

  <p class="c4"><span class="c0">The message elements have the
  following meaning:</span></p>

  <p class="c4"><span class="c0 c1">&lt;CLMSG_LOGOUT&gt;</span></p>

  <p class="c4 c2"><span>Login name of the user who has just closed
  a session. Note that the same user may still have other sessions
  open.</span></p>

  <p class="c4"><span class="c0 c1">&lt;timestamp&gt;,
  &lt;macaddress&gt;</span><span>&#160;see</span> <span class=
  "c1">CLMSG_CURRENTLY_LOGGED_IN.</span></p>

  <p class="c4 c12"></p>

  <p class="c4"><span class="c0">gosa-si-client note:</span></p>

  <p class="c4 c2"><span>gosa-si-client does not seem to notice
  when ssh sessions are terminated, even though existing ssh
  sessions are included in the list from</span> <span class=
  "c1">CLMSG_CURRENTLY_LOGGED_IN.</span></p>
  <hr style="page-break-before:always;display:none;" />

  <h3><a id="h.1nxkurs4dznc" name=
  "h.1nxkurs4dznc"></a><span>information_sharing</span></h3>

  <p class="c4"><span class="c0">Purpose:</span></p>

  <p class="c4 c2"><span>Server&#10132;Server. Informs the
  receiving server about users currently logged in at clients
  registered at the sending server. Whenever a client sends
  a</span> <span class="c1">CLMSG_LOGIN</span><span>&#160;message
  to its server, that server sends</span> <span class=
  "c1">information_sharing</span><span>&#160;messages to its peers
  with</span> <span class=
  "c0">&lt;new_user&gt;</span><span>&#160;information.</span></p>

  <p class="c4 c2"><span>Whenever a client sends a</span>
  <span class=
  "c1">CLMSG_CURRENTLY_LOGGED_IN</span><span>&#160;message to its
  server, that server sends</span> <span class=
  "c1">information_sharing</span><span>&#160;messages to its peers
  with</span> <span class=
  "c0">&lt;user_db&gt;</span><span>&#160;information.</span></p>

  <p class="c4 c2"><span>When the client sends</span> <span class=
  "c1">CLMSG_LOGOUT</span><span>&#160;to its server, gosa-si-server
  does not seem to forward that information to its
  peers.</span></p>

  <p class="c4 c12"></p>

  <p class="c4"><span class="c0">Example messages:</span></p>

  <p class="c4 c2"><span class="c0 c1">&lt;xml&gt;</span></p>

  <p class="c3"><span class=
  "c0 c1">&lt;header&gt;</span><span class=
  "c1">information_sharing</span><span class=
  "c0 c1">&lt;/header&gt;</span></p>

  <p class="c3"><span class=
  "c0 c1">&lt;source&gt;</span><span class=
  "c1">172.16.2.143:20081</span><span class=
  "c0 c1">&lt;/source&gt;<br />
  &lt;target&gt;</span><span class=
  "c1">172.16.2.60:20081</span><span class=
  "c0 c1">&lt;/target&gt;</span></p>

  <p class="c3"><span class=
  "c0 c1">&lt;user_db&gt;</span><span class=
  "c1">172.16.2.88:20083;sharak.khun</span><span class=
  "c0 c1">&lt;/user_db&gt;</span></p>

  <p class="c3"><span class=
  "c0 c1">&lt;user_db&gt;</span><span class=
  "c1">172.16.2.66:20083;thomas.fischmaul</span><span class=
  "c0 c1">&lt;/user_db&gt;</span></p>

  <p class="c3"><span class=
  "c0 c1">&lt;user_db&gt;</span><span class=
  "c1">172.16.2.148:20083;thomas.fischmaul</span><span class=
  "c0 c1">&lt;/user_db&gt;</span></p>

  <p class="c3"><span class=
  "c0 c1">&lt;information_sharing&gt;&lt;/information_sharing&gt;</span></p>

  <p class="c4 c2"><span class="c0 c1">&lt;/xml&gt;</span></p>

  <p class="c4 c12"></p>

  <p class="c4 c2"><span class="c0 c1">&lt;xml&gt;</span></p>

  <p class="c3"><span class=
  "c0 c1">&lt;header&gt;</span><span class=
  "c1">information_sharing</span><span class=
  "c0 c1">&lt;/header&gt;</span></p>

  <p class="c3"><span class=
  "c0 c1">&lt;source&gt;</span><span class=
  "c1">172.16.2.143:20081</span><span class=
  "c0 c1">&lt;/source&gt;</span></p>

  <p class="c3"><span class=
  "c0 c1">&lt;target&gt;</span><span class=
  "c1">172.16.2.60:20081</span><span class=
  "c0 c1">&lt;/target&gt;</span></p>

  <p class="c3"><span class=
  "c0 c1">&lt;new_user&gt;</span><span class=
  "c1">172.16.2.148:20083;karl.klammer</span><span class=
  "c0 c1">&lt;/new_user&gt;</span></p>

  <p class="c3"><span class=
  "c0 c1">&lt;information_sharing&gt;&lt;/information_sharing&gt;</span></p>

  <p class="c4 c2"><span class="c0 c1">&lt;/xml&gt;</span></p>

  <p class="c4 c12"></p>

  <p class="c4 c12 c2"></p>

  <p class="c4"><span class="c0">The message elements have the
  following meaning:</span></p>

  <p class="c4"><span class="c0">&lt;user_db&gt;</span></p>

  <p class="c4 c2"><span>When a</span> <span class=
  "c0">&lt;user_db&gt;</span><span>&#160;element is present it
  means that the</span> <span class=
  "c1">information_sharing</span><span>&#160;message lists</span>
  <span class="c11">all</span><span>&#160;users currently logged in
  at clients registered at the</span> <span class=
  "c0">&lt;source&gt;</span><span>&#160;server. Each such user is
  listed in its own</span> <span class=
  "c0">&lt;user_db&gt;</span><span>&#160;element. The receiving
  server should discard all old user information from the</span>
  <span class="c0">&lt;source&gt;</span><span>&#160;server and
  replace it with the new information.</span></p>

  <p class="c4"><span class="c0">&lt;new_user&gt;</span></p>

  <p class="c4 c2"><span>The</span> <span class=
  "c0">&lt;new_user&gt;</span><span>&#160;element is like</span>
  <span class="c0">&lt;user_db&gt;</span><span>&#160;with the
  difference that the</span> <span class=
  "c1">information_sharing</span><span>&#160;message does not list
  all users. This means that the receiving server should add the
  new user information to the old information from</span>
  <span class="c0">&lt;source&gt;</span><span>&#160;rather than
  discard all old information as it would do in the case of</span>
  <span class="c0">&lt;user_db&gt;</span><span>.</span></p>

  <p class="c4 c12"></p>

  <p class="c4"><span class="c0">go-susi notes:</span></p>

  <p class="c4 c2"><span>Currently go-susi understands but does not
  send these messages.</span></p>
  <hr style="page-break-before:always;display:none;" />

  <h3 class="c16"><a id="h.le5ca3ebk6m4" name=
  "h.le5ca3ebk6m4"></a><span>usr_msg</span></h3>

  <p><span class="c0">Purpose:</span></p>

  <p class="c2"><span>Server&#10132;Client. Tell a client to
  present a popup message to the user.</span></p>

  <p class="c12 c2"></p>

  <p><span class="c0">Example message:</span></p>

  <p class="c2"><span class="c0 c1">&lt;xml&gt;</span></p>

  <p class="c5"><span class=
  "c0 c1">&lt;header&gt;</span><span class=
  "c1">usr_msg</span><span class="c0 c1">&lt;/header&gt;</span></p>

  <p class="c5"><span class=
  "c0 c1">&lt;source&gt;</span><span class=
  "c1">172.16.2.143:20081</span><span class=
  "c0 c1">&lt;/source&gt;</span></p>

  <p class="c5"><span class=
  "c0 c1">&lt;target&gt;</span><span class=
  "c1">172.16.2.146:20083</span><span class=
  "c0 c1">&lt;/target&gt;</span></p>

  <p class="c5"><span class=
  "c0 c1">&lt;message&gt;</span><span class=
  "c1">TmFjaHJpY2h0</span><span class=
  "c0 c1">&lt;/message&gt;</span></p>

  <p class="c5"><span class=
  "c0 c1">&lt;subject&gt;</span><span class=
  "c1">QmV0cmVmZg==</span><span class=
  "c0 c1">&lt;/subject&gt;</span></p>

  <p class="c5"><span class="c0 c1">&lt;usr&gt;</span><span class=
  "c1">userid</span><span class="c0 c1">&lt;/usr&gt;</span></p>

  <p class="c5"><span class=
  "c0 c1">&lt;usr_msg&gt;&lt;/usr_msg&gt;</span></p>

  <p class="c2"><span class="c0 c1">&lt;/xml&gt;</span></p>

  <p><span class="c0">go-susi note:</span></p>

  <p class="c2"><span>go-susi renames all</span> <span class=
  "c0">&lt;usr&gt;</span><span>&#160;elements to</span>
  <span class="c0">&lt;user&gt;</span><span>, then calls</span>
  <span class="c1">user-msg-hook.</span><span>&#160;See</span>
  <span class="c1">job_send_user_msg</span><span>&#160;for more
  information.</span></p>

  <h3 class="c16"><a id="h.tjnsr0p4y1zm" name=
  "h.tjnsr0p4y1zm"></a><span>confirm_usr_msg</span></h3>

  <p class="c4"><span class="c0">Purpose:</span></p>

  <p class="c4 c2"><span>Client&#10132;Server. Tells the server
  that a message sent to the client via</span> <span class=
  "c1">usr_msg</span><span>&#160;has been presented to the
  user.</span></p>

  <p class="c4 c12 c2"></p>

  <p class="c4"><span class="c0">Example message:</span></p>

  <p class="c4 c2"><span class="c0 c1">&lt;xml&gt;</span></p>

  <p class="c3"><span class=
  "c0 c1">&lt;header&gt;</span><span class=
  "c1">confirm_usr_msg</span><span class=
  "c0 c1">&lt;/header&gt;</span></p>

  <p class="c3"><span class=
  "c0 c1">&lt;source&gt;</span><span class=
  "c1">172.16.2.146:20083</span><span class=
  "c0 c1">&lt;/source&gt;</span></p>

  <p class="c3"><span class=
  "c0 c1">&lt;target&gt;</span><span class=
  "c1">172.16.2.143:20081</span><span class=
  "c0 c1">&lt;/target&gt;</span></p>

  <p class="c3"><span class=
  "c0 c1">&lt;message&gt;</span><span class=
  "c1">TmFjaHJpY2h0</span><span class=
  "c0 c1">&lt;/message&gt;</span></p>

  <p class="c3"><span class=
  "c0 c1">&lt;subject&gt;</span><span class=
  "c1">QmV0cmVmZg==</span><span class=
  "c0 c1">&lt;/subject&gt;</span></p>

  <p class="c3"><span class="c0 c1">&lt;usr&gt;</span><span class=
  "c1">userid</span><span class="c0 c1">&lt;/usr&gt;</span></p>

  <p class="c3"><span class=
  "c0 c1">&lt;confirm_usr_msg&gt;&lt;/confirm_usr_msg&gt;</span></p>

  <p class="c4 c2"><span class="c0 c1">&lt;/xml&gt;</span></p>

  <p class="c4 c12 c2"></p>

  <p class="c4"><span class="c0">go-susi note:</span></p>

  <p class="c4 c2"><span>go-susi does not support this
  message.</span></p>
  <hr style="page-break-before:always;display:none;" />
  <a href="#" id="id.qm42onlc5h25" name="id.qm42onlc5h25"></a>

  <h1><a id="h.7g7l42ni6zqg" name=
  "h.7g7l42ni6zqg"></a><span>Appendix</span></h1><a href="#" id=
  "id.ejujf2q7dp37" name="id.ejujf2q7dp37"></a>

  <h2><a id="h.bumhouula4zt" name=
  "h.bumhouula4zt"></a><span>sibridge</span></h2>

  <p><span>Remote control for an si-server.</span></p>

  <h3><a id="h.gieyvwnkib9d" name=
  "h.gieyvwnkib9d"></a><span>SYNOPSIS</span></h3>

  <p><span class="c1">sibridge [args]
  [targetserver][:targetport]</span></p>

  <h3><a id="h.uveotml3h6xt" name=
  "h.uveotml3h6xt"></a><span>DESCRIPTION</span></h3>

  <p><span>Remote control for an si-server at</span> <span class=
  "c1">targetserver:targetport.</span></p>

  <h3><a id="h.n3hj3y4xe5mb" name=
  "h.n3hj3y4xe5mb"></a><span>OPTIONS</span></h3>

  <p><span class="c0 c1">--help</span></p>

  <p class="c2"><span>print usage and exit.</span></p>

  <p><span class="c0 c1">--version</span></p>

  <p class="c2"><span>print version and exit.</span></p>

  <p><span class="c0 c1">-c &lt;file&gt;</span></p>

  <p class="c2"><span>read configuration from &lt;file&gt; instead
  of the default location (which is</span> <span class=
  "c1">/etc/gosa/gosa.conf</span><span>). The format of the
  configuration file is the same as for GOsa&#178;
  (</span><span class="c11">not</span><span>&#160;go-susi!) but
  only the</span> <span class=
  "c1">&lt;location&gt;</span><span>&#160;sections matter. There
  has to be a</span> <span class=
  "c1">&lt;location&gt;</span><span>&#160;section for</span>
  <span class="c1">targetserver.</span></p>

  <p><span class="c0 c1">-l &lt;port&gt;</span></p>

  <p class="c2"><span>listen for socket connections on
  &lt;port&gt;. Always uses TLS without STARTTLS (unlike go-susi).
  TLS client authentication is required. GOsa extensions with
  appropriate access control bits need to be present in the client
  certificate.</span></p>

  <p class="c2"><span>If the</span> <span class=
  "c1">caCertificate</span><span>&#160;attribute of</span>
  <span class="c1">&lt;location&gt;</span><span>&#160;in the config
  file lists multiple paths, client certificates may be signed by
  any of these CAs.</span></p>

  <p><span class="c0 c1">-e &lt;string&gt;</span></p>

  <p class="c2"><span>execute commands from
  &lt;string&gt;.</span></p>

  <p><span class="c0 c1">-f &lt;file&gt;</span></p>

  <p class="c2"><span>execute commands from &lt;file&gt;. If
  &lt;file&gt; is not an ordinary file, it will be processed
  concurrently with other special files and data from other -e and
  -f arguments. This permits using FIFOs and other special files
  for input.</span></p>

  <p><span class="c0 c1">-i</span></p>

  <p class="c2"><span>Read from stdin even if -l, -e or -f is used.
  Normally these switches suppress interactive mode.</span></p>

  <p><span class="c0 c1">-v</span></p>

  <p class="c2"><span>log</span> <span>INFO level log messages (by
  default only ERRORs are logged). INFO level messages may aid the
  administrator in debugging problems.</span></p>

  <p><span class="c0 c1">-vv</span></p>

  <p class="c2"><span>log INFO and DEBUG level log messages. DEBUG
  level messages are useful only for developers and may produce so
  much data that it affects performance. They also contain
  cleartext passwords.</span></p>

  <h3><a id="h.6rx898z6itc8" name="h.6rx898z6itc8"></a><span>TLS
  CERTIFICATES</span></h3>

  <p><span>In order to connect to an sibridge put into listening
  mode with the</span> <span class="c1">-l</span><span>&#160;switch
  a client must present a certificate. GOsa extensions are required
  and most access controls apply to sibridge in an obvious way.
  E.g. the bit GosaAccessControl.GosaAccessJobs.install controls
  whether sibridge will accept commands that create new install
  jobs. Note that the effective permissions a user connecting to
  sibridge are the intersection of the permissions granted by the
  client certificate and the certificate sibridge uses to connect
  to go-susi, which is always the certificate configured in
  sibridge's configuration file, regardless of what certificate is
  used to connect to sibridge.</span></p>

  <p><span>The following list contains aspects in which sibridge's
  handling of access controls differs from go-susi's or is
  non-obvious:</span></p>

  <ul class="c20 lst-kix_nxjzkw9ekwnk-0 start">
    <li class="c2 c14"><span>sibridge ignores
    GosaAccessLDAPIncoming. Adding an empty GosaAccessLDAPIncoming
    list in combination with not setting the GosaAccessMisc.peer
    bit is an easy way to make sure that a certificate can not be
    used to connect to go-susi directly.</span></li>

    <li class="c2 c14"><span>sibridge</span> <span class=
    "c11">does</span><span>&#160;check
    GosaConnectionLimits.communicateWith. It applies to the machine
    and port sibridge is listening at, not the go-susi target. In
    other words you can use communicateWith to specify which
    sibridge instances a certificate can be used to talk
    to.</span></li>

    <li class="c2 c14"><span>In order to use the</span>
    <span class="c1">raw</span><span>&#160;command, the client
    needs the GosaAccessMisc.debug permission.</span></li>

    <li class="c2 c14"><span>Commands</span> <span class="c1">kill,
    foo-&gt;, .description, .gocomment, .release,
    .classes</span><span>&#160;and</span> <span class=
    "c1">.deb/.repo</span><span>&#160;require the
    GosaAccessLDAPUpdate.dh permission. Commands</span>
    <span class="c1">kill</span><span>&#160;and</span> <span class=
    "c1">foo-&gt;</span><span>&#160;additionally require
    GosaAccessLDAPDetectedHardware.dn.</span></li>

    <li class="c2 c14">
      <span>The commands</span> <span class=
      "c1">examine</span><span>&#160;and</span> <span class=
      "c1">xx</span><span>&#160;require
      GosaAccessQuery.queryAll.</span>
      <hr style="page-break-before:always;display:none;" />
    </li>
  </ul><a href="#" id="id.jjgoi9ch9ywz" name="id.jjgoi9ch9ywz"></a>

  <h2 class="c10"><a id="h.p43j0wkucxlz" name=
  "h.p43j0wkucxlz"></a><span>generate_package_list</span></h2>

  <p><span>Debian repository scanner to serve as</span>
  <span class="c1">package-list-hook.</span></p>

  <h3 class="c16"><a id="h.7kplqidsegca" name=
  "h.7kplqidsegca"></a><span>SYNOPSIS</span></h3>

  <p><span class="c1">export PackageListCacheDir=...</span></p>

  <p><span class="c1">export PackageListDebconf=...</span></p>

  <p><span class="c1">export
  PackageListFAIrepository=...</span></p>

  <p><span class="c1">export Verbose=...</span></p>

  <p><span class=
  "c1">/usr/lib/go-susi/generate_package_list</span></p>

  <h3 class="c16"><a id="h.4p55nppm0mq2" name=
  "h.4p55nppm0mq2"></a><span>DESCRIPTION</span></h3>

  <p><span>generate_package_list scans a list of Debian
  repositories, extracts package information and prints it to
  stdout in LDIF format as required for use as package-list-hook.
  For details about this format, see the section about
  package-list-hook in the documentation on go-susi's configuration
  options.</span></p>

  <h3><a id="h.80bfn3ok2vz7" name=
  "h.80bfn3ok2vz7"></a><span>WARNING</span></h3>

  <p><span>If requested (see ENVIRONMENT section below)
  generate_package_list will scan</span> <span class=
  "c11">all</span><span>&#160;Debian packages in the target
  repositories for debconf-templates. This requires that</span>
  <span class="c11">all</span><span>&#160;packages be transferred
  at least partially and will cause significant network traffic. It
  will also take a lot of time. Because generate_package_list has
  an internal timeout of 1h after which it will stop scanning, it
  may be necessary to call it multiple times to complete the scan.
  Packages that were scanned in a previous run will not be
  rescanned. Their data will be used from the cache
  instead.</span></p>

  <h3 class="c16"><a id="h.pw7zmxe7trmy" name=
  "h.pw7zmxe7trmy"></a><span>ENVIRONMENT</span></h3>

  <p><span>The parameters to control generate_package_list are
  passed via environment variables. Remember that the names of
  environment variables are case-sensitive!</span></p>

  <p><span class="c0 c1">PackageListCacheDir</span></p>

  <p class="c2"><span>Path of a directory where
  generate_package_list should store its cache file.</span></p>

  <p><span class="c0 c1">PackageListDebconf</span></p>

  <p class="c2"><span>Controls which .deb packages will be
  (partially) downloaded for extracting debconf-templates. The
  following values are possible:</span></p>

  <p class="c2"><span class="c1">cache:</span><span>&#160;Do not
  scan any packages for templates. Templates information already in
  the cache will be used.</span></p>

  <p class="c2"><span class="c1">depends:</span><span>&#160;Only
  packages that have a Depends or Pre-Depends line that includes
  the word "debconf" will be scanned.</span></p>

  <p class="c2"><span class="c11">everything
  else:</span><span>&#160;Scan all packages whose debconf-templates
  (or lack thereof) are not yet registered in the cache. See
  WARNING section above.</span></p>

  <p><span class="c0 c1">PackageListFAIrepository</span></p>

  <p class="c2"><span>A space-separated list of strings in the same
  format as the FAIrepository LDAP attribute. All of the
  corresponding repositories will be scanned.</span></p>

  <p><span class="c0 c1">Verbose</span></p>

  <p class="c2"><span>If set to 1, 2, 3 or 4 generate_package_list
  will output informative messages to stderr. Higher numbers
  produce more output.</span></p>
  <hr style="page-break-before:always;display:none;" />
  <a href="#" id="id.fgzi8uchaq8v" name="id.fgzi8uchaq8v"></a>

  <h2><a id="h.3chfrh90z9ft" name=
  "h.3chfrh90z9ft"></a><span>initrd_autopack</span></h2>

  <p><span>A godsend for people developing/debugging
  initrd.img</span></p>

  <h3 class="c24"><a id="h.b4p9n1w3grfh" name=
  "h.b4p9n1w3grfh"></a><span>SYNOPSIS</span></h3>

  <p><span class="c1">/usr/lib/go-susi/initrd_autopack
  &lt;tftp_dir&gt; &lt;extract_dir&gt;</span></p>

  <h3 class="c24"><a id="h.9u6o9qfwa26i" name=
  "h.9u6o9qfwa26i"></a><span>DESCRIPTION</span></h3>

  <p class="c4"><span>/usr/lib/go-susi/initrd_autopack is a TFTP
  hook that allows you to maintain your initrd.img as an extracted
  directory tree. When the file is requested, initrd_autopack will
  automatically compress it. The compressed file will be kept so
  that recompression happens only when there have been changes in
  the extracted directory tree.</span></p>

  <h3 class="c24"><a id="h.dqyfzc39cpkr" name=
  "h.dqyfzc39cpkr"></a><span>OPTIONS</span></h3>

  <p><span class="c0 c1">tftp_dir</span></p>

  <p class="c2"><span>A TFTP request for /initrd.img addresses the
  path</span> <span class="c0">tftp_dir</span><span>/initrd.img. If
  this file exists and is up-to-date with respect to the
  corresponding extracted directory tree, it will be served
  directly. If this file does not exist or the extracted directory
  tree has been changed since the last recompression, the extracted
  directory tree will be compressed and stored at this location and
  then served.</span></p>

  <p><span class="c0 c1">extract_dir</span></p>

  <p class="c2"><span>A TFTP request for /initrd.img corresponds to
  an extracted directory</span> <span class=
  "c0">extract_dir</span><span>/initrd.img. If this directory does
  not exist, but the corresponding</span> <span class=
  "c0">tftp_dir</span><span>/initrd.img does, then</span>
  <span class="c0">tftp_dir</span><span>/initrd.img will be
  extracted. This means that to start working on the insides of an
  initrd.img, you can just throw it into</span> <span class=
  "c0">tftp_dir</span><span>/ and boot it once. Afterwards you will
  find an extracted directory corresponding to the initrd.img that
  you can make your modifications to.</span></p>
  <hr style="page-break-before:always;display:none;" />

  <p class="c12 c2"></p><a href="#" id="id.55eiknlqs8ut" name=
  "id.55eiknlqs8ut"></a>

  <h2><a id="h.fiklmh4wvmzp" name="h.fiklmh4wvmzp"></a><span>TLS
  Certificates</span></h2>

  <p><span>Details on X.509 certificates for establishing TLS
  connections with go-susi</span></p>

  <h3><a id="h.o7klfc2r3utv" name=
  "h.o7klfc2r3utv"></a><span>DESCRIPTION</span></h3>

  <p><span>go-susi requires that all parties connecting via TLS
  present a valid certificate signed by a trusted CA (i.e. it
  requires TLS client authentication). In addition to the basic
  validity and trust checks, go-susi evaluates several certificate
  extensions, if present in the connecting party's certificate, to
  determine what messages go-susi will accept from that party and
  what actions go-susi will take in reaction to these
  messages.</span></p>

  <h3><a id="h.7y1jg8wwidfm" name=
  "h.7y1jg8wwidfm"></a><span>subjectAltName</span></h3>

  <p><span>The certificate must contain the subjectAltName
  extension and the connecting party's IP address has to match one
  of the entries in subjectAltName. The following types of
  subjectAltName entries are supported:</span></p>

  <p><span class="c0 c1">iPAddress</span></p>

  <p class="c2"><span>If the address in the certificate ends in one
  or more 0-bytes (e.g. 1.2.3.0 or 1.2.0.0), it is interpreted as a
  wildcard address that will match all IP addresses from the
  corresponding /24, /16 or /8 subnet. The address 0.0.0.0 means
  that</span> <span class="c11">every</span><span>&#160;IP address
  will be accepted. The address 127.0.0.1 may be used to match
  parties connecting from the same machine that go-susi is running
  on.</span></p>

  <p><span class="c0 c1">dNSName</span></p>

  <p class="c2"><span>If the dNSName can be resolved to an IP, this
  IP must match the connecting party's IP. If it can not be
  resolved, the connecting party's IP will be converted to a name
  by reverse DNS and that name must match the certificate's
  dNSName. In this case the dNSName may start with a "*" which
  &#160;is interpreted as a wildcard. E.g. dNSName "*.example.com"
  matches name "foo.bar.example.com".</span></p>

  <p><span class="c0 c1">registeredID</span></p>

  <p class="c2"><span>The following predefined OBJECT IDENTIFIERs
  are supported:</span></p>

  <p class="c2"><span>&#160;<br />
  DEFINITIONS IMPLICIT TAGS ::=<br />
  BEGIN<br />
  id-msb OBJECT IDENTIFIER ::= { 1 3 6 1 4 1 45753 }<br />
  id-msb-gosa OBJECT IDENTIFIER ::= { id-msb 1 }<br />
  &#160;<br /></span><span class=
  "c0">gosa-gn-my-server</span><span>&#160;OBJECT IDENTIFIER ::= {
  id-msb-gosa 1 }</span></p>

  <p class="c2"><span>&#160; -- corresponds to the IP address of
  the server to which the</span></p>

  <p class="c2"><span>&#160; -- receiving go-susi has sent its most
  recent</span> <span class=
  "c1">here_i_am</span><span>&#160;message.</span></p>

  <p class="c2"><span>&#160; -- Note: go-susi updates this IP
  address before sending the</span></p>

  <p class="c2"><span>&#160; --</span> <span class=
  "c1">here_i_am</span><span>&#160;to make sure that it will accept
  a reply from a</span></p>

  <p class="c2"><span>&#160; -- server that only has a
  gosa-gn-my-server certificate.<br />
  &#160;<br /></span><span class=
  "c0">gosa-gn-config-file</span><span>&#160;OBJECT IDENTIFIER ::=
  { id-msb-gosa 2 }</span></p>

  <p class="c2"><span>&#160; -- corresponds to the set of all
  servers explicitly listed in the</span></p>

  <p class="c2"><span>&#160; --</span> <span class=
  "c1">[server]/ip</span><span>&#160;and</span> <span class=
  "c1">[ServerPackages]/address</span><span>&#160;configuration</span></p>

  <p class="c2"><span>&#160; -- settings.</span><span>&#160;All
  these entries will be treated as if they were dNSName</span></p>

  <p class="c2"><span>&#160; -- or iPAddress entries in the
  certificate (depending on whether they</span></p>

  <p class="c2"><span>&#160; -- are names or numeric
  addresses).</span></p>

  <p class="c2"><span>&#160;<br /></span> <span class=
  "c0">gosa-gn-srv-record</span><span>&#160;OBJECT IDENTIFIER ::= {
  id-msb-gosa 3 }</span></p>

  <p class="c2"><span>&#160; -- corresponds to the set of all
  servers listed in DNS SRV records for</span></p>

  <p class="c2"><span>&#160; -- the service "gosa-si" with protocol
  "tcp". All these records will be</span></p>

  <p class="c2"><span>&#160; -- treated as if they were dNSName
  entries in the certificate.</span></p>

  <p class="c2"><span>&#160; -- If</span> <span class=
  "c1">[server]/dns-lookup</span><span>&#160;or</span> <span class=
  "c1">[ServerPackages]/dns-lookup</span><span>&#160;is
  set</span></p>

  <p class="c2"><span>&#160; -- to "false" in the configuration
  file, gosa-gn-srv-record has no effect.<br />
  &#160;<br /></span><span class=
  "c0">gosa-gn-my-peer</span><span>&#160;OBJECT IDENTIFIER ::= {
  id-msb-gosa 4 }</span></p>

  <p class="c2"><span>&#160; -- corresponds to the set of all
  servers with whom the receiving go-susi</span></p>

  <p class="c2"><span>&#160; -- has established
  server-server-communication.</span></p>

  <p class="c2"><span>&#160; -- Note: A server whose certificate is
  bound to gosa-gn-my-peer can</span></p>

  <p class="c2"><span>&#160; -- not establish
  server-server-communication on its own initiative.</span></p>

  <p class="c2"><span>&#160; -- However, once a server with a more
  powerful certificate has</span></p>

  <p class="c2"><span>&#160; -- contacted it with</span>
  <span class="c1">new_server</span><span>&#160;it may respond and
  this will lead</span></p>

  <p class="c2"><span>&#160; -- to a peer relationship.<br />
  <br />
  END<br /></span></p>

  <h3><a id="h.8cv517swdkbd" name=
  "h.8cv517swdkbd"></a><span>Connection and data transfer
  limits</span></h3>

  <p><span>The following certificate extension may be used to
  impose or relax limits on the party presenting this certificate.
  Except for the communicateWith field which has some general
  usefulness, the fields in this extension are rarely useful. The
  default limits are appropriate for most cases. You should not
  include this extension in a certificate without a good reason to
  do so.</span></p>

  <p class="c2"><span><br />
  DEFINITIONS IMPLICIT TAGS ::=<br />
  BEGIN<br />
  &#160;<br />
  gosa-ce-connectionLimits OBJECT IDENTIFIER ::= { id-msb-gosa 5
  }<br />
  &#160;<br />
  GosaConnectionLimits ::= SEQUENCE {<br />
  &#160;<br /></span><span>&#160;</span> <span class=
  "c0">totalTime</span><span>&#160;[0] INTEGER OPTIONAL,</span></p>

  <p class="c2"><span>&#160; -- Number of milliseconds after which
  the connection will be terminated</span></p>

  <p class="c2"><span>&#160; -- regardless of the amount of data
  transferred. In particular this will</span></p>

  <p class="c2"><span>&#160; -- terminate transfers that take too
  long due to actual or simulated</span></p>

  <p class="c2"><span>&#160; -- transmission errors.</span></p>

  <p class="c2"><span>&#160; -- A number &lt;= 0 means no time
  limit.</span></p>

  <p class="c2"><span>&#160; -- Note: A non-0 setting in a
  certificate used for</span></p>

  <p class="c2"><span>&#160; -- server-server-communication may
  cause job database inconsistencies</span></p>

  <p class="c2"><span>&#160; -- between the respective
  servers.</span></p>

  <p class="c2"><span>&#160; -- Do not use it in certificates used
  for server-server-communication.<br />
  &#160;<br /></span><span>&#160;</span> <span class=
  "c0">totalBytes</span><span>&#160;[1] INTEGER
  OPTIONAL,</span></p>

  <p class="c2"><span>&#160; -- Maximum number of bytes allowed
  over a single connection.</span></p>

  <p class="c2"><span>&#160; -- Both bytes read and written count
  towards this limit.</span></p>

  <p class="c2"><span>&#160; -- (The same connection may be used
  for multiple messages.)</span></p>

  <p class="c2"><span>&#160; -- A number &lt;= 0 means no
  limit.</span></p>

  <p class="c2"><span>&#160; -- Note: A non-0 setting in a
  certificate used for</span></p>

  <p class="c2"><span>&#160; -- server-server-communication may
  cause job database inconsistencies</span></p>

  <p class="c2"><span>&#160; -- between the respective
  servers.</span></p>

  <p class="c2"><span>&#160; -- Do not use it in certificates used
  for server-server-communication.<br />
  &#160;<br />
  &#160;</span><span class="c0">messageBytes</span><span>&#160;[2]
  INTEGER OPTIONAL,</span></p>

  <p class="c2"><span>&#160; -- Maximum number of bytes allowed for
  a single message.</span></p>

  <p class="c2"><span>&#160; -- Reply bytes do not count against
  this limit.</span></p>

  <p class="c2"><span>&#160; -- (The same connection may be used
  for multiple messages.)</span></p>

  <p class="c2"><span>&#160; -- A number &lt;= 0 means no
  limit.<br />
  &#160;<br />
  &#160;</span><span class="c0">connPerHour</span><span>&#160;[3]
  INTEGER OPTIONAL,</span></p>

  <p class="c2"><span>&#160; -- Maximum number of connection
  attempts per hour from the same IP</span></p>

  <p class="c2"><span>&#160; -- address. If the number is exceeded
  the connection will be rejected.</span></p>

  <p class="c2"><span>&#160; -- Repeated connection attempts after
  the limit has been exceeded</span></p>

  <p class="c2"><span>&#160; -- may prolong the lockout
  indefinitely.</span></p>

  <p class="c2"><span>&#160; -- Tracking of connections per time
  per IP is approximate only.</span></p>

  <p class="c2"><span>&#160; -- It is guaranteed that if a cool IP
  connects and then makes</span></p>

  <p class="c2"><span>&#160; -- connPerHour further connections
  before 1h has elapsed since</span></p>

  <p class="c2"><span>&#160; -- the first connection, this will
  trigger lockout. It is also guaranteed</span></p>

  <p class="c2"><span>&#160; -- that making no connections for 1h
  will completely cool down an IP.</span></p>

  <p class="c2"><span>&#160; -- The limit cannot be evaded by
  opening parallel connections.</span></p>

  <p class="c2"><span>&#160; -- A number &lt;= 0 means no
  limit.</span></p>

  <p class="c2"><span>&#160; -- Note: This counts successful and
  unsuccessful connection attempts.</span></p>

  <p class="c2"><span>&#160; -- Once established a connection may
  be held open indefinitely without</span></p>

  <p class="c2"><span>&#160; -- incurring any further strikes
  against this limit.</span></p>

  <p class="c2"><span>&#160; -- Note 2: To make rejection of IPs
  that have exceeded their limits</span></p>

  <p class="c2"><span>&#160; -- as fast as possible, limits are
  stored in a DB after TLS handshake</span></p>

  <p class="c2"><span>&#160; -- but consulted before the TLS
  handshake. Connections from the</span></p>

  <p class="c2"><span>&#160; -- same IP with differing certificate
  limits will cause issues such as</span></p>

  <p class="c2"><span>&#160; -- locking out legitimate clients and
  permitting illegitimate clients to</span></p>

  <p class="c2"><span>&#160; -- exceed their limits.<br />
  &#160;<br />
  &#160;</span><span class="c0">connParallel</span><span>&#160;[4]
  INTEGER OPTIONAL,</span></p>

  <p class="c2"><span>&#160; -- Maximum number of parallel
  connections from the same IP address.</span></p>

  <p class="c2"><span>&#160; -- A number &lt;= 0 means no
  limit.</span></p>

  <p class="c2"><span>&#160; -- Note: To make rejection of IPs that
  have exceeded their limits</span></p>

  <p class="c2"><span>&#160; -- as fast as possible, limits are
  stored in a DB after TLS handshake</span></p>

  <p class="c2"><span>&#160; -- but consulted before the TLS
  handshake. Connections from the</span></p>

  <p class="c2"><span>&#160; -- same IP with differing certificate
  limits will cause issues such as</span></p>

  <p class="c2"><span>&#160; -- locking out legitimate clients and
  permitting illegitimate clients to</span></p>

  <p class="c2"><span>&#160; -- exceed their limits.<br />
  &#160;<br />
  &#160;</span><span class="c0">maxLogFiles</span><span>&#160;[5]
  INTEGER OPTIONAL,</span></p>

  <p class="c2"><span>&#160; -- Maximum number of files allowed in
  a CLMSG_SAVE_FAI_LOG message.</span></p>

  <p class="c2"><span>&#160; -- A number &lt;= 0 means no
  limit.<br />
  &#160;<br />
  &#160;</span><span class="c0">maxAnswers</span><span>&#160;[6]
  INTEGER OPTIONAL,</span></p>

  <p class="c2"><span>&#160; -- Maximum number of &lt;answerX&gt;
  elements that will be returned in a query</span></p>

  <p class="c2"><span>&#160; -- reply. This is particularly
  relevant to prevent DOS by requesting all</span></p>

  <p class="c2"><span>&#160; -- packages from the package
  database.</span></p>

  <p class="c2"><span>&#160; -- A number &lt;= 0 means no
  limit.</span></p>

  <p class="c2"><span>&#160; -- Note: A non-0 setting in a
  certificate used for</span></p>

  <p class="c2"><span>&#160; -- server-server-communication may
  cause job database inconsistencies</span></p>

  <p class="c2"><span>&#160; -- between the respective
  servers.</span></p>

  <p class="c2"><span>&#160; -- Do not use it in certificates used
  for server-server-communication.<br />
  &#160; &#160;</span></p>

  <p class="c2"><span>&#160;</span> <span class=
  "c0">communicateWith</span><span>&#160;[7] SEQUENCE OF UTF8String
  OPTIONAL</span></p>

  <p class="c2"><span>&#160; -- List of DNS names and/or IP
  addresses with or without port number.</span></p>

  <p class="c2"><span>&#160; -- DNS names may start with a "*" as
  wildcard character</span></p>

  <p class="c2"><span>&#160; -- (e.g.
  "*.example.com:20081").</span></p>

  <p class="c2"><span>&#160; -- A connection is only permitted with
  another system if that system's</span></p>

  <p class="c2"><span>&#160; -- IP/Name/Port matches one of the
  entries in this list.</span></p>

  <p class="c2"><span>&#160; -- When system A and system B verify
  each</span></p>

  <p class="c2"><span>&#160; -- other's certificates at the
  beginning of a connection, system A will</span></p>

  <p class="c2"><span>&#160; -- terminate theconnection immediately
  if system B's certificate contains</span></p>

  <p class="c2"><span>&#160; -- a communicateWiththat does not
  match system A. It does not matter</span></p>

  <p class="c2"><span>&#160; -- which system initiated the
  connection.</span></p>

  <p class="c2"><span>&#160; -- An empty list prevents all incoming
  and outgoing connections.<br />
  }<br />
  &#160; &#160;<br />
  END<br /></span></p>

  <h3><a id="h.e4laqldzi9zn" name="h.e4laqldzi9zn"></a></h3>
  <hr style="page-break-before:always;display:none;" />

  <h3><a id="h.vsdw5poaw05o" name="h.vsdw5poaw05o"></a></h3>

  <h3><a id="h.exo83ys82p8g" name="h.exo83ys82p8g"></a><span>Access
  control by feature</span></h3>

  <p><span>By default go-susi will refuse to answer queries or take
  any kind of action that has some persistent effect. The following
  certificate extension may be used to selectively permit queries
  and actions in reaction to messages from the owner of a
  certificate with this extension. This extension is optional for
  client certificates if you can live without automatic creation of
  LDAP objects for new systems and without automatic updating of
  cn/ipHostNumber in reaction to DNS changes. For server
  certificates however (including the one used by GOsa) this
  extension is required to allow essential
  functions.<br /></span></p>

  <p class="c2"><span><br />
  DEFINITIONS IMPLICIT TAGS ::=<br />
  BEGIN<br />
  &#160;<br />
  gosa-ce-accessControl OBJECT IDENTIFIER ::= { id-msb-gosa 6
  }<br />
  &#160;<br />
  GosaAccessControl ::= SEQUENCE {<br />
  &#160;misc &#160;[0] GosaAccessMisc &#160;OPTIONAL,<br />
  &#160;query [1] GosaAccessQuery OPTIONAL,<br />
  &#160;jobs &#160;[2] GosaAccessJobs &#160;OPTIONAL,<br />
  &#160;incoming &#160; [3] GosaAccessLDAPIncoming OPTIONAL,<br />
  &#160;ldapUpdate [4] GosaAccessLDAPUpdate &#160; OPTIONAL,<br />
  &#160;detectedHw [5] GosaAccessLDAPDetectedHardware
  OPTIONAL<br />
  }<br />
  &#160;<br />
  GosaAccessMisc ::= BIT STRING {</span></p>

  <p class="c2"><span>&#160;<br />
  &#160;</span><span class="c0">debug</span><span>(0),</span></p>

  <p class="c2"><span>&#160; -- This flag permits access to
  functions that are only meant for</span></p>

  <p class="c2"><span>&#160; -- debugging. These functions pose a
  security risk. This flag</span></p>

  <p class="c2"><span>&#160; -- should not be set in a certificate
  used for production systems.<br />
  &#160; &#160;<br />
  &#160;</span><span class="c0">wake</span><span>(1),</span></p>

  <p class="c2"><span>&#160; -- This flag enables the
  server-to-server function trigger_wake.<br />
  &#160; &#160;<br />
  &#160;</span><span class="c0">peer</span><span>(2)</span></p>

  <p class="c2"><span>&#160; -- This flag enables the messages
  new_server,</span></p>

  <p class="c2"><span>&#160; -- confirm_new_server and
  foreign_job_updates, that are the backbone</span></p>

  <p class="c2"><span>&#160; -- of server-to-server
  communication.</span></p>

  <p class="c2"><span>&#160; -- For servers listed in</span>
  <span class="c1">[ServerPackages]/address</span><span>&#160;in
  the config file</span></p>

  <p class="c2"><span>&#160; -- this flag is always assumed to be
  set, even if they present a</span></p>

  <p class="c2"><span>&#160; -- certificate without it. This allows
  setting up server-to-server</span></p>

  <p class="c2"><span>&#160; -- communication via configuration
  files without issuing certificates with</span></p>

  <p class="c2"><span>&#160; -- the peer flag.</span></p>

  <p class="c2"><span>&#160; -- NOTE: This exception does NOT
  extend to servers listed in DNS!<br />
  }<br />
  &#160;<br />
  GosaAccessQuery ::= BIT STRING {</span></p>

  <p class="c2"><span>&#160;<br />
  &#160;</span><span class=
  "c0">queryAll</span><span>(0),</span></p>

  <p class="c2"><span>&#160; -- This flag enables</span>
  <span class="c11">all</span><span>&#160;messages that query
  information. This includes</span></p>

  <p class="c2"><span>&#160; -- database queries such as</span>
  <span class="c1">gosa_query_jobdb</span><span>&#160;and messages
  like</span></p>

  <p class="c2"><span>&#160; --</span> <span class=
  "c1">sistats</span><span>&#160;and</span> <span class=
  "c1">gosa_ping</span><span>.</span></p>

  <p class="c2"><span>&#160; -- If this flag is set, other flags
  of</span> <span class="c1">GosaAccessQuery</span><span>&#160;have
  no effect.</span></p>

  <p class="c2"><span>&#160; -- If it is 0, the other flags may be
  used to enable queries on an</span></p>

  <p class="c2"><span>&#160; -- individual basis. &#160;<br />
  &#160;<br />
  &#160;</span><span class=
  "c0">queryJobs</span><span>(1)</span></p>

  <p class="c2"><span>&#160; -- This flag only enables the message
  gosa_query_jobdb.</span></p>

  <p class="c2"><span>&#160; -- This flag is always assumed to be
  set when the message comes from</span></p>

  <p class="c2"><span>&#160; -- a peer server (see</span>
  <span class="c1">gosa-gn-my-peer</span><span>) because
  server-to-server</span></p>

  <p class="c2"><span>&#160; -- communication uses these queries to
  synchronize job databases.<br />
  }<br />
  &#160;<br />
  GosaAccessJobs ::= BIT STRING {<br />
  &#160;<br />
  &#160;</span><span class="c0">jobsAll</span><span>(0),</span></p>

  <p class="c2"><span>&#160; -- This flag enables creating,
  removing and modifying of jobs. If this</span></p>

  <p class="c2"><span>&#160; -- flag is set, the other</span>
  <span class="c1">GosaAccessJobs</span><span>&#160;flags have no
  effect. If this</span></p>

  <p class="c2"><span>&#160; -- flag is 0, the other flags may be
  used to enable individual job</span></p>

  <p class="c2"><span>&#160; -- messages.</span></p>

  <p class="c2"><span>&#160; -- NOTE: Even though this flag
  enables</span> <span class=
  "c1">job_trigger_activate_new</span><span>,</span></p>

  <p class="c2"><span>&#160; -- the creation of new system objects
  in LDAP requires additional rights</span></p>

  <p class="c2"><span>&#160; -- from</span> <span class=
  "c1">GosaAccessLDAP*</span><span>.<br />
  &#160;<br />
  &#160;</span><span class="c0">lock</span><span>(1),</span></p>

  <p class="c2"><span>&#160; -- This flag enables</span>
  <span class=
  "c1">job_trigger_action_lock</span><span>&#160;and</span></p>

  <p class="c2"><span>&#160; --</span> <span class=
  "c1">gosa_trigger_action_lock.</span><span><br />
  &#160; &#160;<br />
  &#160;</span><span class="c0">unlock</span><span>(2),</span></p>

  <p class="c2"><span>&#160; -- This flag enables</span>
  <span class=
  "c1">job_set_activated_for_installation</span><span>,</span></p>

  <p class="c2"><span>&#160; --</span> <span class=
  "c1">gosa_set_activated_for_installation</span><span>,</span>
  <span class=
  "c1">job_trigger_action_activate</span><span>&#160;and</span></p>

  <p class="c2"><span>&#160; --</span> <span class=
  "c1">gosa_trigger_action_activate</span><span>.<br />
  &#160;<br />
  &#160;</span><span class=
  "c0">shutdown</span><span>(3),</span></p>

  <p class="c2"><span>&#160; -- This flag enables</span>
  <span class="c1">job_trigger_action_halt</span><span>,</span></p>

  <p class="c2"><span>&#160; --</span> <span class=
  "c1">job_trigger_action_reboot</span><span>,</span> <span class=
  "c1">gosa_trigger_action_halt</span><span>&#160;and</span></p>

  <p class="c2"><span>&#160; --</span> <span class=
  "c1">gosa_trigger_action_reboot</span><span>.<br />
  &#160; &#160;<br />
  &#160;</span><span class="c0">wake</span><span>(4),
  &#160;</span></p>

  <p class="c2"><span>&#160; -- This flag enables</span>
  <span class=
  "c1">job_trigger_action_wake</span><span>&#160;and</span></p>

  <p class="c2"><span>&#160; --</span> <span class=
  "c1">gosa_trigger_action_wake</span><span>.<br />
  &#160;<br />
  &#160;</span><span class="c0">abort</span><span>(5),</span></p>

  <p class="c2"><span>&#160; -- This flag enables</span>
  <span class=
  "c1">job_trigger_action_faireboot</span><span>,</span></p>

  <p class="c2"><span>&#160; --</span> <span class=
  "c1">gosa_trigger_action_faireboot</span><span>,</span>
  <span class=
  "c1">job_trigger_action_localboot</span><span>&#160;and</span></p>

  <p class="c2"><span>&#160; --</span> <span class=
  "c1">gosa_trigger_action_localboot</span><span>. These messages
  abort running FAI jobs.<br />
  &#160; &#160;<br />
  &#160;</span><span class="c0">install</span><span>(6),</span></p>

  <p class="c2"><span>&#160; -- This flag enables</span>
  <span class=
  "c1">job_trigger_action_reinstall</span><span>&#160;and</span></p>

  <p class="c2"><span>&#160; --</span> <span class=
  "c1">gosa_trigger_action_reinstall</span><span>.<br />
  &#160;<br />
  &#160;</span><span class="c0">update</span><span>(7),</span></p>

  <p class="c2"><span>&#160; -- This flag enables</span>
  <span class=
  "c1">job_trigger_action_update</span><span>&#160;and</span></p>

  <p class="c2"><span>&#160; --</span> <span class=
  "c1">gosa_trigger_action_update</span><span>.<br />
  &#160;<br />
  &#160;</span><span class=
  "c0">modifyJobs</span><span>(8),</span></p>

  <p class="c2"><span>&#160; -- This flag enables</span>
  <span class=
  "c1">gosa_delete_jobdb_entry</span><span>&#160;and</span></p>

  <p class="c2"><span>&#160; --</span> <span class=
  "c1">gosa_update_status_jobdb_entry</span><span>.<br />
  &#160;<br />
  &#160;</span><span class="c0">newSys</span><span>(9)</span></p>

  <p class="c2"><span>&#160; -- This flag enables</span>
  <span class=
  "c1">gosa_trigger_activate_new</span><span>&#160;and</span></p>

  <p class="c2"><span>&#160; --</span> <span class=
  "c1">job_trigger_activate_new</span><span>.</span></p>

  <p class="c2"><span class="c0">&#160;</span></p>

  <p class="c2"><span class="c0">&#160;
  userMsg</span><span>(10)</span></p>

  <p class="c2"><span>&#160; -- This flag enables</span>
  <span class=
  "c1">job_send_user_msg</span><span>.</span><span><br />
  }<br />
  &#160;</span></p>

  <p class="c2"><span>&#160;<br /></span> <span class=
  "c0">GosaAccessLDAPIncoming</span><span>&#160;::= SEQUENCE OF
  UTF8String</span></p>

  <p class="c2"><span>-- This is a list of URIs of LDAP servers,
  each optionally followed by</span></p>

  <p class="c2"><span>-- a DN (e.g.
  ldaps://ldap.foo.de:389/ou=incoming,o=foo,c=de).</span></p>

  <p class="c2"><span>-- The server component of the URI may start
  with "*" as</span></p>

  <p class="c2"><span>-- a wildcard and the DN may either start or
  end with a "*". Both</span></p>

  <p class="c2"><span>-- parts are permitted to be just "*" (e.g.
  ldap://*/*).</span></p>

  <p class="c2"><span>-- When a client sends its</span>
  <span class="c1">here_i_am</span><span>&#160;to a server and the
  client's</span></p>

  <p class="c2"><span>-- certificate contains a</span> <span class=
  "c1">GosaAccessLDAPIncoming</span><span>&#160;list,
  the</span></p>

  <p class="c2"><span>-- registration will be denied if none of the
  LDAP servers in the</span></p>

  <p class="c2"><span>-- list matches the one used by the contacted
  server.</span></p>

  <p class="c2"><span>-- If present, an entry's optional DN has to
  match the contacted</span></p>

  <p class="c2"><span>-- server's</span> <span class=
  "c1">[server]/new-systems-base</span><span>&#160;configuration
  option</span></p>

  <p class="c2"><span>-- and registration will succeed even if
  there is no LDAP object for</span></p>

  <p class="c2"><span>-- the client yet.</span></p>

  <p class="c2"><span>-- If the optional DN is missing from the
  list entry, then registration</span></p>

  <p class="c2"><span>-- will succeed only if LDAP already contains
  an object for</span></p>

  <p class="c2"><span>-- the client.</span></p>

  <p class="c2"><span>-- An empty</span> <span class=
  "c1">GosaAccessLDAPIncoming</span><span>&#160;list prevents
  registration</span></p>

  <p class="c2"><span>-- with any server.</span></p>

  <p class="c2"><span>-- If the</span> <span class=
  "c1">GosaAccessLDAPIncoming</span><span>&#160;list is not present
  at all in the</span></p>

  <p class="c2"><span>-- certificate, this is equivalent to a list
  ["ldap://*", "ldaps://*"]</span></p>

  <p class="c2"><span>-- which permits registration at any server
  but only if there is an</span></p>

  <p class="c2"><span>-- existing LDAP object for the
  client.</span></p>

  <p class="c2"><span>-- NOTE: The protocol part of list entries is
  significant. An entry that</span></p>

  <p class="c2"><span>-- starts with "ldaps:" will only allow
  registration at servers that talk to</span></p>

  <p class="c2"><span>-- LDAP via a secure connection.<br />
  &#160;<br />
  GosaAccessLDAPUpdate ::= BIT STRING {</span></p>

  <p class="c2"><span><br />
  &#160;</span><span class="c0">cn</span><span>(0),</span></p>

  <p class="c2"><span>&#160; -- When a client registers at a server
  and the cn of the</span></p>

  <p class="c2"><span>&#160; -- client's LDAP entry (as found by
  its MAC address)</span></p>

  <p class="c2"><span>&#160; -- does not match the reverse DNS of
  its IP, the server's</span></p>

  <p class="c2"><span>&#160; -- behaviour depends on this flag in
  the client's certificate:</span></p>

  <p class="c2"><span>&#160; -- If the flag is set, the
  registration succeeds and the LDAP</span></p>

  <p class="c2"><span>&#160; -- entry is updated with the new
  name.</span></p>

  <p class="c2"><span>&#160; -- If the flag is unset or</span>
  <span class="c1">GosaAccessLDAPUpdate</span><span>&#160;is not
  present</span></p>

  <p class="c2"><span>&#160; -- in the certificate, registration
  will fail.<br />
  &#160;<br />
  &#160;</span><span class="c0">ip</span><span>(1),</span></p>

  <p class="c2"><span>&#160; -- When a client registers at a server
  and the ipHostNumber of the</span></p>

  <p class="c2"><span>&#160; -- client's LDAP entry (as found by
  its MAC address)</span></p>

  <p class="c2"><span>&#160; -- does not match the client's IP, the
  server's</span></p>

  <p class="c2"><span>&#160; -- behaviour depends on this flag in
  the client's certificate:</span></p>

  <p class="c2"><span>&#160; -- If the flag is set, the
  registration succeeds and the LDAP</span></p>

  <p class="c2"><span>&#160; -- entry is updated with the new
  IP.</span></p>

  <p class="c2"><span>&#160; -- If the flag is unset or</span>
  <span class="c1">GosaAccessLDAPUpdate</span><span>&#160;is not
  present</span></p>

  <p class="c2"><span>&#160; -- in the certificate, registration
  will fail.<br />
  &#160;<br />
  &#160;</span><span class="c0">mac</span><span>(2),</span></p>

  <p class="c2"><span>&#160; -- When a client registers at a server
  and there is no LDAP entry for its</span></p>

  <p class="c2"><span>&#160; -- MAC address, but there is an LDAP
  entry whose ipHostNumber</span></p>

  <p class="c2"><span>&#160; -- matches the client's IP, then the
  server's behaviour depends on this</span></p>

  <p class="c2"><span>&#160; -- flag:</span></p>

  <p class="c2"><span>&#160; -- If the flag is unset (or</span>
  <span class="c1">GosaAccessLDAPUpdate</span><span>&#160;is not
  present)</span></p>

  <p class="c2"><span>&#160; -- registration will fail even
  if</span> <span class=
  "c1">GosaAccessLDAPIncoming</span><span>&#160;would
  permit</span></p>

  <p class="c2"><span>&#160; -- creation of a new LDAP
  entry.</span></p>

  <p class="c2"><span>&#160; -- If the flag is set and the cn of
  the existing LDAP entry matches the</span></p>

  <p class="c2"><span>&#160; -- reverse DNS of the client's IP, or
  the</span> <span class="c0">cn</span><span>&#160;flag is set,
  then the</span></p>

  <p class="c2"><span>&#160; -- macaddress attribute of the
  existing entry will be updated and</span></p>

  <p class="c2"><span>&#160; -- registration succeeds.</span></p>

  <p class="c2"><span>&#160; -- If the flag is set but the client's
  reverse DNS does not match the cn</span></p>

  <p class="c2"><span>&#160; -- and the</span> <span class=
  "c0">cn</span><span>&#160;flag is not set, then registration will
  fail even if</span></p>

  <p class="c2"><span>&#160; --</span> <span class=
  "c1">GosaAccessLDAPIncoming</span><span>&#160;would permit
  creating a new LDAP entry.<br />
  &#160;<br />
  &#160;</span><span class="c0">dh</span><span>(3)</span></p>

  <p class="c2"><span>&#160; -- This flag enables using the</span>
  <span class="c1">detected_hardware</span><span>&#160;message to
  modify</span></p>

  <p class="c2"><span>&#160; -- existing LDAP entries. If this flag
  is unset or &#160;</span><span class=
  "c1">GosaAccessLDAPUpdate</span></p>

  <p class="c2"><span>&#160; -- is not present, the server will
  only accept</span> <span class=
  "c1">detected_hardware</span><span>&#160;if there</span></p>

  <p class="c2"><span>&#160; -- is no existing LDAP entry. This is
  not necessary for normal FAI/GOsa</span></p>

  <p class="c2"><span>&#160; -- operation.</span></p>

  <p class="c2"><span>&#160; -- See also</span> <span class=
  "c1">GosaAccessLDAPDetectedHardware</span><span>.<br />
  }<br />
  &#160;<br /></span><span class=
  "c0">GosaAccessLDAPDetectedHardware</span><span>&#160;::= BIT
  STRING {</span></p>

  <p class="c2"><span>-- ATTENTION! The following flags enable
  extended functionality of<br />
  -- the</span> <span class=
  "c1">detected_hardware</span><span>&#160;message that permits a
  variety of modifications</span></p>

  <p class="c2"><span>-- of LDAP objects.</span></p>

  <p class="c2"><span>-- The</span> <span class=
  "c0">template</span><span>&#160;flag has some use cases in a
  certificate used in a FAIROOT</span></p>

  <p class="c2"><span>-- for installing new clients. All of the
  other flags are useful only for</span></p>

  <p class="c2"><span>-- special applications such as interfacing
  with other software distribution</span></p>

  <p class="c2"><span>-- systems or batch importing systems into
  LDAP.</span></p>

  <p class="c2"><span>-- Do not use any of the below flags in a
  certificate unless you have a</span></p>

  <p class="c2"><span>-- specific reason to do so.<br />
  &#160;</span></p>

  <p class="c2"><span>&#160;</span> <span class=
  "c0">unprompted</span><span>(0),</span></p>

  <p class="c2"><span>&#160; -- This flag allows the sending of
  the</span> <span class=
  "c1">detected_hardware</span><span>&#160;message to a</span></p>

  <p class="c2"><span>&#160; -- server even if that server has not
  requested it by sending a</span></p>

  <p class="c2"><span>&#160; --</span> <span class=
  "c1">detect_hardware</span><span>&#160;message.<br />
  &#160;<br />
  &#160;</span><span class=
  "c0">template</span><span>(1),</span></p>

  <p class="c2"><span>&#160; -- This flag tells the server that it
  should use template objects (see</span></p>

  <p class="c2"><span>&#160; -- description of detected_hardware
  message) when processing a</span></p>

  <p class="c2"><span>&#160; --</span> <span class=
  "c1">detected_hardware</span><span>&#160;message.<br />
  &#160;<br />
  &#160;</span><span class="c0">dn</span><span>(2),</span></p>

  <p class="c2"><span>&#160; -- This flag permits the sender
  of</span> <span class="c1">detected_hardware</span><span>&#160;to
  specify the DN</span></p>

  <p class="c2"><span>&#160; -- of the LDAP object to create in
  the</span> <span class=
  "c1">detected_hardware</span><span>&#160;message, even</span></p>

  <p class="c2"><span>&#160; -- if that DN is not in the tree
  configured as</span> <span class=
  "c1">[server]/new-systems-base</span><span>.</span></p>

  <p class="c2"><span>&#160; -- In combination with the</span>
  <span class="c0">dh</span> <span>flag</span> <span>from</span>
  <span class="c1">GosaAccessLDAPUpdate</span></p>

  <p class="c2"><span>&#160; --</span> <span>this even permits
  moving of systems within the LDAP directory.<br />
  &#160;<br />
  &#160;</span><span class="c0">cn</span><span>(3),</span></p>

  <p class="c2"><span>&#160; -- This flag permits the sender
  of</span> <span class="c1">detected_hardware</span><span>&#160;to
  specify the CN</span></p>

  <p class="c2"><span>&#160; -- of the LDAP object to create in
  the</span> <span class=
  "c1">detected_hardware</span><span>&#160;message,</span></p>

  <p class="c2"><span>&#160; -- even if it does not match the name
  obtained from reverse DNS of</span></p>

  <p class="c2"><span>&#160; -- the sender's IP.<br />
  &#160; &#160;<br />
  &#160;</span><span class=
  "c0">ipHostNumber</span><span>(4),</span></p>

  <p class="c2"><span>&#160; -- This flag permits the sending of a
  detected_hardware message containing</span></p>

  <p class="c2"><span>&#160; -- a &lt;ipHostNumber&gt; element with
  a different IP than that of the sender.<br />
  &#160;<br />
  &#160;</span><span class=
  "c0">macAddress</span><span>(5)</span></p>

  <p class="c2"><span>&#160; -- This flag permits specifying the
  MAC address in a</span> <span class=
  "c1">detected_hardware</span></p>

  <p class="c2"><span>&#160; -- message. Without this flag the MAC
  address from the most recent</span></p>

  <p class="c2"><span>&#160; --</span> <span class=
  "c1">here_i_am</span><span>&#160;or</span> <span class=
  "c1">new_foreign_client</span><span>&#160;is used that matches
  the &lt;source&gt;</span></p>

  <p class="c2"><span>&#160; -- of the detected_hardware
  message.</span></p>

  <p class="c2"><span>&#160; -- ATTENTION! This flag allows the
  creation of multiple LDAP objects</span></p>

  <p class="c2"><span>&#160; -- with the same</span> <span class=
  "c1">macAddress</span><span>.<br />
  }<br />
  <br />
  END<br /></span></p>

  <p><span><br />
  <br /></span></p>
  <hr style="page-break-before:always;display:none;" />
  <a href="#" id="id.l8s0fislnev7" name="id.l8s0fislnev7"></a>

  <h1><a id="h.jjoyi1fwsh2p" name=
  "h.jjoyi1fwsh2p"></a><span>License</span></h1>

  <p><span>This document is Copyright &#169; 2012,2013 Matthias S.
  Benkmann and licensed under the CC-BY-SA-3.0 license as found
  at</span> <span class="c6"><a class="c8" href=
  "https://www.google.com/url?q=http://creativecommons.org/licenses/by-sa/3.0/deed.en_US&amp;sa=D&amp;ust=1454670274655000&amp;usg=AFQjCNEn9Y9OfQrlCDverq9nb7lM83G4jg">
  http://creativecommons.org/licenses/by-sa/3.0/deed.en_US</a></span><span>.</span></p>
</body>
</html>
